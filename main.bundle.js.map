{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/index.html","webpack:///./src/js/consts.ts","webpack:///./src/js/utils/generalUtils.ts","webpack:///./src/js/utils/localStorage.ts","webpack:///./src/js/generator/generator.ts","webpack:///./src/js/utils/errorCodes.ts","webpack:///./src/js/utils/server.ts","webpack:///./src/js/components/app/ducks/requests.ts","webpack:///./src/js/components/app/ducks/actions.ts","webpack:///./src/js/components/buttons/Button.tsx","webpack:///./src/js/components/app/ducks/reducer.ts","webpack:///./src/js/utils/arrayUtils.ts","webpack:///./src/js/components/game-page/helpers/gameTable.ts","webpack:///./src/js/components/app/ducks/selectors.ts","webpack:///./src/js/components/game-page/helpers/helpers.ts","webpack:///./src/js/components/game-page/ducks/selectors.ts","webpack:///./src/js/components/game-page/helpers/gameNotesCells.ts","webpack:///./src/js/components/popup/Popup.tsx","webpack:///./src/js/components/popup/ducks/selectors.ts","webpack:///./src/js/components/game-page/ducks/reducer.ts","webpack:///./src/js/components/svg/Icons.tsx","webpack:///./src/js/components/popup/ducks/actions.tsx","webpack:///./src/js/components/game-page/ducks/actions.tsx","webpack:///./src/js/components/side-menu/ducks/actions.tsx","webpack:///./src/js/components/menu-content/types.ts","webpack:///./src/js/components/popup/ducks/reducer.ts","webpack:///./src/js/components/side-menu/ducks/reducer.ts","webpack:///./src/js/ducks/store.ts","webpack:///./src/js/ducks/middlewares/network.ts","webpack:///./src/js/components/main-menu/MainMenu.tsx","webpack:///./src/js/components/menu-content/MenuContentSection.tsx","webpack:///./src/js/components/checkbox/Checkbox.tsx","webpack:///./src/js/components/menu-content/SettingsSection.tsx","webpack:///./src/js/components/menu-content/RulesSection.tsx","webpack:///./src/js/components/menu-content/ContactsSection.tsx","webpack:///./src/js/components/menu-content/StatsSection.tsx","webpack:///./src/js/components/menu-content/AboutSection.tsx","webpack:///./src/js/components/lobby-page/LobbyPage.tsx","webpack:///./src/js/components/side-menu/ducks/selectors.ts","webpack:///./src/js/components/side-menu/SideMenu.tsx","webpack:///./src/js/components/sudoku-cell/helpers.ts","webpack:///./src/js/components/sudoku-cell/Cell.tsx","webpack:///./src/js/components/sudoku-table/SudokuTable.tsx","webpack:///./src/js/components/slider/Slider.tsx","webpack:///./src/js/components/game-page/GamePage.tsx","webpack:///./src/js/index.tsx","webpack:///./src/js/components/app/App.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Page","GameDifficulty","GameType","CellMode","StorageKeys","removeDuplicates","arr","pos","next","props","matrix","mask","createTemplate","val","gameTemplate","row","gameType","col","ratio","Math","floor","shufflePairs","rand1","rand2","newArr","randomize","shuffle","ceil","random","shuffleColumns","pos1","pos2","originalVal","shuffleColumnsInGrid","shuffleRowsInGrid","maskGame","grid","maskPositions","rand","dif","difficulty","includes","generate","fns","reduce","f","g","args","compose","this","type","Default","sqrt","HTTPStatusCode","storageKeysToDefaultMap","DisableInGameError","DisableHighlighting","DisableAutoNotesRemoval","UserId","getStorageKey","localStorage","getItem","Error","JSON","parse","setStorageKey","setItem","stringify","console","error","SERVER_URL","USER_ENDPOINT","commonOptions","headers","timeout","request","url","a","body","post","isErrorResponse","undefined","status","getUser","id","saveGame","config","state","GameButtonSize","setPage","payload","setCurrentGame","setLobbyIsLoading","setLobbyHasError","setLobbyMenuSection","setError","message","INTERNAL_SERVER_ERROR","initialState","page","Menu","currentGame","lobbyIsLoading","lobbyHasError","lobbyMenuSection","errors","sortByRows","callback","sortByCols","sortByGrids","gameRatio","rowPos","rowGrid","colGrid","getDuplicates","cellProps","pencilCellsRows","Notes","pencilCellsCols","pencilCellsGrids","findDuplicates","rows","cols","grids","duplicates","outer","inner","currentPos","nextPos","getPage","app","getCurrentGame","getHasCurrentGame","getLobbyIsLoading","getLobbyHasError","getLobbyMenuSection","updateCellsCellMode","cellMode","newCellProps","hasInvalidEndgameCells","updateCellsHighlight","selectedCell","cell","matchesValue","withHighlight","getCellMode","game","getCellProps","areCellsDisabled","GameState","Win","GameOver","gameState","getGameState","removeDuplicateNotesCells","coor","notesCellsRows","notesCellsCols","notesCellsGrids","x","y","getDuplicateNotesCells","split","filter","join","MenuButton","className","reversed","disabled","onClick","index","mapPropsToMenuButtons","buttons","map","PopupText","GameButton","icon","size","selected","Small","getPopupProps","popup","PopupTextMap","Solve","Reset","Duplicates","Check","NetworkError","Popup","text","hidden","isHidden","mapPropsToGameButtons","crossSvg","viewBox","arrowSvg","checkSvg","menuSvg","spinnerSvg","showPopup","setCellProps","setCellValue","updateGameState","dispatch","getState","New","values","forEach","isReadOnlyCell","withError","ReadOnly","Pencil","getNewCellProps","currentCellProps","getEndgameCellProps","showWinPopup","checkForWin","hasInvalidCells","hasDuplicates","showCheckPopup","updatePencilCells","disableInGameError","resetCellStatus","updateNotesCells","disableAutoNotesRemoval","canAutomaticallyUpdateNotesCells","MenuSection","isOpen","rootReducer","action","newCellMode","sideMenu","store","ArrowDirection","menuSectionButtons","Stats","Settings","Rules","About","MainMenu","isLoading","hasError","hasCurrentGame","generateGame","Game","startNewGame","leftColumn","Easy","Medium","Hard","rightColumn","section","href","target","rel","render","arrowClassNames","arrow","Left","crossOnClick","title","content","withFooter","arrowOnClick","isChecked","storageKey","onChange","setState","checked","getContent","disableInGameProps","disableHighlightingProps","disableAutoNotesRemovalProps","Contacts","mapMenuSectionToComponent","LobbyPage","currentSection","getSectionComponent","Component","getSideMenuIsOpen","SideMenu","returnToLobby","sideMenuButtons","showResetPopup","showSolvePopup","findCoordinates","tableCell","parentElement","coorRow","rowIndex","coorCol","cellIndex","getCellPosFromElement","Cell","isDisabled","onSelect","e","select","selectCellContent","readOnly","maxLength","onKeyUp","keyCode","sudokuTable","document","querySelector","cells","children","focus","arrowKeys","onFocus","match","newValue","sort","updateCellValue","SudokuTable","cellState","getTable","Slider","GamePage","selectedPage","isLobby","handleCurrentUser","getElementById"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,GAAG,IAElBM,I,8UCvJTY,EAAOD,QAAU,sO,2CCKL+B,EAKAC,EAMAC,EAUAC,E,qDArBZ,SAAYH,GACV,mBACA,mBAFF,CAAYA,MAAI,KAKhB,SAAYC,GACV,mBACA,uBACA,mBAHF,CAAYA,MAAc,KAM1B,SAAYC,GACV,yBADF,CAAYA,MAAQ,KAUpB,SAAYC,GACV,kBACA,gBACA,sBAHF,CAAYA,MAAQ,KC1Bb,I,ECAKC,EDGCC,EAAmB,SAAIC,GAClC,GAAmB,IAAfA,EAAI5D,OACN,IAAK,IAAI6D,EAAM,EAAGA,EAAMD,EAAI5D,OAAQ6D,IAClC,IAAK,IAAIC,EAAO,EAAGA,EAAOF,EAAI5D,OAAS6D,EAAKC,IACtCF,EAAIC,KAASD,EAAIC,EAAMC,IACzBF,EAAI1C,OAAO2C,EAAMC,EAAM,GAK/B,OAAOF,GEVT,EAQE,SAAYG,GAAZ,WAJgB,KAAAC,OAAmB,GACnB,KAAAC,KAAiB,GA0BzB,KAAAC,eAAiB,WAIvB,IAHA,IAEIC,EAFEC,EAAyB,GAGtBC,EAAM,EAAGA,EAAM,EAAKC,SAAUD,IACrC,IAAK,IAAIE,EAAM,EAAGA,EAAM,EAAKD,SAAUC,IAOrCJ,GACIE,EAAM,EAAKG,MAAQC,KAAKC,MAAML,EAAM,EAAKG,OAASD,GAClD,EAAKD,SACP,EAEFF,EADMC,EAAM,EAAKC,SAAWC,GACRJ,EAGxB,OAAOC,GAOD,KAAAO,aAAe,SAACf,GAItB,IAHA,IAAIgB,EACAC,EACEC,EAASlB,EAAIP,QACV0B,EAAY,EAAGA,EAAY,EAAKC,QAASD,IAAa,CAC7DH,EAAQH,KAAKQ,KAAKR,KAAKS,SAAW,EAAKZ,UACvC,GACEO,EAAQJ,KAAKQ,KAAKR,KAAKS,SAAW,EAAKZ,gBAChCM,IAAUC,GAEnB,IAAK,IAAIhB,EAAM,EAAGA,EAAMiB,EAAO9E,OAAQ6D,IACjCiB,EAAOjB,KAASe,EAClBE,EAAOjB,GAAOgB,EACLC,EAAOjB,KAASgB,IACzBC,EAAOjB,GAAOe,GAIpB,OAAOE,GAOD,KAAAK,eAAiB,SAACvB,GAOxB,IANA,IAAIgB,EACAC,EACAO,EACAC,EACAC,EACER,EAASlB,EAAIP,QACV0B,EAAY,EAAGA,EAAY,EAAKC,QAASD,IAAa,CAC7DH,EAAQH,KAAKC,MAAMD,KAAKS,SAAW,EAAKV,OACxC,GACEK,EAAQJ,KAAKC,MAAMD,KAAKS,SAAW,EAAKV,aACjCI,IAAUC,GAEnB,IAAK,IAAIhB,EAAM,EAAGA,EAAM,EAAKS,SAAUT,IAMrCuB,EACEvB,EAAM,EAAKS,UAAYM,EAAQ,EAAKJ,MAASO,EAAY,EAAKP,OAChEa,EACExB,EAAM,EAAKS,UAAYO,EAAQ,EAAKL,MAASO,EAAY,EAAKP,OAChEc,EAAcR,EAAOM,GACrBN,EAAOM,GAAQN,EAAOO,GACtBP,EAAOO,GAAQC,EAGnB,OAAOR,GAOD,KAAAS,qBAAuB,SAAC3B,GAO9B,IANA,IAAIgB,EACAC,EACAO,EACAC,EACAC,EACER,EAASlB,EAAIP,QACV0B,EAAY,EAAGA,EAAY,EAAKC,QAASD,IAAa,CAC7DH,EAAQH,KAAKC,MAAMD,KAAKS,SAAW,EAAKV,OACxC,GACEK,EAAQJ,KAAKC,MAAMD,KAAKS,SAAW,EAAKV,aACjCI,IAAUC,GAEnB,IAAK,IAAIhB,EAAM,EAAGA,EAAM,EAAKS,SAAUT,IAMrCuB,EACEvB,EAAM,EAAKS,UAAaS,EAAY,EAAKP,MAAS,EAAKA,MAAQI,GACjES,EACExB,EAAM,EAAKS,UAAaS,EAAY,EAAKP,MAAS,EAAKA,MAAQK,GACjES,EAAcR,EAAOM,GACrBN,EAAOM,GAAQN,EAAOO,GACtBP,EAAOO,GAAQC,EAGnB,OAAOR,GAGD,KAAAU,kBAAoB,SAAC5B,GAO3B,IANA,IAAIgB,EACAC,EACAO,EACAC,EACAC,EACER,EAASlB,EAAIP,QACV0B,EAAY,EAAGA,EAAY,EAAKC,QAASD,IAAa,CAC7DH,EAAQH,KAAKC,MAAMD,KAAKS,SAAW,EAAKV,OACxC,GACEK,EAAQJ,KAAKC,MAAMD,KAAKS,SAAW,EAAKV,aACjCI,IAAUC,GAEnB,IAAK,IAAIhB,EAAM,EAAGA,EAAM,EAAKS,SAAUT,IAOrCuB,EACEvB,EAAM,EAAKS,UAAaS,EAAY,EAAKP,MAAS,EAAKA,MAAQI,GACjES,EACExB,EAAM,EAAKS,UAAaS,EAAY,EAAKP,MAAS,EAAKA,MAAQK,GACjES,EAAcR,EAAOM,GACrBN,EAAOM,GAAQN,EAAOO,GACtBP,EAAOO,GAAQC,EAGnB,OAAOR,GAGD,KAAAW,SAAW,SAACzB,GAGlB,IAFA,IAAMJ,EAAMI,EAAOX,QAEVqC,EAAO,EAAGA,EAAO,EAAKpB,SAAUoB,IAAQ,CAI/C,IAFA,IAAMC,EAA0B,GAC5BC,OAAI,EACCC,EAAM,EAAGA,EAAM,EAAKC,WAAYD,IAAO,CAC9C,GACED,EAAOnB,KAAKC,MAAMD,KAAKS,SAAW,EAAKZ,gBAChCqB,EAAcI,SAASH,IAChCD,EAAcrF,KAAKsF,GAGrB,IAAK,IAAIrB,EAAM,EAAGA,EAAM,EAAKD,SAAUC,IACjCoB,EAAcI,SAASxB,KASzBX,EANEW,GACC,EAAKD,SAAW,EAAKE,OAASC,KAAKC,MAAMH,EAAM,EAAKC,OAErDkB,EAAO,EAAKlB,MAEZC,KAAKC,MAAMgB,EAAO,EAAKlB,OAAS,EAAKF,UAAY,EAAKE,MAAQ,IACrD,GAIjB,OAAOZ,GAGD,KAAAoC,SAAW,WACjB,IAAMhC,EFxNa,W,IAAC,sDACtB,OAAAiC,EAAIC,QAAO,SAACC,EAAGC,GAAM,kB,IAAC,sDAAmB,OAAAD,EAAEC,EAAC,aAAIC,QEuNrBC,CACvB,EAAKd,kBACL,EAAKD,qBACL,EAAKJ,eACL,EAAKR,aAJkB2B,CAKvB,EAAKpC,kBAGP,MAAO,CAAEF,OAAM,EAAEC,KAFJ,EAAKwB,SAASzB,KAlN3BuC,KAAKjC,SAAWP,EAAMyC,MAAQhD,EAASiD,QACvCF,KAAKT,WAAa/B,EAAM+B,WACxBS,KAAK/B,MAAQC,KAAKiC,KAAKH,KAAKjC,UAC5BiC,KAAKvB,QAAUjB,EAAMiB,SAAW,GAChC,IAAMnE,EAAS0F,KAAKP,WACpBO,KAAKvC,OAASnD,EAAOmD,OACrBuC,KAAKtC,KAAOpD,EAAOoD,ODlBvB,SAAYP,GACV,0CACA,4CACA,oDACA,kBAJF,CAAYA,MAAW,KAShB,IELKiD,EFKCC,IAAuB,MAGjClD,EAAYmD,qBAAqB,EAClC,EAACnD,EAAYoD,sBAAsB,EACnC,EAACpD,EAAYqD,0BAA0B,EACvC,EAACrD,EAAYsD,QAAS,G,GAGXC,EAAgB,SAACrE,GAC5B,IACE,IAAMN,EAAQa,OAAO+D,aAAaC,QAAQvE,GAC1C,GAAc,OAAVN,EACF,MAAM8E,MAER,OAAOC,KAAKC,MAAMhF,GAClB,SACA,OAAOsE,EAAwBhE,KAItB2E,EAAgB,SAAC3E,EAAkBN,GAC9C,IACEa,OAAO+D,aAAaM,QAAQ5E,EAAKyE,KAAKI,UAAUnF,IAChD,SACAoF,QAAQC,MAAM,kDAAkD/E,K,gBGhC9DgF,EAEA,0CAKOC,EAAmBD,EAAU,QAOpCE,EAAoC,CACxCC,QALoB,CACpB,gBAAiB,sBAKjBC,QAX6B,MAgBlBC,EACN,SAAUC,GACb,OAAO,EAAAC,EAAMjG,IAAOgG,EAAKJ,IAFhBG,EAIL,SAAUC,EAAaE,GAC3B,YAD2B,IAAAA,MAAA,IACpB,EAAAD,EAAME,KAAQH,EAAKE,EAAMN,ICdvBQ,EAAkB,SAC7B9I,GAEA,IACE,YAA0C+I,IAAlC/I,EAAuBgJ,OAC/B,SACA,OAAO,IAOEC,EAAU,SAACC,GACtB,OAAAT,EAAyCJ,EAAa,IAAIa,IAE/CC,EAAW,SAACC,EAA+BC,GACtD,OAAAZ,EDrBmCL,mDCqBoB,CACrDgB,OAAM,EACNC,MAAK,EACLH,GAAIzB,EAAcvD,EAAYsD,YF9BlC,SAAYL,GAQV,6BAKA,mDAOA,iCAQA,iBAKA,2BAMA,6BAOA,uEAKA,iCAMA,uCAOA,2CAMA,qCAMA,6CAMA,2BAOA,6CAKA,+CAUA,uBAQA,+BAMA,qCAOA,+BAKA,qCAQA,iDAOA,iDAMA,mCAQA,qCAOA,6CAMA,+BAMA,+BAMA,iDAKA,yCAKA,uEAOA,2CAMA,6BASA,qBAKA,2CAKA,mDAKA,+CAOA,qCAMA,yDAOA,uDAKA,iDAOA,uCAKA,mDAKA,qDAKA,yBAKA,+CAKA,6CAQA,uDAKA,+CAMA,2EAMA,uEAKA,uDAMA,2CAKA,mCAMA,mDAKA,2CAKA,iEAKA,2DAKA,qDAKA,uCAKA,qCAOA,2EApXF,CAAYA,MAAc,KGSnB,ICiBKmC,EDRCC,EAAU,SAACC,GAAiC,OACvDxC,KAVsB,gBAWtBwC,QAAO,IAOIC,EAAiB,SAACD,GAAwC,OACrExC,KAlB8B,wBAmB9BwC,QAAO,IAOIE,EAAoB,SAC/BF,GAC4B,OAC5BxC,KA5BkC,4BA6BlCwC,QAAO,IAOIG,EAAmB,SAACH,GAA6C,OAC5ExC,KApCiC,2BAqCjCwC,QAAO,IAOII,EAAsB,SACjCJ,GAC8B,OAC9BxC,KA9CoC,8BA+CpCwC,QAAO,IAIIK,EAAW,SAACL,GAMvB,MAAO,CACLxC,KAzDqB,iBA0DrBwC,QAPY,CACZM,QAASN,EAAQM,SAAW,yBAC5Bd,OACGQ,EAA0BR,QAAU7B,EAAe4C,yBEhCpDC,EAAsB,CAC1BC,KAAMnG,EAAKoG,KACXC,iBAAapB,EACbqB,gBAAgB,EAChBC,eAAe,EACfC,sBAAkBvB,EAClBwB,OAAQ,IClCGC,EAAa,SACxB1F,EACA2F,GAKA,IAHA,IAEMrG,EAAqB,GAClBS,EAAM,EAAGA,EAAMC,EAAUD,IAAO,CACvCT,EAAItD,KAAK,IACT,IAAK,IAAIiE,EAAM,EAAGA,EAAMD,EAAUC,IAGhC0F,EADS,CAAE5F,IAAG,EAAER,IADVQ,EAAMC,EAAWC,EACFX,IAAG,IAI5B,OAAOA,GAaIsG,EAAa,SACxB5F,EACA2F,GAKA,IAHA,IAEMrG,EAAqB,GAClBW,EAAM,EAAGA,EAAMD,EAAUC,IAAO,CACvCX,EAAItD,KAAK,IACT,IAAK,IAAI+D,EAAM,EAAGA,EAAMC,EAAUD,IAGhC4F,EADS,CAAE1F,IAAG,EAAEV,IADVU,EAAMD,EAAWD,EACFT,IAAG,IAI5B,OAAOA,GAgBIuG,EAAc,SACzB7F,EACA8F,EACAH,GASA,IAPA,IAAIvE,EACA2E,EAIEzG,EAAqB,GAElB0G,EAAU,EAAGA,EAAUF,EAAWE,IAEzC,IAAK,IAAIC,EAAU,EAAGA,EAAUH,EAAWG,IAAW,CAEpD7E,EAAO4E,EAAUF,EAAYG,EAC7B3G,EAAItD,KAAK,IAET,IAAK,IAAI+D,EAAM,EAAGA,EAAM+F,EAAW/F,IAAO,CAExCgG,GAAUhG,EAAMiG,EAAUF,GAAa9F,EAEvC,IAAK,IAAIC,EAAM,EAAGA,EAAM6F,EAAW7F,IAMjC0F,EADS,CAAE5F,IAAG,EAAEE,IAAG,EAAEmB,KAAI,EAAE7B,IADrBwG,GAFG9F,EAAMgG,EAAUH,GAGOxG,IAAG,KAM3C,OAAOA,GClGI4G,EAAgB,SAC3BC,EACAnG,EACA8F,GAEA,IAAMM,EAAkBV,EAAW1F,GAAU,SAAC,G,IAAEV,EAAA,EAAAA,IAAKS,EAAA,EAAAA,IAAKR,EAAA,EAAAA,IACpD4G,EAAU5G,GAAKrB,OAASiB,EAASkH,OAASF,EAAU5G,GAAKvB,OAC3DsB,EAAIS,GAAK/D,KAAKuD,MAGZ+G,EAAkBV,EAAW5F,GAAU,SAAC,G,IAAEV,EAAA,EAAAA,IAAKW,EAAA,EAAAA,IAAKV,EAAA,EAAAA,IACpD4G,EAAU5G,GAAKrB,OAASiB,EAASkH,OAASF,EAAU5G,GAAKvB,OAC3DsB,EAAIW,GAAKjE,KAAKuD,MAGZgH,EAAmBV,EACvB7F,EACA8F,GACA,SAAC,G,IAAExG,EAAA,EAAAA,IAAK8B,EAAA,EAAAA,KAAM7B,EAAA,EAAAA,IACR4G,EAAU5G,GAAKrB,OAASiB,EAASkH,OAASF,EAAU5G,GAAKvB,OAC3DsB,EAAI8B,GAAMpF,KAAKuD,MAarB,OATmBF,EACjBmH,EACEJ,EACAE,EACAC,EACAJ,KAUAK,EAAiB,SACrBC,EACAC,EACAC,EACAR,GAIA,IAFA,IAAM7G,EAAG,YAAmBmH,EAASC,EAASC,GACxCC,EAAuB,GACpBC,EAAQ,EAAGA,EAAQvH,EAAI5D,OAAQmL,IACtC,IAAK,IAAIC,EAAQ,EAAGA,EAAQxH,EAAIuH,GAAOnL,OAAQoL,IAC7C,IAAK,IAAIvH,EAAM,EAAGA,EAAMD,EAAIuH,GAAOnL,OAASoL,EAAOvH,IAAO,CACxD,IAAMwH,EAAazH,EAAIuH,GAAOC,GACxBE,EAAU1H,EAAIuH,GAAOC,EAAQvH,GAC/B4G,EAAUY,GAAY/I,QAAUmI,EAAUa,GAAShJ,QACrD4I,EAAW5K,KAAK+K,GAChBH,EAAW5K,KAAKgL,IAKxB,OAAOJ,GChEIK,EAAU,SAAC1C,GAAqB,OAAAA,EAAM2C,IAAI/B,MAC1CgC,EAAiB,SAAC5C,GAAqB,OAAAA,EAAM2C,IAAI7B,aACjD+B,EAAoB,SAAC7C,GAAqB,QAAEA,EAAM2C,IAAI7B,aACtDgC,EAAoB,SAAC9C,GAAqB,OAAAA,EAAM2C,IAAI5B,gBACpDgC,EAAmB,SAAC/C,GAAqB,OAAAA,EAAM2C,IAAI3B,eACnDgC,EAAsB,SAAChD,GAClC,OAAAA,EAAM2C,IAAI1B,kBCgECgC,EAAsB,SACjCrB,EACAsB,GAEA,IAAMC,EAA8B,GACpC,IAAK,IAAMpJ,KAAO6H,EAChB,GAAIA,EAAUtK,eAAeyC,GAAM,CACjC,IAAMmB,EAAQ0G,EAAU7H,GACxBoJ,EAAapJ,GAAOmB,EAAMzB,MAAQyB,EAAQ,2BAAKA,GAAK,CAAEvB,KAAMuJ,IAIhE,OAAOC,GAMIC,EAAyB,SAACxB,GACrC,IAAK,IAAM7H,KAAO6H,EAChB,GACGA,EAAUtK,eAAeyC,IACxB6H,EAAU7H,GAAKJ,OAASiB,EAASkH,QAClCF,EAAU7H,GAAKN,MAEhB,OAAO,EAGX,OAAO,GA4BI4J,EAAuB,SAClCzB,EACA0B,GAEA,IA7BkCC,EA6B5BJ,EAA8B,GAEpC,IAAK,IAAMpJ,KAAO6H,EAChB,GAAIA,EAAUtK,eAAeyC,GAAM,CACjC,IAAMyJ,EACJ5B,EAAU7H,GAAKJ,OAASiB,EAASkH,OACjCwB,EAAa7J,QAAUmI,EAAU7H,GAAKN,MACxC0J,EAAapJ,GAAO,2BACf6H,EAAU7H,IAAI,CACjB0J,eAtC4BF,EAsCOD,IArChCC,EAAK9J,OAAS8J,EAAK5J,OAASiB,EAASkH,OAqCY0B,KAK1D,OAAOL,GC/IIO,GAAc,SAAC1D,GAAqB,OAAAA,EAAM2D,KAAKT,UAC/CU,GAAe,SAAC5D,GAAqB,OAAAA,EAAM2D,KAAK/B,WAEhDiC,GAAmB,SAAC7D,GAC/B,MAAO,CAAC8D,GAAUC,IAAKD,GAAUE,UAAU9G,SAFjB,SAAC8C,GAAqB,OAAAA,EAAM2D,KAAKM,UAEPC,CAAalE,KCsCtDmE,GAA4B,SACvC1I,EACA8F,EACAK,EACA0B,EACAc,GAEA,IAAM/B,EA1CuB,SAC7B5G,EACA8F,EACAK,EACAwC,GAEA,IAAMC,EAAiBlD,EAAW1F,GAAU,SAAC,G,IAAEV,EAAA,EAAAA,IAAKS,EAAA,EAAAA,IAAKR,EAAA,EAAAA,IACnD4G,EAAU5G,GAAKrB,OAASiB,EAASkH,OAASF,EAAU5G,GAAKvB,OAC3DsB,EAAIS,GAAK/D,KAAKuD,MAGZsJ,EAAiBjD,EAAW5F,GAAU,SAAC,G,IAAEV,EAAA,EAAAA,IAAKW,EAAA,EAAAA,IAAKV,EAAA,EAAAA,IACnD4G,EAAU5G,GAAKrB,OAASiB,EAASkH,OAASF,EAAU5G,GAAKvB,OAC3DsB,EAAIW,GAAKjE,KAAKuD,MAGZuJ,EAAkBjD,EACtB7F,EACA8F,GACA,SAAC,G,IAAExG,EAAA,EAAAA,IAAK8B,EAAA,EAAAA,KAAM7B,EAAA,EAAAA,IACR4G,EAAU5G,GAAKrB,OAASiB,EAASkH,OAASF,EAAU5G,GAAKvB,OAC3DsB,EAAI8B,GAAMpF,KAAKuD,MAIrB,OAAOF,EAAiB,YACnBuJ,EAAeD,EAAKI,GACpBF,EAAeF,EAAKK,GACpBF,EAAgBH,EAAKvH,QAcP6H,CACjBjJ,EACA8F,EACAK,EACAwC,GAEF,GAAK/B,EAAWlL,OAAhB,CAKA,IAAMgM,EAA8B,GAEpC,IAAK,IAAMpJ,KAAO6H,EAChB,GAAIA,EAAUtK,eAAeyC,GAAM,CACjC,IAAMmB,EAAQ0G,EAAU7H,GACpBN,EAAQyB,EAAMzB,MAElB,GAAI4I,EAAWnF,UAAUnD,GAKvBN,IAJc,GAAGA,GACdkL,MAAM,IACNC,QAAO,SAAAtJ,GAAO,SAAGgI,EAAa7J,QAAY6B,KAC1CuJ,KAAK,KACU,EAGpB1B,EAAapJ,GAAO,2BACfmB,GAAK,CACRzB,MAAK,IAKX,OAAO0J,I,mBPzEI2B,I,YAAa,SAAC5J,GAA2B,OACpD,0BACE6J,UAAW,CACT,cACA7J,EAAM8J,SAAW,WAAa,KAC9B9J,EAAM+J,SAAW,WAAa,MAC9BJ,KAAK,KACPK,QAAShK,EAAMgK,QACfnL,IAAKmB,EAAMiK,OAEVjK,EAAMzB,SAIE2L,GAAwB,SAACC,GACpC,OAAOA,EAAQC,KAAI,SAACpK,EAAOiK,GAAU,uBAACL,GAAU,eAAK5J,EAAK,CAAEnB,IAAKoL,UAGnE,SAAYlF,GACV,yBACA,qBAFF,CAAYA,MAAc,KAanB,I,GQlCKsF,GRkCCC,GAAa,SAAC,G,IACzB/L,EAAA,EAAAA,MACAgM,EAAA,EAAAA,KACAP,EAAA,EAAAA,QACA,IAAAQ,YAAA,IAAO,EAAP,YACA,IAAAC,gBAAA,IAAW,GAAX,EACqB,OACrB,0BACEZ,UAAW,CACT,cACAY,EAAW,WAAa,KACxBD,IAASzF,EAAe2F,MAAQ,QAAU,MAC1Cf,KAAK,KACPK,QAASA,GAERzL,EACAgM,ISzDQI,GAAgB,SAAC7F,GAAqB,OAAAA,EAAM8F,QDOzD,SAAYP,GACV,gBACA,gBACA,YACA,0BACA,gBACA,8BANF,CAAYA,QAAS,KASrB,IEKYzB,GFLNiC,KAAY,OACfR,GAAUS,OAAQ,+DACnB,GAACT,GAAUU,OAAQ,+DACnB,GAACV,GAAUxB,KACT,gCACE,wCACA,2BACA,uDAGJ,GAACwB,GAAUW,YAAa,+DACxB,GAACX,GAAUY,OAAQ,+CACnB,GAACZ,GAAUa,cACT,yG,IAYSC,GAAkB,WACvB,sBAAEC,EAAA,EAAAA,KAAMC,EAAA,EAAAA,OAAQlB,EAAA,EAAAA,QAChBmB,EAAWD,IAAWD,IAASjB,EAErC,OACE,uBAAKN,UAAW,KAAG,gBAAiByB,GAAY,WAC9C,uBAAKzB,UAAU,WAAWuB,GAAQP,GAAaO,IAC/C,uBAAKvB,UAAU,WAAWM,GRaK,SAACA,GACpC,OAAOA,EAAQC,KAAI,SAACpK,EAAOiK,GAAU,uBAACK,GAAU,eAAKtK,EAAK,CAAEnB,IAAKoL,QQdxBsB,CAAsBpB,MG/CpDqB,I,MACX,uBAAKC,QAAQ,YAAY5B,UAAU,QACjC,wBACEhM,EAAG,m2CAkBI6N,GACX,uBAAKD,QAAQ,YAAY5B,UAAU,QACjC,wBAAMhM,EAAE,oFAIC8N,GACX,uBAAKF,QAAQ,YAAY5B,UAAU,QACjC,wBAAMhM,EAAE,kFAIC+N,GACX,uBAAKH,QAAQ,YAAY5B,UAAU,QACjC,wBAAMhM,EAAE,wGAICgO,GACX,uBAAKhC,UAAU,eAAe4B,QAAQ,aACpC,wBAAM5N,EAAE,qJACR,wBAAMA,EAAE,sJACR,wBAAMA,EAAE,+MACR,wBAAMA,EAAE,gNACR,wBAAMA,EAAE,kNACR,wBAAMA,EAAE,mNACR,wBAAMA,EAAE,kJACR,wBAAMA,EAAE,4KACR,wBAAMA,EAAE,+MACR,wBAAMA,EAAE,kNACR,wBAAMA,EAAE,iNACR,wBAAMA,EAAE,mNCvCCiO,GAAY,SACvB7G,GACoB,OACpBxC,KAVwB,oBAWxBwC,QAAO,ICsBI8G,GAAe,SAAC9G,GAA+C,OAC1ExC,KAhB4B,uBAiB5BwC,QAAO,IA8BI+G,GAAe,SAAC/G,GAGH,OACxBxC,KA/C4B,uBAgD5BwC,QAAO,IAGIgH,GAAkB,SAAClD,GAAmC,gBACjEmD,EACAC,GAEA,IAAM1D,EAAOf,EAAeyE,KACtBzF,EAAYgC,GAAayD,KAE3BpD,IAAcH,GAAUwD,KAAO3D,GACjCyD,EAASH,GRpFkB,SAACM,GAC9B,IAAM3F,EAA2B,GAWjC,OAVA2F,EAAOC,SAAQ,SAAC/N,EAAOM,GACrB,IAAM0N,EAA2B,IAAVhO,EAEvBmI,EAAU7H,GAAO,CACfN,MAAK,EACLgK,eAAe,EACfiE,WAAW,EACX/N,KAAM8N,EAAiB7M,EAAS+M,SAAW/M,EAASgN,WAGjDhG,EQwEiBiG,CAAgBlE,EAAKvI,QAC3CgM,EA3CsD,CACxDzJ,KArB8B,4BAgEnBsG,IAAcH,GAAUE,UAAYL,GAC7CyD,EAASH,GRrEsB,SACjCM,EACAO,GAEA,IAAMlG,EAA2B,GAYjC,OAXA2F,EAAOC,SAAQ,SAAC/N,EAAOM,GACrB,IAAM0N,EACJK,EAAiB/N,IAAQ+N,EAAiB/N,GAAKJ,OAASiB,EAAS+M,SAEnE/F,EAAU7H,GAAO,CACfN,MAAK,EACLgK,eAAe,EACfiE,WAAW,EACX/N,KAAM8N,EAAiB7M,EAAS+M,SAAW/M,EAASgN,WAGjDhG,EQqDiBmG,CAAoBpE,EAAKxI,OAAQyG,KACvDwF,EA9CsD,CACxDzJ,KArB8B,4BAmEnBsG,IAAcH,GAAUC,MACjCqD,EAhDsD,CACxDzJ,KArB8B,2BDAJ,SAACyJ,GAC3BA,EACEJ,GAAU,CACRV,KAAMf,GAAUxB,IAChBsB,QAAS,CACP,CACEK,KAAMzF,EAAe2F,MACrBH,KAAMoB,GACN3B,QAAS,WAAM,OAAAkC,EAZuB,CAC9CzJ,KAfwB,4BCuFtBqK,CAAaZ,IAGfA,EAnCsE,CACtEzJ,KApC4B,uBAqC5BwC,QAiCsB8D,MAGXgE,GAAc,WAAgB,gBAACb,EAAUC,GACpD,IAAM1D,EAAOf,EAAeyE,KACtBzF,EAAYgC,GAAayD,KAGzBhF,EAAaV,EAAcC,EAAW+B,EAAKlI,SAAUkI,EAAKhI,OAE1DuM,EAAkB9E,EAAuBxB,GAGrB,IAAtBS,EAAWlL,QAAiB+Q,GAG9Bd,EC/GsD,CACxDzJ,KAJ8B,+BFyCF,SAACyJ,EAAoBe,GACjDf,EACEJ,GAAU,CACRV,KAAM6B,EAAgB5C,GAAUW,WAAaX,GAAUY,MACvDd,QAAS,CACP,CACEK,KAAMzF,EAAe2F,MACrBH,KAAMoB,GACN3B,QAAS,WAAM,OAAAkC,EA3BuB,CAC9CzJ,KAfwB,4BC2GtByK,CAAehB,IAAY/E,EAAWlL,SAHtCiQ,EAASD,GAAgBrD,GAAUC,QAO1BsE,GAAoB,WAAgB,gBAACjB,EAAUC,GAC1D,IAAM1D,EAAOf,EAAeyE,KACtBzF,EAAYgC,GAAayD,KAGzBhF,EAAaV,EAAcC,EAAW+B,EAAKlI,SAAUkI,EAAKhI,OAG1DwH,ERnFuB,SAC7BvB,EACAS,GAEA,IAAMc,EAA8B,GAC9BmF,EAAqBlK,EAAcvD,EAAYmD,oBAGrD,IAF4BI,EAAcvD,EAAYoD,uBAE3BqK,EAA3B,CAIA,IAAK,IAAMvO,KAAO6H,EAChB,GAAIA,EAAUtK,eAAeyC,GAAM,CACjC,IAAMiB,GAAOjB,EACboJ,EAAanI,GAAO,2BACf4G,EAAU5G,IAAI,CACjByI,eAAe,EACfiE,WAAWY,GAA6BjG,EAAWnF,SAASlC,KAKlE,OAAOmI,GQ4DcoF,CAAgB3G,EAAWS,GAC5Cc,GACFiE,EAASH,GAAa9D,IAGxB,IAAM+E,EAAkB9E,EAAuBxB,GAGrB,IAAtBS,EAAWlL,QAAiB+Q,GAC9Bd,EAASD,GAAgBrD,GAAUC,QAI1ByE,GAAmB,SAACpE,GAAoC,gBACnEgD,EACAC,GAEA,IAAMrH,EAAQqH,IACR1D,EAAOf,EAAe5C,GACtB4B,EAAYgC,GAAa5D,GACzBkD,EAAWQ,GAAY1D,GAGvB9E,EAAQ0G,EADFwC,EAAKI,EAAIb,EAAKlI,SAAW2I,EAAKK,GAG1C,GR/C8C,SAAC,G,IAC/CvB,EAAA,EAAAA,SACAI,EAAA,EAAAA,aAKMmF,EAA0BrK,EAC9BvD,EAAYqD,yBAEd,OACEgF,IAAatI,EAASgN,QACtBtE,EAAa3J,OAASiB,EAASgN,QAC/BtE,EAAa7J,QACZgP,EQiCEC,CAAiC,CAAExF,SAAQ,EAAEI,aAAcpI,IAAhE,CAIA,IAAMiI,EAAegB,GACnBR,EAAKlI,SACLkI,EAAKhI,MACLiG,EACA1G,EACAkJ,GAGGjB,GAILiE,EAASH,GAAa9D,QHnJxB,SAAYW,GACV,iBACA,yBACA,iBACA,2BAJF,CAAYA,QAAS,KAsBrB,IK3CY6E,GL2CN,GAAsB,CAC1BzF,SAAUtI,EAASgN,OACnBhG,UAAW,GACXqC,UAAWH,GAAUwD,KMvBjB,GAAsB,CAC1Bf,QAAQ,GCNJ,GAAsB,CAC1BqC,QAAQ,GCbGC,GAAc,YAAgB,CACzClG,IjBwCiD,SACjD3C,EACA8I,GAEA,YAHA,IAAA9I,MAAA,GAGQ8I,EAAOnL,MACb,IFzCoB,gBE0ClB,OAAO,2BAAKqC,GAAK,CAAEY,KAAMkI,EAAO3I,UAElC,IF3C4B,wBE4C1B,OAAO,2BAAKH,GAAK,CAAEc,YAAagI,EAAO3I,UAEzC,IF5C+B,2BE6C7B,OAAO,2BAAKH,GAAK,CAAEgB,cAAe8H,EAAO3I,UAE3C,IFhDgC,4BEiD9B,OAAO,2BAAKH,GAAK,CAAEe,eAAgB+H,EAAO3I,UAE5C,IFjDkC,8BEkDhC,OAAO,2BAAKH,GAAK,CAAEiB,iBAAkB6H,EAAO3I,UAE9C,IFnDqB,iBEoDnB,OAAO,2BACFH,GAAK,CACRkB,OAAQ,aACN4H,EAAO3I,SACJH,EAAMkB,OAAO0D,QACd,SAAA9F,GAAS,OAAAA,EAAM2B,UAAYqI,EAAO3I,QAAQM,cAKlD,IF7DwB,oBE8DtB,OAAO,2BACFT,GAAK,CACRkB,OAAQlB,EAAMkB,OAAO0D,QACnB,SAAA9F,GAAS,OAAAA,EAAM2B,UAAYqI,EAAO3I,QAAQM,aAIhD,QACE,OAAOT,IiB/EX2D,KRyCkD,SAClD3D,EACA8I,G,WADA,IAAA9I,MAAQ,IAGA,IAAAkD,EAAA,EAAAA,SAAUtB,EAAA,EAAAA,UAClB,OAAQkH,EAAOnL,MACb,IG/B4B,yBHgC1B,IAAMoL,EACJ7F,IAAatI,EAASgN,OAAShN,EAASkH,MAAQlH,EAASgN,OAC3D,OAAO,2BACF5H,GAAK,CACRkD,SAAU6F,EACVnH,UAAWqB,EAAoBrB,EAAWmH,KAG9C,IGrC2B,wBHyCzB,OAH4B3K,EAC1BvD,EAAYoD,qBAGL+B,EAGF,2BACFA,GAAK,CACR4B,UAAWyB,EAAqBzB,EAAWkH,EAAO3I,WAGtD,IGhD0B,uBHiDlB,gBAAEnF,EAAA,EAAAA,IAAKvB,EAAA,EAAAA,MACPyB,EAAQ8E,EAAM4B,UAAU5G,GAE9B,OAAO,2BACFgF,GAAK,CACR4B,UAAW,2BACN5B,EAAM4B,YAAS,OACjB5G,GAAG,2BACCE,GAAK,CACRzB,MAAK,EACLE,KAAMqG,EAAMkD,WAAQ,MAK5B,IGjE0B,uBHkExB,OAAO,2BACFlD,GAAK,CACRiE,UAAW6E,EAAO3I,UAGtB,IG1E0B,uBH2ExB,OAAO,2BACFH,GAAK,CACR4B,UAAWkH,EAAO3I,UAGtB,IG/E4B,yBHgF1B,OAAO,2BACFH,GAAK,CACRkD,SAAUtI,EAASgN,SAGvB,IXnG4B,wBWoG1B,OAAO,GAET,QACE,OAAO5H,IQ1GX8F,MFkBmD,SACnD9F,EACA8I,GAEA,YAHA,IAAA9I,MAAQ,IAGA8I,EAAOnL,MACb,IJzBsB,oBI0BpB,OAAO,2BACFmL,EAAO3I,SAAO,CACjBoG,QAAQ,IAEZ,IJ7BsB,oBIkCtB,IHhB4B,yBGiB1B,OAAO,2BACFvG,GAAK,CACRuG,QAAQ,IAEZ,IjBnC4B,wBiBoC1B,OAAO,GACT,QACE,OAAOvG,IExCXgJ,SDYsD,SACtDhJ,EACA8I,GAEA,YAHA,IAAA9I,MAAQ,IAGA8I,EAAOnL,MACb,IH3B4B,6BG4B1B,OAAO,2BAAKqC,GAAK,CAAE4I,QAAS5I,EAAM4I,SACpC,IJH4B,yBII1B,OAAO,2BACF5I,GAAK,CACR4I,QAAQ,IAEZ,IlBtB4B,wBkBuB1B,OAAO,GACT,QACE,OAAO5I,MCtBAiJ,GAAQ,YAAYJ,GAAa,YAAgB,KCTxB,SAAC,G,IAAEzB,EAAA,EAAAA,SAAe,gBAAAnM,GAAQ,gBAAA6N,GAmB9D,MpBTuB,mBoBTnBA,EAAOnL,MtBYkD,kBsBZbmL,EAAO3I,QAAQM,SAC7D2G,EACEJ,GAAU,CACRV,KAAMf,GAAUa,aAChBf,QAAS,CACP,CACEK,KAAMzF,EAAe2F,MACrBH,KAAMoB,GACN3B,QAAS,WACPkC,EPMkC,CAC9CzJ,KAfwB,sBOSZyJ,EpBmEU,CACtBzJ,KApE0B,oBAqE1BwC,QoBrEiC,CAAEM,QAASqI,EAAO3I,QAAQM,iBAQpDxF,EAAK6N,S,aJzBd,SAAYH,GACV,gBACA,sBACA,gBACA,gBACA,sBALF,CAAYA,QAAW,KKkBvB,ICdYO,GDcNC,GAAqB,CACzBR,GAAYS,MACZT,GAAYU,SACZV,GAAYW,MACZX,GAAYY,OAGDC,GAAqB,WAChC,IAAMpC,EAAW,cACXqC,EAAY,YAAY3G,GACxB4G,EAAW,YAAY3G,GACvB4G,EAAiB,YAAY9G,GAE7B+G,EAAe,uBAAY,SAAC1O,GAChCkM,ErB+FwB,SAAClM,GAAgC,gBAAMkM,GAAQ,oD,wEACzEA,EAAS/G,GAAkB,IACrBsD,EAAO,IAAI,EAAKzI,GAESyI,EAAI,QAAf5D,EAAM,YAAK4D,EAAzB,a,iBAIa,O,sBAAA,GAAM7D,EAASC,EAAQ,iB,OACxC,GADQpJ,EAAS,SAAsC,KACnD8I,EAAgB9I,GAClB,MAAMA,E,OAGRyQ,EAAShH,EAAeuD,IACxByD,EAAS/G,GAAkB,IAC3B+G,EAASlH,EAAQzF,EAAKoP,O,+BAEtBzC,EAAS5G,EAAS,IAClB4G,EAAS/G,GAAkB,IAC3B+G,EAAS9G,GAAiB,I,+BqBlHjBwJ,CAAa5O,MACrB,IAEG6O,EAAgC,CACpC,CACEtQ,MAAO,SACPwL,UAAW0E,EACXzE,QAASyE,EAAiB,WAAM,OAAAvC,EAASlH,EAAQzF,EAAKoP,QAAS,cAEjE,CACEpQ,MAAO,OACPyL,QAAS,WAAM,OAAA0E,EAAa,CAAE3M,WAAYvC,EAAesP,SAE3D,CACEvQ,MAAO,SACPyL,QAAS,WAAM,OAAA0E,EAAa,CAAE3M,WAAYvC,EAAeuP,WAE3D,CACExQ,MAAO,OACPyL,QAAS,WAAM,OAAA0E,EAAa,CAAE3M,WAAYvC,EAAewP,UAIvDC,EAAiChB,GAAmB7D,KACxD,SAAC8E,GAAyB,OACxB3Q,MAAO2Q,EACPlF,QAAS,WAAM,OAAAkC,EAAS7G,EAAoB6J,SAIhD,OACE,oCACE,wBAAIrF,UAAU,aAAW,UACzB,yBAAKA,UAAU,oBACZ2E,GACC,4B,2BAC0B,6B,4BAG3BD,IAAcC,GAAY,yBAAK3E,UAAU,WAAWgC,KACnD0C,IAAcC,GACd,oCACE,yBAAK3E,UAAU,UAAUK,GAAsB2E,IAC/C,yBAAKhF,UAAU,UAAUK,GAAsB+E,MAIrD,8BACE,uBACEE,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAAqB,e,OC/EnC,SAAYrB,GACV,qBACA,mBAFF,CAAYA,QAAc,KAc1B,I,GAAA,4B,+CA4BA,OA5BwC,iBAG/B,YAAAsB,OAAP,WACE,IAAMC,EAAkB,CACtB,QACA/M,KAAKxC,MAAMwP,QAAUxB,GAAeyB,KAAO,OAAS,MACpD9F,KAAK,KAEP,OACE,uBAAKE,UAAU,WACb,uBAAKA,UAAU,QAAQG,QAASxH,KAAKxC,MAAM0P,cACxClE,IAEH,uBAAK3B,UAAU,UACb,0BAAKrH,KAAKxC,MAAM2P,QAElB,uBAAK9F,UAAU,cAAcrH,KAAKxC,MAAM4P,SACvCpN,KAAKxC,MAAM6P,YACV,uBAAKhG,UAAU,UACb,uBAAKA,UAAW0F,EAAiBvF,QAASxH,KAAKxC,MAAM8P,cAClDpE,OAOf,EA5BA,CAAwC,iBCFxC,I,MAAA,uE,OAIS,EAAA5G,MAAuB,CAC5BiL,YAAa7M,EAAc,EAAKlD,MAAMgQ,aAkBhC,EAAAC,SAAW,WACjB,IAAMF,GAAa,EAAKjL,MAAMiL,UAC9BvM,EAAc,EAAKxD,MAAMgQ,WAAYD,GACrC,EAAKG,SAAS,CAAEH,UAAS,K,EAE7B,OA5B8B,iBAQrB,YAAAT,OAAP,WACE,IAAMa,EAAU3N,KAAKsC,MAAMiL,UAAY,UAAY,GACnD,OACE,yBAAOlG,UAAW,kBAAkBsG,GAClC,yBACEtG,UAAU,WACVpH,KAAK,WACL0N,QAAS3N,KAAKsC,MAAMiL,UACpBE,SAAUzN,KAAKyN,WAEjB,4BAAOzN,KAAKxC,MAAMoL,QAU1B,EA5BA,CAA8B,kBCX9B,0E,OAYU,EAAAgF,WAAa,WACnB,IAAMC,EAAoC,CACxCjF,KAAM,wBACN4E,WAAYrQ,EAAYmD,oBAEpBwN,EAA0C,CAC9ClF,KAAM,4BACN4E,WAAYrQ,EAAYoD,qBAEpBwN,EAA8C,CAClDnF,KAAM,4CACN4E,WAAYrQ,EAAYqD,yBAE1B,OACE,gCACE,gBAAC,GAAQ,eAAKqN,IACd,gBAAC,GAAQ,eAAKC,IACd,gBAAC,GAAQ,eAAKC,M,EAItB,OAjCqC,iBAC5B,YAAAjB,OAAP,WACE,OACE,gBAAC,GAAkB,CACjBK,MAAOlC,GAAYU,SACnByB,QAASpN,KAAK4N,aACdV,aAAclN,KAAKxC,MAAM0P,aACzBI,aAActN,KAAKxC,MAAM8P,gBA0BjC,EAjCA,CAAqC,iBCFrC,4B,+CAsBA,OAtBkC,iBACzB,YAAAR,OAAP,WAOE,OACE,gBAAC,GAAkB,CACjBK,MAAOlC,GAAYW,MACnBwB,QACE,gBAAC,WAAc,KACb,yBAVN,mIAWM,yBARN,4JAWEF,aAAclN,KAAKxC,MAAM0P,aACzBI,aAActN,KAAKxC,MAAM8P,gBAIjC,EAtBA,CAAkC,iBCAlC,4B,+CAoCA,OApCqC,iBAC5B,YAAAR,OAAP,WACE,OACE,gBAAC,GAAkB,CACjBK,MAAOlC,GAAY+C,SACnBX,YAAY,EACZL,MAAOxB,GAAeyB,KACtBG,QACE,gBAAC,WAAc,KACb,yBACE,4C,yBACA,qBACET,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAAqB,aAK7B,yBACE,iDACA,qBACEF,KAAK,2CACLC,OAAO,SACPC,IAAI,uBAAqB,8CAOjCK,aAAclN,KAAKxC,MAAM0P,aACzBI,aAActN,KAAKxC,MAAM8P,gBAIjC,EApCA,CAAqC,iBCArC,4B,+CAWA,OAXkC,iBACzB,YAAAR,OAAP,WACE,OACE,gBAAC,GAAkB,CACjBK,MAAOlC,GAAYS,MACnB0B,QAAS,gCACTF,aAAclN,KAAKxC,MAAM0P,aACzBI,aAActN,KAAKxC,MAAM8P,gBAIjC,EAXA,CAAkC,iBCAlC,4B,+CA6BA,OA7BkC,iBACzB,YAAAR,OAAP,WAWE,OACE,gBAAC,GAAkB,CACjBK,MAAOlC,GAAYY,MACnBwB,YAAY,EACZD,QACE,gBAAC,WAAc,KACb,yBAfN,0NAgBM,yBAZN,8IAaM,yBAVN,iHAWM,+CAGJF,aAAclN,KAAKxC,MAAM0P,aACzBI,aAActN,KAAKxC,MAAM8P,gBAIjC,EA7BA,CAAkC,iBCkB5BW,KAAyB,OAC5BhD,GAAYS,OAAQ,GACrB,GAACT,GAAYU,UAAW,GACxB,GAACV,GAAYW,OAAQ,GACrB,GAACX,GAAYY,OAAQ,GACrB,GAACZ,GAAY+C,UAAW,G,IAWbE,GAAsC,SAAC,G,IAAErF,EAAA,EAAAA,OAC9Ca,EAAW,cACXqC,EAAY,YAAY3G,GACxB4G,EAAW,YAAY3G,GACvB8I,EAAiB,YAAY7I,GAE7B8I,EAAsB,uBAAY,WACtC,IAAKD,EACH,OAAO,KAGT,IAAME,EAAYJ,GAA0BE,GAY5C,OACE,kBAACE,EAAS,CACRnB,aAAc,WAAM,OAAAxD,EAAS7G,OAAoBb,KACjDsL,aAdkB,WAChBa,IAAmBlD,GAAYY,MAI/BsC,IAAmBlD,GAAY+C,UACjCtE,EAAS7G,EAAoBoI,GAAYY,QAJzCnC,EAAS7G,EAAoBoI,GAAY+C,gBAe5C,CAACG,IAEJ,OACE,yBAAK9G,UAAW,KAAG,QAASwB,GAAU,WACpC,yBAAKxB,UAAU,iBACb,kBAACyE,GAAQ,OACPC,IAAcC,GAAYoC,OCxEvBE,I,YAAoB,SAAChM,GAAqB,OAAAA,EAAMgJ,SAASJ,SCezDqD,GAAoC,SAAC,G,IAAEC,EAAA,EAAAA,cAC5C9E,EAAW,cACXwB,EAAS,YAAYoD,IACrB9G,EAAU,uBAAY,WAAM,OAAAkC,EhBfsB,CACxDzJ,KAJ8B,iCgBkBgC,IAExDwO,EAAqC,CACzC,CACE1S,MAAO,SACPyL,QAASgH,GAEX,CACEzS,MAAO,QACPyL,QAAS,WAAM,OlB6BS,SAACkC,GAC7BA,EEtDwD,CACxDzJ,KAJ8B,+BF0D9ByJ,EACEJ,GAAU,CACRV,KAAMf,GAAUU,MAChBZ,QAAS,CACP,CACEK,KAAMzF,EAAe2F,MACrBnM,MAAO,MACPyL,QAAS,WAAM,OAAAkC,EAASD,GAAgBrD,GAAUwD,QAEpD,CACE5B,KAAMzF,EAAe2F,MACrBnM,MAAO,KACPyL,QAAS,WAAM,OAAAkC,EAhDuB,CAC9CzJ,KAfwB,4BkBmBLyO,CAAehF,KAEhC,CACE3N,MAAO,QACPyL,QAAS,WAAM,OAAAkC,EAASa,QAE1B,CACExO,MAAO,QACPyL,QAAS,WAAM,OlB0CS,SAACkC,GAC7BA,EE3EwD,CACxDzJ,KAJ8B,+BF+E9ByJ,EACEJ,GAAU,CACRV,KAAMf,GAAUS,MAChBX,QAAS,CACP,CACEK,KAAMzF,EAAe2F,MACrBnM,MAAO,MACPyL,QAAS,WAAM,OAAAkC,EAASD,GAAgBrD,GAAUE,aAEpD,CACE0B,KAAMzF,EAAe2F,MACrBnM,MAAO,KACPyL,QAAS,WAAM,OAAAkC,EArEuB,CAC9CzJ,KAfwB,4BkB2BL0O,CAAejF,MAIlC,OACE,yBAAKrC,UAAW,KAAG,sBAAuB6D,EAAS,SAAW,WAC5D,yBAAK7D,UAAU,oBAAoBG,QAASA,IAC5C,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,yCAEF,yBAAKA,UAAU,mBACZK,GAAsB+G,IAEzB,8BACE,uBACE9B,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAAqB,cAM/B,yBAAKxF,UAAU,mBAAmBG,QAASA,GACxC4B,OCzDEwF,I,YAAkB,SAC7B/K,EACA+B,GAEA,IAAMiJ,EAAYjJ,EAAakJ,cAEzBC,EADWF,EAAUC,cACFE,SACnBC,EAAUJ,EAAUK,UAI1B,MAAO,CAAEpI,EAAGiI,EAAShI,EAAGkI,EAAS9P,KAF/BjB,KAAKC,MAAM4Q,EAAUlL,GAAaA,EAClC3F,KAAKC,MAAM8Q,EAAUpL,MAIZsL,GAAwB,SAAC,G,IACpClJ,EAAA,EAAAA,KACAJ,EAAA,EAAAA,KAKM,gBAAEiB,EAAA,EAAAA,EAAGC,EAAA,EAAAA,EACX,OAAOD,EAAIb,EAAKlI,SAAWgJ,GCDhBqI,GAA4B,SAAC,G,IACxCnT,EAAA,EAAAA,KACAF,EAAA,EAAAA,MACAiO,EAAA,EAAAA,UACAjE,EAAA,EAAAA,cAEM2D,EAAW,cACXlE,EAAW,YAAYQ,IACvB9B,EAAY,YAAYgC,IACxBD,EAAO,YAAYf,GACnBmK,EAAa,YAAYlJ,IAEzBmJ,EAAW,SACfC,GAIA,IAAM1J,EAAO0J,EAAE3C,OACTtP,EAAM6R,GAAsB,CAAElJ,KAAI,EAAEJ,KAAI,IACxCrI,EAAQ0G,EAAU5G,IDiBK,SAAC,G,IAChCuI,EAAA,EAAAA,KACArI,EAAA,EAAAA,MACAgI,EAAA,EAAAA,UAOGA,IAAatI,EAASkH,OAAS5G,EAAMvB,OAASiB,EAASgN,QACvD1E,IAAatI,EAASgN,QAAU1M,EAAMvB,OAASiB,EAAS+M,WAEzDpE,EAAK2J,SC7BLC,CAAkB,CAAE5J,KAAI,EAAErI,MAAK,EAAEgI,SAAQ,IACzCkE,EnBQwE,CAC1EzJ,KA5B6B,wBA6B7BwC,QmBV0BjF,KAyB1B,OACE,4BACEkS,SAAUzT,IAASiB,EAAS+M,UAAYoF,EACxCM,UAAW1T,IAASiB,EAASkH,MAAQ,EAAI,EACzCI,KAAM,EACNC,KAAM,EACN1I,MAAOA,GAAS,GAChBsL,UAAW,KACTpL,EACAoT,GAAc,WACdrF,GAAa/N,IAASiB,EAASkH,OAAS,QACxC2B,GAAiB9J,IAASiB,EAASkH,OAAS,aAE9CwL,QAAUP,OAAuBrN,EAnC4B,SAAAuN,GAC/D,IAAM1J,EAAO0J,EAAE3C,OACTlG,EAAOkI,GAAgB3I,EAAKhI,MAAO4H,GAGzC6D,EAASoB,GAAiB8D,GAAgB3I,EAAKhI,MAAO4H,KAGtD6D,EAASiB,MDzBY,SAACkF,EAAiBnJ,GACzC,IAAMoJ,EAAcC,SAASC,cAC3B,gBAEEjB,EAAUrI,EAAKI,EACfmI,EAAUvI,EAAKK,EAEnB,OAAQ8I,GACN,KAAK,GACS,IAAZZ,EAAiBA,EAAU,EAAKA,IAChC,MACF,KAAK,GACS,IAAZF,EAAiBA,EAAU,EAAKA,IAChC,MACF,KAAK,GACS,IAAZE,EAAiBA,EAAU,EAAKA,IAChC,MACF,KAAK,GACS,IAAZF,EAAiBA,EAAU,EAAKA,IAMnBe,EAAYtL,KAAKuK,GAASkB,MAAMhB,GAC9CiB,SAAS,GACHC,QCEPC,CAAUb,EAAEM,QAASnJ,IAyBnB2J,QAAUhB,OAAwBrN,EAAXsN,EACvB9H,QAAU6H,OAAwBrN,EAAXsN,EACvB7B,SAAW4B,GAAcpT,IAASiB,EAAS+M,cAAqBjI,EAxBL,SAAAuN,GAC7D,IAAM1J,EAAO0J,EAAE3C,OACTtP,EAAM6R,GAAsB,CAAElJ,KAAI,EAAEJ,KAAI,IAG9C6D,EnBuG2B,SAACpM,EAAavB,GAA4B,gBACvE2N,EACAC,GAEA,GAAc,KAAV5N,EAKJ,GAAIA,EAAMuU,MAAM,aAAhB,CACE,IACIC,OAAQ,EAGVA,EAJevK,GAAY2D,OAGZzM,EAASgN,QACZnO,GAAS,GAEPqB,EACZrB,EACGkL,MAAM,IACNW,KAAI,SAAAhK,GAAO,OAACA,KACZ4S,QACHrJ,KAAK,KACc,EAGvBuC,EAASF,GAAa,CAAElM,IAAG,EAAEvB,MAAOwU,eApBpC7G,EAASF,GAAa,CAAElM,IAAG,EAAEvB,MAAO,MmB5G3B0U,CAAgBnT,EAAKuI,EAAK9J,YC1D1B2U,GAA0C,SAAC,G,IACtD3S,EAAA,EAAAA,SACA4S,EAAA,EAAAA,UAoBA,OACE,yBAAOtJ,UAAU,SAASlF,GAAG,eAC3B,6BApBa,WAEf,IADA,IAAMqC,EAAsB,GACnB1G,EAAM,EAAGA,EAAMC,EAAUD,IAAO,CAEvC,IADA,IAAM2G,EAAsB,GACnBzG,EAAM,EAAGA,EAAMD,EAAUC,IAAO,CACvC,IAAMR,EAAQmT,EAAU7S,EAAMC,EAAWC,GACzCyG,EAAK1K,KACH,sBAAIsC,IAAK2B,GACP,gBAACoR,GAAI,eAAK5R,MAIhBgH,EAAKzK,KAAK,sBAAIsC,IAAKyB,GAAM2G,IAG3B,OAAOD,EAKGoM,MC5BDC,I,MAAmB,WAC9B,IAAMnH,EAAW,cACXlE,EAAW,YAAYQ,IAE7B,OACE,uBAAKqB,UAAU,eAAeG,QAAS,WAAM,OAAAkC,ErBqBS,CACxDzJ,KAT8B,6BqBZ1B,sCACA,qCACA,uBAAKoH,UAAW,UAAU7B,EAAQ,eCI3BsL,GAAoC,SAAC,G,IAChDjI,EAAA,EAAAA,OACA5C,EAAA,EAAAA,KACAuI,EAAA,EAAAA,cAEM9E,EAAW,cACXxF,EAAY,YAAYgC,IAU9B,OARA,qBAAU,WACRwD,EAASD,GAAgBrD,GAAUwD,QAClC,IAEH,qBAAU,WACRF,EtBesD,CACxDzJ,KArB8B,6BsBM3B,CAAC4I,IAGF,yBAAKxB,UAAW,KAAG,OAAQwB,GAAU,WACnC,kBAAC0F,GAAQ,CAACC,cAAeA,IACzB,yBAAKnH,UAAU,gBACb,kBAACqJ,GAAW,CAACC,UAAWzM,EAAWnG,SAAUkI,EAAKlI,WAClD,kBAAC8S,GAAM,S,MCjCf,SACE,gBAAC,IAAQ,CAACtF,MAAOA,IACf,iBCCyB,WAC3B,IAAM7B,EAAW,cACXqH,EAAe,YAAY/L,GAC3B5B,EAAc,YAAY8B,GAC1B6G,EAAY,YAAY3G,GAExB4L,EAAUD,IAAiBhU,EAAKoG,KAChCqL,EAAgB,uBAAY,WAChC9E,EAASlH,EAAQzF,EAAKoG,SACrB,IAYH,OAVA,qBAAU,WACR,IAAMhB,EAAKzB,EAAcvD,EAAYsD,QAMrCiJ,EAJKvH,EtCoFwB,SAACA,GAAyB,gBAAMuH,GAAQ,oD,oEACvEA,EAAS/G,GAAkB,I,iBAGR,O,sBAAA,GAAMT,EAAQC,I,OAC/B,GADQlJ,EAAS,SAAiB,KAC9B8I,EAAgB9I,GAClB,MAAMA,E,OAERyQ,EAAS/G,GAAkB,IAEvB1J,EAAKgN,MACPyD,EAAShH,EAAezJ,EAAKgN,KAAK5D,S,+BAGpCqH,EAAS5G,EAAS,IAClB4G,EAAS/G,GAAkB,IAC3B+G,EAAS9G,GAAiB,I,+BsChGjBqO,CAAkB9O,GtC+Dc,SAAMuH,GAAQ,oD,oEACzDA,EAAS/G,GAAkB,I,iBAGR,O,sBAAA,GDvEnBjB,EAAqCJ,I,OCwEnC,GADQrI,EAAS,SAAoB,KACjC8I,EAAgB9I,GAClB,MAAMA,E,OAERyQ,EAAS/G,GAAkB,IAC3B3B,EAAc7D,EAAYsD,OAAQxH,G,+BAElCyQ,EAAS5G,EAAS,IAClB4G,EAAS/G,GAAkB,IAC3B+G,EAAS9G,GAAiB,I,kCsC3EzB,IAGD,oCACE,kBAACsL,GAAS,CAACrF,QAASmI,KAClBjF,GAAa3I,GACb,kBAAC0N,GAAQ,CACPjI,OAAQmI,EACR/K,KAAM7C,EACNoL,cAAeA,IAGnB,kBAAC7F,GAAK,SDhCJ,OAENoH,SAASmB,eAAe","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([24,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <meta charset=\\\"UTF-8\\\">\\n  <title>Sudoku</title>\\n</head>\\n<body>\\n  <div id=\\\"root\\\"></div>\\n</body>\\n</html>\\n\";","import { Action, Middleware } from \"redux\";\nimport { Game } from \"./generator/generator\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./ducks/store\";\n\nexport enum Page {\n  Game,\n  Menu,\n}\n\nexport enum GameDifficulty {\n  Easy = 4,\n  Medium = 5,\n  Hard = 6,\n}\n\nexport enum GameType {\n  Default = 9,\n}\n\nexport interface GameConfig {\n  difficulty: GameDifficulty;\n  type?: GameType;\n  shuffle?: number;\n}\n\nexport enum CellMode {\n  Pencil = \"pencil\",\n  Notes = \"notes\",\n  ReadOnly = \"readOnly\",\n}\n\nexport interface CellProps {\n  mode: CellMode;\n  withHighlight: boolean;\n  withError: boolean;\n  value: number;\n}\n\nexport interface TableCellsMap {\n  [key: number]: CellProps;\n}\n\nexport interface CellCoordinates {\n  x: number;\n  y: number;\n  grid: number;\n}\n\nexport interface GameData {\n  config: Game;\n  state: string;\n}\n\nexport interface UserData {\n  _id: string;\n  game?: GameData;\n}\n\nexport interface ActionWithPayload<T, P> extends Action<T> {\n  payload: P;\n}\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport type AppMiddleware = Middleware<{}, RootState>;\n","export const compose = (...fns: Function[]) =>\n  fns.reduce((f, g) => (...args: any[]) => f(g(...args)));\n\nexport const removeDuplicates = <T>(arr: T[]) => {\n  if (arr.length !== 1) {\n    for (let pos = 0; pos < arr.length; pos++) {\n      for (let next = 1; next < arr.length - pos; next++) {\n        if (arr[pos] === arr[pos + next]) {\n          arr.splice(pos + next, 1);\n        }\n      }\n    }\n  }\n  return arr;\n};\n","export enum StorageKeys {\n  DisableInGameError = \"DisableInGameError\",\n  DisableHighlighting = \"DisableHighlighting\",\n  DisableAutoNotesRemoval = \"DisableAutoNotesRemoval\",\n  UserId = \"UserId\",\n}\n\ntype StorageKeysType = boolean | string;\n\nexport const storageKeysToDefaultMap: {\n  [key in StorageKeys]: StorageKeysType;\n} = {\n  [StorageKeys.DisableInGameError]: false,\n  [StorageKeys.DisableHighlighting]: false,\n  [StorageKeys.DisableAutoNotesRemoval]: false,\n  [StorageKeys.UserId]: \"\",\n};\n\nexport const getStorageKey = (key: StorageKeys): StorageKeysType => {\n  try {\n    const value = window.localStorage.getItem(key);\n    if (value === null) {\n      throw Error;\n    }\n    return JSON.parse(value);\n  } catch {\n    return storageKeysToDefaultMap[key];\n  }\n};\n\nexport const setStorageKey = (key: StorageKeys, value: StorageKeysType) => {\n  try {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  } catch {\n    console.error(`Local storage: Was not able to set item in key ${key}`);\n  }\n};\n","import { compose } from \"../utils/generalUtils\";\nimport { GameConfig, GameType, GameDifficulty } from \"../consts\";\n\nexport class Game {\n  public readonly gameType: GameType;\n  public readonly difficulty: GameDifficulty;\n  public readonly ratio: number;\n  public readonly matrix: number[] = []; // Array of result ordered by rows\n  public readonly mask: number[] = []; // Array of masked result ordered by rows\n  public readonly shuffle: number;\n\n  constructor(props: GameConfig) {\n    this.gameType = props.type || GameType.Default;\n    this.difficulty = props.difficulty;\n    this.ratio = Math.sqrt(this.gameType);\n    this.shuffle = props.shuffle || 60;\n    const result = this.generate();\n    this.matrix = result.matrix;\n    this.mask = result.mask;\n  }\n  /*\n   * Creates array ordered by row with values:\n   * 123|456|789\n   * 456|789|123\n   * 789|123|456\n   * ---|---|---\n   * 234|567|891\n   * 567|891|234\n   * 891|234|567\n   * ---|---|---\n   * 345|678|912\n   * 678|912|345\n   * 912|345|678\n   */\n  private createTemplate = () => {\n    const gameTemplate: number[] = [];\n    let pos: number;\n    let val: number;\n    for (let row = 0; row < this.gameType; row++) {\n      for (let col = 0; col < this.gameType; col++) {\n        /**\n         * row * this.ratio = amount to skip each row. increments of row per grid size\n         * Math.floor(row / this.ratio) = amount to skip each grid-row. increments of 1 per grid-row\n         * col = column number to iterate\n         * % this.gameType + 1 = divisible by 9, and add 1\n         */\n        val =\n          ((row * this.ratio + Math.floor(row / this.ratio) + col) %\n            this.gameType) +\n          1;\n        pos = row * this.gameType + col;\n        gameTemplate[pos] = val;\n      }\n    }\n    return gameTemplate;\n  };\n\n  /*\n   * Replaces values in temp from rand1-to-rand2 and rand2-to-rand1\n   * and creates random combos of rand1 and rand2 to switch places\n   */\n  private shufflePairs = (arr: number[]) => {\n    let rand1: number;\n    let rand2: number;\n    const newArr = arr.slice();\n    for (let randomize = 0; randomize < this.shuffle; randomize++) {\n      rand1 = Math.ceil(Math.random() * this.gameType);\n      do {\n        rand2 = Math.ceil(Math.random() * this.gameType);\n      } while (rand1 === rand2); // as long as rand1 equals rand2 recalculate rand2\n\n      for (let pos = 0; pos < newArr.length; pos++) {\n        if (newArr[pos] === rand1) {\n          newArr[pos] = rand2;\n        } else if (newArr[pos] === rand2) {\n          newArr[pos] = rand1;\n        }\n      }\n    }\n    return newArr;\n  };\n\n  /*\n   * Replaces columns from rand1-to-rand2 and rand2-to-rand1\n   * and creates random combos of rand1 and rand2 to switch places\n   */\n  private shuffleColumns = (arr: number[]) => {\n    let rand1: number;\n    let rand2: number;\n    let pos1: number;\n    let pos2: number;\n    let originalVal: number;\n    const newArr = arr.slice();\n    for (let randomize = 0; randomize < this.shuffle; randomize++) {\n      rand1 = Math.floor(Math.random() * this.ratio);\n      do {\n        rand2 = Math.floor(Math.random() * this.ratio);\n      } while (rand1 === rand2); // as long as rand1 equals rand2 recalculate rand2\n\n      for (let pos = 0; pos < this.gameType; pos++) {\n        /**\n         * pos * this.gameType = pos of value in col, iterates through column\n         * rand1 * this.ratio = picks first column from random grid\n         * randomize % this.ratio = adds to picked column by iterating through divisibles of ratio\n         */\n        pos1 =\n          pos * this.gameType + (rand1 * this.ratio + (randomize % this.ratio));\n        pos2 =\n          pos * this.gameType + (rand2 * this.ratio + (randomize % this.ratio));\n        originalVal = newArr[pos1];\n        newArr[pos1] = newArr[pos2];\n        newArr[pos2] = originalVal;\n      }\n    }\n    return newArr;\n  };\n\n  /*\n   * Replaces columns inside grids from rand1-to-rand2 and rand2-to-rand1\n   * and creates random combos of rand1 and rand2 to switch places\n   */\n  private shuffleColumnsInGrid = (arr: number[]) => {\n    let rand1: number;\n    let rand2: number;\n    let pos1: number;\n    let pos2: number;\n    let originalVal: number;\n    const newArr = arr.slice();\n    for (let randomize = 0; randomize < this.shuffle; randomize++) {\n      rand1 = Math.floor(Math.random() * this.ratio);\n      do {\n        rand2 = Math.floor(Math.random() * this.ratio);\n      } while (rand1 === rand2); // as long as rand1 equals rand2 recalculate rand2\n\n      for (let pos = 0; pos < this.gameType; pos++) {\n        /**\n         * pos * this.gameType = pos of value in col, iterates through column\n         * randomize % this.ratio * this.ratio = iterates first column of each grid\n         * rand1 = picks which column in grid to shuffle\n         */\n        pos1 =\n          pos * this.gameType + ((randomize % this.ratio) * this.ratio + rand1);\n        pos2 =\n          pos * this.gameType + ((randomize % this.ratio) * this.ratio + rand2);\n        originalVal = newArr[pos1];\n        newArr[pos1] = newArr[pos2];\n        newArr[pos2] = originalVal;\n      }\n    }\n    return newArr;\n  };\n\n  private shuffleRowsInGrid = (arr: number[]) => {\n    let rand1: number;\n    let rand2: number;\n    let pos1: number;\n    let pos2: number;\n    let originalVal: number;\n    const newArr = arr.slice();\n    for (let randomize = 0; randomize < this.shuffle; randomize++) {\n      rand1 = Math.floor(Math.random() * this.ratio);\n      do {\n        rand2 = Math.floor(Math.random() * this.ratio);\n      } while (rand1 === rand2); // as long as rand1 equals rand2 recalculate rand2\n\n      for (let pos = 0; pos < this.gameType; pos++) {\n        /**\n         * pos = pos of value in first row, iterates through row\n         * this.gameType = moves pos to first value in picked row\n         * randomize % this.ratio * this.ratio = picks first row from random grid\n         * rand1 = adds to picked row by iterating through divisibles of ratio\n         */\n        pos1 =\n          pos + this.gameType * ((randomize % this.ratio) * this.ratio + rand1);\n        pos2 =\n          pos + this.gameType * ((randomize % this.ratio) * this.ratio + rand2);\n        originalVal = newArr[pos1];\n        newArr[pos1] = newArr[pos2];\n        newArr[pos2] = originalVal;\n      }\n    }\n    return newArr;\n  };\n\n  private maskGame = (matrix: number[]) => {\n    const arr = matrix.slice();\n\n    for (let grid = 0; grid < this.gameType; grid++) {\n      // creates array with position of grid cells to mask\n      const maskPositions: number[] = [];\n      let rand: number;\n      for (let dif = 0; dif < this.difficulty; dif++) {\n        do {\n          rand = Math.floor(Math.random() * this.gameType);\n        } while (maskPositions.includes(rand));\n        maskPositions.push(rand);\n      }\n      // masks cells in grid\n      for (let col = 0; col < this.gameType; col++) {\n        if (maskPositions.includes(col)) {\n          const pos =\n            // cell iterator\n            col +\n            (this.gameType - this.ratio) * Math.floor(col / this.ratio) +\n            // grid iterator\n            grid * this.ratio +\n            // rows of grids iterator\n            Math.floor(grid / this.ratio) * this.gameType * (this.ratio - 1);\n          arr[pos] = 0;\n        }\n      }\n    }\n    return arr;\n  };\n\n  private generate = () => {\n    const matrix: number[] = compose(\n      this.shuffleRowsInGrid,\n      this.shuffleColumnsInGrid,\n      this.shuffleColumns,\n      this.shufflePairs\n    )(this.createTemplate());\n    const mask = this.maskGame(matrix);\n\n    return { matrix, mask };\n  };\n}\n","/**\n * Hypertext Transfer Protocol (HTTP) response status codes.\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\n */\nexport enum HTTPStatusCode {\n  /**\n   * The server has received the request headers and the client should proceed to send the request body\n   * (in the case of a request for which a body needs to be sent; for example, a POST request).\n   * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\n   * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\n   * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\n   */\n  CONTINUE = 100,\n\n  /**\n   * The requester has asked the server to switch protocols and the server has agreed to do so.\n   */\n  SWITCHING_PROTOCOLS = 101,\n\n  /**\n   * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\n   * This code indicates that the server has received and is processing the request, but no response is available yet.\n   * This prevents the client from timing out and assuming the request was lost.\n   */\n  PROCESSING = 102,\n\n  /**\n   * Standard response for successful HTTP requests.\n   * The actual response will depend on the request method used.\n   * In a GET request, the response will contain an entity corresponding to the requested resource.\n   * In a POST request, the response will contain an entity describing or containing the result of the action.\n   */\n  OK = 200,\n\n  /**\n   * The request has been fulfilled, resulting in the creation of a new resource.\n   */\n  CREATED = 201,\n\n  /**\n   * The request has been accepted for processing, but the processing has not been completed.\n   * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\n   */\n  ACCEPTED = 202,\n\n  /**\n   * SINCE HTTP/1.1\n   * The server is a transforming proxy that received a 200 OK from its origin,\n   * but is returning a modified version of the origin's response.\n   */\n  NON_AUTHORITATIVE_INFORMATION = 203,\n\n  /**\n   * The server successfully processed the request and is not returning any content.\n   */\n  NO_CONTENT = 204,\n\n  /**\n   * The server successfully processed the request, but is not returning any content.\n   * Unlike a 204 response, this response requires that the requester reset the document view.\n   */\n  RESET_CONTENT = 205,\n\n  /**\n   * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\n   * The range header is used by HTTP clients to enable resuming of interrupted downloads,\n   * or split a download into multiple simultaneous streams.\n   */\n  PARTIAL_CONTENT = 206,\n\n  /**\n   * The message body that follows is an XML message and can contain a number of separate response codes,\n   * depending on how many sub-requests were made.\n   */\n  MULTI_STATUS = 207,\n\n  /**\n   * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\n   * and are not being included again.\n   */\n  ALREADY_REPORTED = 208,\n\n  /**\n   * The server has fulfilled a request for the resource,\n   * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\n   */\n  IM_USED = 226,\n\n  /**\n   * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\n   * For example, this code could be used to present multiple video format options,\n   * to list files with different filename extensions, or to suggest word-sense disambiguation.\n   */\n  MULTIPLE_CHOICES = 300,\n\n  /**\n   * This and all future requests should be directed to the given URI.\n   */\n  MOVED_PERMANENTLY = 301,\n\n  /**\n   * This is an example of industry practice contradicting the standard.\n   * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\n   * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\n   * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\n   * to distinguish between the two behaviours. However, some Web applications and frameworks\n   * use the 302 status code as if it were the 303.\n   */\n  FOUND = 302,\n\n  /**\n   * SINCE HTTP/1.1\n   * The response to the request can be found under another URI using a GET method.\n   * When received in response to a POST (or PUT/DELETE), the client should presume that\n   * the server has received the data and should issue a redirect with a separate GET message.\n   */\n  SEE_OTHER = 303,\n\n  /**\n   * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\n   * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\n   */\n  NOT_MODIFIED = 304,\n\n  /**\n   * SINCE HTTP/1.1\n   * The requested resource is available only through a proxy, the address for which is provided in the response.\n   * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\n   */\n  USE_PROXY = 305,\n\n  /**\n   * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\n   */\n  SWITCH_PROXY = 306,\n\n  /**\n   * SINCE HTTP/1.1\n   * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\n   * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\n   * For example, a POST request should be repeated using another POST request.\n   */\n  TEMPORARY_REDIRECT = 307,\n\n  /**\n   * The request and all future requests should be repeated using another URI.\n   * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\n   * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\n   */\n  PERMANENT_REDIRECT = 308,\n\n  /**\n   * The server cannot or will not process the request due to an apparent client error\n   * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\n   */\n  BAD_REQUEST = 400,\n\n  /**\n   * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\n   * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\n   * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\n   * \"unauthenticated\",i.e. the user does not have the necessary credentials.\n   */\n  UNAUTHORIZED = 401,\n\n  /**\n   * Reserved for future use. The original intention was that this code might be used as part of some form of digital\n   * cash or micro payment scheme, but that has not happened, and this code is not usually used.\n   * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\n   */\n  PAYMENT_REQUIRED = 402,\n\n  /**\n   * The request was valid, but the server is refusing action.\n   * The user might not have the necessary permissions for a resource.\n   */\n  FORBIDDEN = 403,\n\n  /**\n   * The requested resource could not be found but may be available in the future.\n   * Subsequent requests by the client are permissible.\n   */\n  NOT_FOUND = 404,\n\n  /**\n   * A request method is not supported for the requested resource;\n   * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\n   */\n  METHOD_NOT_ALLOWED = 405,\n\n  /**\n   * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\n   */\n  NOT_ACCEPTABLE = 406,\n\n  /**\n   * The client must first authenticate itself with the proxy.\n   */\n  PROXY_AUTHENTICATION_REQUIRED = 407,\n\n  /**\n   * The server timed out waiting for the request.\n   * According to HTTP specifications:\n   * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\n   */\n  REQUEST_TIMEOUT = 408,\n\n  /**\n   * Indicates that the request could not be processed because of conflict in the request,\n   * such as an edit conflict between multiple simultaneous updates.\n   */\n  CONFLICT = 409,\n\n  /**\n   * Indicates that the resource requested is no longer available and will not be available again.\n   * This should be used when a resource has been intentionally removed and the resource should be purged.\n   * Upon receiving a 410 status code, the client should not request the resource in the future.\n   * Clients such as search engines should remove the resource from their indices.\n   * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\n   */\n  GONE = 410,\n\n  /**\n   * The request did not specify the length of its content, which is required by the requested resource.\n   */\n  LENGTH_REQUIRED = 411,\n\n  /**\n   * The server does not meet one of the preconditions that the requester put on the request.\n   */\n  PRECONDITION_FAILED = 412,\n\n  /**\n   * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\n   */\n  PAYLOAD_TOO_LARGE = 413,\n\n  /**\n   * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\n   * in which case it should be converted to a POST request.\n   * Called \"Request-URI Too Long\" previously.\n   */\n  URI_TOO_LONG = 414,\n\n  /**\n   * The request entity has a media type which the server or resource does not support.\n   * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\n   */\n  UNSUPPORTED_MEDIA_TYPE = 415,\n\n  /**\n   * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\n   * For example, if the client asked for a part of the file that lies beyond the end of the file.\n   * Called \"Requested Range Not Satisfiable\" previously.\n   */\n  RANGE_NOT_SATISFIABLE = 416,\n\n  /**\n   * The server cannot meet the requirements of the Expect request-header field.\n   */\n  EXPECTATION_FAILED = 417,\n\n  /**\n   * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\n   * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\n   * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\n   */\n  I_AM_A_TEAPOT = 418,\n\n  /**\n   * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\n   */\n  MISDIRECTED_REQUEST = 421,\n\n  /**\n   * The request was well-formed but was unable to be followed due to semantic errors.\n   */\n  UNPROCESSABLE_ENTITY = 422,\n\n  /**\n   * The resource that is being accessed is locked.\n   */\n  LOCKED = 423,\n\n  /**\n   * The request failed due to failure of a previous request (e.g., a PROPPATCH).\n   */\n  FAILED_DEPENDENCY = 424,\n\n  /**\n   * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\n   */\n  UPGRADE_REQUIRED = 426,\n\n  /**\n   * The origin server requires the request to be conditional.\n   * Intended to prevent \"the 'lost update' problem, where a client\n   * GETs a resource's state, modifies it, and PUTs it back to the server,\n   * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\n   */\n  PRECONDITION_REQUIRED = 428,\n\n  /**\n   * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\n   */\n  TOO_MANY_REQUESTS = 429,\n\n  /**\n   * The server is unwilling to process the request because either an individual header field,\n   * or all the header fields collectively, are too large.\n   */\n  REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\n\n  /**\n   * A server operator has received a legal demand to deny access to a resource or to a set of resources\n   * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\n   */\n  UNAVAILABLE_FOR_LEGAL_REASONS = 451,\n\n  /**\n   * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\n   */\n  INTERNAL_SERVER_ERROR = 500,\n\n  /**\n   * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\n   * Usually this implies future availability (e.g., a new feature of a web-service API).\n   */\n  NOT_IMPLEMENTED = 501,\n\n  /**\n   * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\n   */\n  BAD_GATEWAY = 502,\n\n  /**\n   * The server is currently unavailable (because it is overloaded or down for maintenance).\n   * Generally, this is a temporary state.\n   */\n  SERVICE_UNAVAILABLE = 503,\n\n  /**\n   * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\n   */\n  GATEWAY_TIMEOUT = 504,\n\n  /**\n   * The server does not support the HTTP protocol version used in the request\n   */\n  HTTP_VERSION_NOT_SUPPORTED = 505,\n\n  /**\n   * Transparent content negotiation for the request results in a circular reference.\n   */\n  VARIANT_ALSO_NEGOTIATES = 506,\n\n  /**\n   * The server is unable to store the representation needed to complete the request.\n   */\n  INSUFFICIENT_STORAGE = 507,\n\n  /**\n   * The server detected an infinite loop while processing the request.\n   */\n  LOOP_DETECTED = 508,\n\n  /**\n   * Further extensions to the request are required for the server to fulfill it.\n   */\n  NOT_EXTENDED = 510,\n\n  /**\n   * The client needs to authenticate to gain network access.\n   * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\n   * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\n   */\n  NETWORK_AUTHENTICATION_REQUIRED = 511,\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\n\nconst SERVER_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://damp-refuge-15092.herokuapp.com\"\n    : \"http://localhost:5000\";\n\nexport const REQUEST_TIMEOUT = 15000;\n\nexport const USER_ENDPOINT = `${SERVER_URL}/user`;\nexport const SAVE_GAME_ENDPOINT = `${SERVER_URL}/saveGame`;\n\nconst commonHeaders = {\n  \"Cache-Control\": \"no-store, no-cache\",\n};\n\nconst commonOptions: AxiosRequestConfig = {\n  headers: commonHeaders,\n  timeout: REQUEST_TIMEOUT,\n};\n\nexport const isNetworkError = (message: string) => message === \"Network Error\";\n\nexport const request = {\n  get: <R = any>(url: string) => {\n    return axios.get<R>(url, commonOptions);\n  },\n  post: <R = any>(url: string, body = {}) => {\n    return axios.post<R>(url, body, commonOptions);\n  },\n  put: <R = any>(url: string, body = {}) => {\n    return axios.put<R>(url, body, commonOptions);\n  },\n  delete: <R = any>(url: string) => {\n    return axios.delete<R>(url, commonOptions);\n  },\n};\n","import {\n  USER_ENDPOINT,\n  SAVE_GAME_ENDPOINT,\n  request,\n} from \"../../../utils/server\";\nimport { UserData } from \"../../../consts\";\nimport { Game } from \"../../../generator/generator\";\nimport { getStorageKey, StorageKeys } from \"../../../utils/localStorage\";\n\nexport interface ErrorResponse {\n  message: string;\n  status: number;\n}\n\nexport const isErrorResponse = <D>(\n  data: D | ErrorResponse\n): data is ErrorResponse => {\n  try {\n    return (data as ErrorResponse).status !== undefined;\n  } catch {\n    return false;\n  }\n};\n\nexport const registerUser = () =>\n  request.post<string | ErrorResponse>(USER_ENDPOINT);\n\nexport const getUser = (id: string) =>\n  request.get<UserData | ErrorResponse>(`${USER_ENDPOINT}/${id}`);\n\nexport const saveGame = (config: Omit<Game, \"shuffle\">, state: string) =>\n  request.post<null | ErrorResponse>(SAVE_GAME_ENDPOINT, {\n    config,\n    state,\n    id: getStorageKey(StorageKeys.UserId),\n  });\n","import { Page, ActionWithPayload, AppThunk, GameConfig } from \"../../../consts\";\nimport { Game } from \"../../../generator/generator\";\nimport { MenuSection } from \"../../menu-content/types\";\nimport { setStorageKey, StorageKeys } from \"../../../utils/localStorage\";\nimport {\n  registerUser,\n  isErrorResponse,\n  getUser,\n  saveGame,\n  ErrorResponse,\n} from \"./requests\";\nimport { HTTPStatusCode } from \"../../../utils/errorCodes\";\n\nexport const SET_PAGE = \"@app/SET_PAGE\";\nexport const SET_CURRENT_GAME = \"@app/SET_CURRENT_GAME\";\nexport const SET_LOBBY_IS_LOADING = \"@app/SET_LOBBY_IS_LOADING\";\nexport const SET_LOBBY_HAS_ERROR = \"@app/SET_LOBBY_HAS_ERROR\";\nexport const SET_LOBBY_MENU_SECTION = \"@app/SET_LOBBY_MENU_SECTION\";\nexport const SET_ERROR = \"@app/SET_ERROR\";\nexport const REMOVE_ERROR = \"@app/REMOVE_ERROR\";\n\nexport type SetPageAction = ActionWithPayload<typeof SET_PAGE, Page>;\nexport const setPage = (payload: Page): SetPageAction => ({\n  type: SET_PAGE,\n  payload,\n});\n\nexport type SetCurrentGameAction = ActionWithPayload<\n  typeof SET_CURRENT_GAME,\n  Game\n>;\nexport const setCurrentGame = (payload: Game): SetCurrentGameAction => ({\n  type: SET_CURRENT_GAME,\n  payload,\n});\n\nexport type SetLobbyIsLoadingAction = ActionWithPayload<\n  typeof SET_LOBBY_IS_LOADING,\n  boolean\n>;\nexport const setLobbyIsLoading = (\n  payload: boolean\n): SetLobbyIsLoadingAction => ({\n  type: SET_LOBBY_IS_LOADING,\n  payload,\n});\n\nexport type SetLobbyHasErrorAction = ActionWithPayload<\n  typeof SET_LOBBY_HAS_ERROR,\n  boolean\n>;\nexport const setLobbyHasError = (payload: boolean): SetLobbyHasErrorAction => ({\n  type: SET_LOBBY_HAS_ERROR,\n  payload,\n});\n\nexport type SetLobbyMenuSectionAction = ActionWithPayload<\n  typeof SET_LOBBY_MENU_SECTION,\n  MenuSection | undefined\n>;\nexport const setLobbyMenuSection = (\n  payload?: MenuSection\n): SetLobbyMenuSectionAction => ({\n  type: SET_LOBBY_MENU_SECTION,\n  payload,\n});\n\nexport type SetErrorAction = ActionWithPayload<typeof SET_ERROR, ErrorResponse>;\nexport const setError = (payload: Error | ErrorResponse): SetErrorAction => {\n  const error = {\n    message: payload.message || \"Unknown error occured!\",\n    status:\n      (payload as ErrorResponse).status || HTTPStatusCode.INTERNAL_SERVER_ERROR,\n  };\n  return {\n    type: SET_ERROR,\n    payload: error,\n  };\n};\n\nexport type RemoveErrorAction = ActionWithPayload<\n  typeof REMOVE_ERROR,\n  Pick<ErrorResponse, \"message\">\n>;\nexport const removeError = (\n  payload: Pick<ErrorResponse, \"message\">\n): RemoveErrorAction => ({\n  type: REMOVE_ERROR,\n  payload,\n});\n\n// THUNKS\nexport const handleNewUser = (): AppThunk => async dispatch => {\n  dispatch(setLobbyIsLoading(true));\n\n  try {\n    const { data } = await registerUser();\n    if (isErrorResponse(data)) {\n      throw data;\n    }\n    dispatch(setLobbyIsLoading(false));\n    setStorageKey(StorageKeys.UserId, data);\n  } catch (error) {\n    dispatch(setError(error));\n    dispatch(setLobbyIsLoading(false));\n    dispatch(setLobbyHasError(true));\n  }\n};\n\nexport const handleCurrentUser = (id: string): AppThunk => async dispatch => {\n  dispatch(setLobbyIsLoading(true));\n\n  try {\n    const { data } = await getUser(id);\n    if (isErrorResponse(data)) {\n      throw data;\n    }\n    dispatch(setLobbyIsLoading(false));\n\n    if (data.game) {\n      dispatch(setCurrentGame(data.game.config));\n    }\n  } catch (error) {\n    dispatch(setError(error));\n    dispatch(setLobbyIsLoading(false));\n    dispatch(setLobbyHasError(true));\n  }\n};\n\nexport const startNewGame = (props: GameConfig): AppThunk => async dispatch => {\n  dispatch(setLobbyIsLoading(true));\n  const game = new Game(props);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { shuffle, ...config } = game;\n\n  try {\n    // TODO: Also record state\n    const { data } = await saveGame(config, \"initialState\");\n    if (isErrorResponse(data)) {\n      throw data;\n    }\n\n    dispatch(setCurrentGame(game));\n    dispatch(setLobbyIsLoading(false));\n    dispatch(setPage(Page.Game));\n  } catch (error) {\n    dispatch(setError(error));\n    dispatch(setLobbyIsLoading(false));\n    dispatch(setLobbyHasError(true));\n  }\n};\n","import * as React from \"react\";\n\nimport \"./button.less\";\n\nexport interface MenuButtonProps {\n  value: string;\n  onClick: () => void;\n  reversed?: boolean;\n  disabled?: boolean;\n  index?: number;\n}\n\nexport const MenuButton = (props: MenuButtonProps) => (\n  <button\n    className={[\n      \"menu-button\",\n      props.reversed ? \"reversed\" : null,\n      props.disabled ? \"disabled\" : null,\n    ].join(\" \")}\n    onClick={props.onClick}\n    key={props.index}\n  >\n    {props.value}\n  </button>\n);\n\nexport const mapPropsToMenuButtons = (buttons: MenuButtonProps[]) => {\n  return buttons.map((props, index) => <MenuButton {...props} key={index} />);\n};\n\nexport enum GameButtonSize {\n  Default,\n  Small,\n}\n\nexport interface GameButtonProps {\n  value?: string;\n  onClick: () => void;\n  size?: GameButtonSize;\n  selected?: boolean;\n  icon?: JSX.Element;\n}\n\nexport const GameButton = ({\n  value,\n  icon,\n  onClick,\n  size = GameButtonSize.Default,\n  selected = false,\n}: GameButtonProps) => (\n  <button\n    className={[\n      \"game-button\",\n      selected ? \"selected\" : null,\n      size === GameButtonSize.Small ? \"small\" : null,\n    ].join(\" \")}\n    onClick={onClick}\n  >\n    {value}\n    {icon}\n  </button>\n);\n\nexport const mapPropsToGameButtons = (buttons: GameButtonProps[]) => {\n  return buttons.map((props, index) => <GameButton {...props} key={index} />);\n};\n","import { Reducer } from \"redux\";\nimport { Game } from \"../../../generator/generator\";\nimport { Page } from \"../../../consts\";\nimport {\n  SetPageAction,\n  SetCurrentGameAction,\n  SetLobbyHasErrorAction,\n  SetLobbyIsLoadingAction,\n  SetLobbyMenuSectionAction,\n  SET_CURRENT_GAME,\n  SET_PAGE,\n  SET_LOBBY_IS_LOADING,\n  SET_LOBBY_HAS_ERROR,\n  SET_LOBBY_MENU_SECTION,\n  SetErrorAction,\n  RemoveErrorAction,\n  SET_ERROR,\n  REMOVE_ERROR,\n} from \"./actions\";\nimport { MenuSection } from \"../../menu-content/types\";\nimport { ErrorResponse } from \"./requests\";\n\ninterface State {\n  page: Page;\n  currentGame: Game | undefined;\n  lobbyIsLoading: boolean;\n  lobbyHasError: boolean;\n  lobbyMenuSection: MenuSection | undefined;\n  errors: ErrorResponse[];\n}\n\ntype Actions =\n  | SetPageAction\n  | SetCurrentGameAction\n  | SetLobbyHasErrorAction\n  | SetLobbyIsLoadingAction\n  | SetLobbyMenuSectionAction\n  | SetErrorAction\n  | RemoveErrorAction;\n\nconst initialState: State = {\n  page: Page.Menu,\n  currentGame: undefined,\n  lobbyIsLoading: true,\n  lobbyHasError: false,\n  lobbyMenuSection: undefined,\n  errors: [],\n};\n\nexport const appReducer: Reducer<State, Actions> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case SET_PAGE: {\n      return { ...state, page: action.payload };\n    }\n    case SET_CURRENT_GAME: {\n      return { ...state, currentGame: action.payload };\n    }\n    case SET_LOBBY_HAS_ERROR: {\n      return { ...state, lobbyHasError: action.payload };\n    }\n    case SET_LOBBY_IS_LOADING: {\n      return { ...state, lobbyIsLoading: action.payload };\n    }\n    case SET_LOBBY_MENU_SECTION: {\n      return { ...state, lobbyMenuSection: action.payload };\n    }\n    case SET_ERROR: {\n      return {\n        ...state,\n        errors: [\n          action.payload,\n          ...state.errors.filter(\n            error => error.message !== action.payload.message\n          ),\n        ],\n      };\n    }\n    case REMOVE_ERROR: {\n      return {\n        ...state,\n        errors: state.errors.filter(\n          error => error.message !== action.payload.message\n        ),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { GameType } from \"../consts\";\n\nexport interface RowValues<ArrayType> {\n  row: number;\n  pos: number;\n  arr: ArrayType[][];\n}\n\n/**\n * Iterates through each cell row-wise and calls callback function for each cell.\n * Returns array from callback.\n */\nexport const sortByRows = <ArrayType = number>(\n  gameType: GameType,\n  callback: (values: RowValues<ArrayType>) => void\n) => {\n  let pos: number;\n  let values: RowValues<ArrayType>;\n  const arr: ArrayType[][] = [];\n  for (let row = 0; row < gameType; row++) {\n    arr.push([]);\n    for (let col = 0; col < gameType; col++) {\n      pos = row * gameType + col;\n      values = { row, pos, arr };\n      callback(values);\n    }\n  }\n  return arr;\n};\n\nexport interface ColumnValues<ArrayType> {\n  col: number;\n  pos: number;\n  arr: ArrayType[][];\n}\n\n/**\n * Iterates through each cell column-wise and calls callback function for each cell.\n * Returns array from callback.\n */\nexport const sortByCols = <ArrayType = number>(\n  gameType: GameType,\n  callback: (values: ColumnValues<ArrayType>) => void\n) => {\n  let pos: number;\n  let values: ColumnValues<ArrayType>;\n  const arr: ArrayType[][] = [];\n  for (let col = 0; col < gameType; col++) {\n    arr.push([]);\n    for (let row = 0; row < gameType; row++) {\n      pos = col + gameType * row;\n      values = { col, pos, arr };\n      callback(values);\n    }\n  }\n  return arr;\n};\n\nexport interface GridValues<ArrayType> {\n  row: number;\n  col: number;\n  grid: number;\n  pos: number;\n  arr: ArrayType[][];\n}\n\n/**\n * Iterates through each cell grid-wise and calls callback function for each cell.\n * Returns array from callback.\n * TODO improve function with one from generator\n */\nexport const sortByGrids = <ArrayType = number>(\n  gameType: GameType,\n  gameRatio: number,\n  callback: (values: GridValues<ArrayType>) => void\n) => {\n  let grid: number;\n  let rowPos: number;\n  let colPos: number;\n  let pos: number;\n  let values: GridValues<ArrayType>;\n  const arr: ArrayType[][] = [];\n  // rows of grids in table\n  for (let rowGrid = 0; rowGrid < gameRatio; rowGrid++) {\n    // columns of grids in table\n    for (let colGrid = 0; colGrid < gameRatio; colGrid++) {\n      // grid number horizontally\n      grid = rowGrid * gameRatio + colGrid;\n      arr.push([]);\n      // row per grid\n      for (let row = 0; row < gameRatio; row++) {\n        // position of first column in each grid\n        rowPos = (row + rowGrid * gameRatio) * gameType;\n        // column per grid\n        for (let col = 0; col < gameRatio; col++) {\n          // increment of column per grid and rows of grids\n          colPos = col + colGrid * gameRatio;\n          // final position\n          pos = rowPos + colPos;\n          values = { row, col, grid, pos, arr };\n          callback(values);\n        }\n      }\n    }\n  }\n  return arr;\n};\n","import { removeDuplicates } from \"../../../utils/generalUtils\";\nimport { sortByRows, sortByCols, sortByGrids } from \"../../../utils/arrayUtils\";\nimport { CellMode, TableCellsMap, GameType } from \"../../../consts\";\n\n/**\n * Finds pencil mode cell duplicates from rows, cols and grids\n */\nexport const getDuplicates = (\n  cellProps: TableCellsMap,\n  gameType: GameType,\n  gameRatio: number\n) => {\n  const pencilCellsRows = sortByRows(gameType, ({ arr, row, pos }) => {\n    if (cellProps[pos].mode !== CellMode.Notes && cellProps[pos].value) {\n      arr[row].push(pos);\n    }\n  });\n  const pencilCellsCols = sortByCols(gameType, ({ arr, col, pos }) => {\n    if (cellProps[pos].mode !== CellMode.Notes && cellProps[pos].value) {\n      arr[col].push(pos);\n    }\n  });\n  const pencilCellsGrids = sortByGrids(\n    gameType,\n    gameRatio,\n    ({ arr, grid, pos }) => {\n      if (cellProps[pos].mode !== CellMode.Notes && cellProps[pos].value) {\n        arr[grid].push(pos);\n      }\n    }\n  );\n  const duplicates = removeDuplicates(\n    findDuplicates(\n      pencilCellsRows,\n      pencilCellsCols,\n      pencilCellsGrids,\n      cellProps\n    )\n  );\n\n  return duplicates;\n};\n\n/**\n * Finds all occuring duplicates and returns array of their cell positions\n */\nconst findDuplicates = (\n  rows: number[][],\n  cols: number[][],\n  grids: number[][],\n  cellProps: TableCellsMap\n) => {\n  const arr: number[][] = [...rows, ...cols, ...grids];\n  const duplicates: number[] = [];\n  for (let outer = 0; outer < arr.length; outer++) {\n    for (let inner = 0; inner < arr[outer].length; inner++) {\n      for (let pos = 1; pos < arr[outer].length - inner; pos++) {\n        const currentPos = arr[outer][inner];\n        const nextPos = arr[outer][inner + pos];\n        if (cellProps[currentPos].value === cellProps[nextPos].value) {\n          duplicates.push(currentPos);\n          duplicates.push(nextPos);\n        }\n      }\n    }\n  }\n  return duplicates;\n};\n","import { RootState } from \"../../../ducks/store\";\n\nexport const getPage = (state: RootState) => state.app.page;\nexport const getCurrentGame = (state: RootState) => state.app.currentGame;\nexport const getHasCurrentGame = (state: RootState) => !!state.app.currentGame;\nexport const getLobbyIsLoading = (state: RootState) => state.app.lobbyIsLoading;\nexport const getLobbyHasError = (state: RootState) => state.app.lobbyHasError;\nexport const getLobbyMenuSection = (state: RootState) =>\n  state.app.lobbyMenuSection;\nexport const getErrors = (state: RootState) => state.app.errors;\n","import { TableCellsMap, CellMode, CellProps } from \"../../../consts\";\nimport { getStorageKey, StorageKeys } from \"../../../utils/localStorage\";\n\n/**\n * Assigns new game values to corresponding cells.\n */\nexport const getNewCellProps = (values: number[]) => {\n  const cellProps: TableCellsMap = {};\n  values.forEach((value, key) => {\n    const isReadOnlyCell = value !== 0;\n\n    cellProps[key] = {\n      value,\n      withHighlight: false,\n      withError: false,\n      mode: isReadOnlyCell ? CellMode.ReadOnly : CellMode.Pencil,\n    };\n  });\n  return cellProps;\n};\n\n/**\n * Assigns end game values to corresponding cells.\n */\nexport const getEndgameCellProps = (\n  values: number[],\n  currentCellProps: TableCellsMap\n) => {\n  const cellProps: TableCellsMap = {};\n  values.forEach((value, key) => {\n    const isReadOnlyCell =\n      currentCellProps[key] && currentCellProps[key].mode === CellMode.ReadOnly;\n\n    cellProps[key] = {\n      value,\n      withHighlight: false,\n      withError: false,\n      mode: isReadOnlyCell ? CellMode.ReadOnly : CellMode.Pencil,\n    };\n  });\n  return cellProps;\n};\n\n/**\n * Resets highlights and updates errors if enabled in settings\n */\nexport const resetCellStatus = (\n  cellProps: TableCellsMap,\n  duplicates: number[]\n) => {\n  const newCellProps: TableCellsMap = {};\n  const disableInGameError = getStorageKey(StorageKeys.DisableInGameError);\n  const disableHighlighting = getStorageKey(StorageKeys.DisableHighlighting);\n\n  if (disableHighlighting && disableInGameError) {\n    return undefined;\n  }\n\n  for (const key in cellProps) {\n    if (cellProps.hasOwnProperty(key)) {\n      const pos = +key;\n      newCellProps[pos] = {\n        ...cellProps[pos],\n        withHighlight: false,\n        withError: disableInGameError ? false : duplicates.includes(pos),\n      };\n    }\n  }\n\n  return newCellProps;\n};\n\nexport const updateCellsCellMode = (\n  cellProps: TableCellsMap,\n  cellMode: CellMode\n) => {\n  const newCellProps: TableCellsMap = {};\n  for (const key in cellProps) {\n    if (cellProps.hasOwnProperty(key)) {\n      const props = cellProps[key];\n      newCellProps[key] = props.value ? props : { ...props, mode: cellMode };\n    }\n  }\n\n  return newCellProps;\n};\n\n/**\n * Checks if there are empty cells or in notes mode\n */\nexport const hasInvalidEndgameCells = (cellProps: TableCellsMap) => {\n  for (const key in cellProps) {\n    if (\n      (cellProps.hasOwnProperty(key) &&\n        cellProps[key].mode === CellMode.Notes) ||\n      !cellProps[key].value\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const isCellHighlightable = (cell: CellProps) => {\n  return !!cell.value && cell.mode !== CellMode.Notes;\n};\n\nexport const canAutomaticallyUpdateNotesCells = ({\n  cellMode,\n  selectedCell,\n}: {\n  cellMode: CellMode;\n  selectedCell: CellProps;\n}) => {\n  const disableAutoNotesRemoval = getStorageKey(\n    StorageKeys.DisableAutoNotesRemoval\n  );\n  return (\n    cellMode === CellMode.Pencil &&\n    selectedCell.mode === CellMode.Pencil &&\n    selectedCell.value &&\n    !disableAutoNotesRemoval\n  );\n};\n\n/**\n * Highlights pencil cells that have same value\n */\nexport const updateCellsHighlight = (\n  cellProps: TableCellsMap,\n  selectedCell: CellProps\n) => {\n  const newCellProps: TableCellsMap = {};\n\n  for (const key in cellProps) {\n    if (cellProps.hasOwnProperty(key)) {\n      const matchesValue =\n        cellProps[key].mode !== CellMode.Notes &&\n        selectedCell.value === cellProps[key].value;\n      newCellProps[key] = {\n        ...cellProps[key],\n        withHighlight: isCellHighlightable(selectedCell) && matchesValue,\n      };\n    }\n  }\n\n  return newCellProps;\n};\n","import { RootState } from \"../../../ducks/store\";\nimport { GameState } from \"./reducer\";\n\nexport const getCellMode = (state: RootState) => state.game.cellMode;\nexport const getCellProps = (state: RootState) => state.game.cellProps;\nexport const getGameState = (state: RootState) => state.game.gameState;\nexport const areCellsDisabled = (state: RootState) => {\n  return [GameState.Win, GameState.GameOver].includes(getGameState(state));\n};\n","import { removeDuplicates } from \"../../../utils/generalUtils\";\nimport { sortByRows, sortByCols, sortByGrids } from \"../../../utils/arrayUtils\";\nimport {\n  CellMode,\n  TableCellsMap,\n  CellCoordinates,\n  GameType,\n  CellProps,\n} from \"../../../consts\";\n\nconst getDuplicateNotesCells = (\n  gameType: GameType,\n  gameRatio: number,\n  cellProps: TableCellsMap,\n  coor: CellCoordinates\n) => {\n  const notesCellsRows = sortByRows(gameType, ({ arr, row, pos }) => {\n    if (cellProps[pos].mode === CellMode.Notes && cellProps[pos].value) {\n      arr[row].push(pos);\n    }\n  });\n  const notesCellsCols = sortByCols(gameType, ({ arr, col, pos }) => {\n    if (cellProps[pos].mode === CellMode.Notes && cellProps[pos].value) {\n      arr[col].push(pos);\n    }\n  });\n  const notesCellsGrids = sortByGrids(\n    gameType,\n    gameRatio,\n    ({ arr, grid, pos }) => {\n      if (cellProps[pos].mode === CellMode.Notes && cellProps[pos].value) {\n        arr[grid].push(pos);\n      }\n    }\n  );\n  return removeDuplicates([\n    ...notesCellsRows[coor.x],\n    ...notesCellsCols[coor.y],\n    ...notesCellsGrids[coor.grid],\n  ]);\n};\n\n/**\n * Removes value from notes that match new pencil value\n */\nexport const removeDuplicateNotesCells = (\n  gameType: GameType,\n  gameRatio: number,\n  cellProps: TableCellsMap,\n  selectedCell: CellProps,\n  coor: CellCoordinates\n) => {\n  const duplicates = getDuplicateNotesCells(\n    gameType,\n    gameRatio,\n    cellProps,\n    coor\n  );\n  if (!duplicates.length) {\n    return undefined;\n  }\n\n  // Removes numbers from notes that are related to selected cell\n  const newCellProps: TableCellsMap = {};\n\n  for (const key in cellProps) {\n    if (cellProps.hasOwnProperty(key)) {\n      const props = cellProps[key];\n      let value = props.value;\n\n      if (duplicates.includes(+key)) {\n        const notes = `${value}`\n          .split(\"\")\n          .filter(val => `${selectedCell.value}` !== val)\n          .join(\"\");\n        value = +notes || 0;\n      }\n\n      newCellProps[key] = {\n        ...props,\n        value,\n      };\n    }\n  }\n\n  return newCellProps;\n};\n","import * as React from \"react\";\nimport cx from \"classnames\";\n\nimport \"./popup.less\";\n\nimport { GameButtonProps, mapPropsToGameButtons } from \"../buttons/Button\";\nimport { useSelector } from \"react-redux\";\nimport { getPopupProps } from \"./ducks/selectors\";\n\nexport enum PopupText {\n  Solve = \"Solve\",\n  Reset = \"Reset\",\n  Win = \"Win\",\n  Duplicates = \"Duplicates\",\n  Check = \"Check\",\n  NetworkError = \"NetworkError\",\n}\n\nconst PopupTextMap: { [key in PopupText]: JSX.Element } = {\n  [PopupText.Solve]: <span>Are you sure you want to solve?</span>,\n  [PopupText.Reset]: <span>Are you sure you want to reset?</span>,\n  [PopupText.Win]: (\n    <>\n      <span>Correct!</span>\n      <br />\n      <span>You have won the game!</span>\n    </>\n  ),\n  [PopupText.Duplicates]: <span>Some cell values are incorrect.</span>,\n  [PopupText.Check]: <span>Correct so far!</span>,\n  [PopupText.NetworkError]: (\n    <span>\n      Your network connection is down. Please check your network and try later.\n    </span>\n  ),\n};\n\nexport interface PopupProps {\n  text?: PopupText;\n  hidden: boolean;\n  buttons?: GameButtonProps[];\n}\n\nexport const Popup: React.FC = () => {\n  const { text, hidden, buttons } = useSelector(getPopupProps);\n  const isHidden = hidden || !text || !buttons;\n\n  return (\n    <div className={cx(\"message-popup\", isHidden && \"hidden\")}>\n      <div className=\"message\">{text && PopupTextMap[text]}</div>\n      <div className=\"buttons\">{buttons && mapPropsToGameButtons(buttons)}</div>\n    </div>\n  );\n};\n","import { RootState } from \"../../../ducks/store\";\n\nexport const getPopupProps = (state: RootState) => state.popup;\n","import { Reducer } from \"redux\";\nimport { CellMode, TableCellsMap } from \"../../../consts\";\nimport {\n  ToggleCellModeAction,\n  SetCellPropsAction,\n  TOGGLE_CELL_MODE,\n  SET_CELL_PROPS,\n  ResetGameToolsAction,\n  RESET_GAME_TOOLS,\n  SetGameStateAction,\n  SET_GAME_STATE,\n  HighLightCellsAction,\n  HIGHLIGHT_CELLS,\n  SetCellValueAction,\n  SET_CELL_VALUE,\n} from \"./actions\";\nimport {\n  SET_CURRENT_GAME,\n  SetCurrentGameAction,\n} from \"../../app/ducks/actions\";\nimport { updateCellsCellMode, updateCellsHighlight } from \"../helpers/helpers\";\nimport { getStorageKey, StorageKeys } from \"../../../utils/localStorage\";\n\nexport enum GameState {\n  New,\n  Playing,\n  Win,\n  GameOver,\n}\n\ninterface State {\n  cellMode: CellMode;\n  cellProps: TableCellsMap;\n  gameState: GameState;\n}\n\ntype Actions =\n  | ToggleCellModeAction\n  | SetCellPropsAction\n  | SetCurrentGameAction\n  | ResetGameToolsAction\n  | HighLightCellsAction\n  | SetGameStateAction\n  | SetCellValueAction;\n\nconst initialState: State = {\n  cellMode: CellMode.Pencil,\n  cellProps: {},\n  gameState: GameState.New,\n};\n\nexport const gameReducer: Reducer<State, Actions> = (\n  state = initialState,\n  action\n) => {\n  const { cellMode, cellProps } = state;\n  switch (action.type) {\n    case TOGGLE_CELL_MODE: {\n      const newCellMode =\n        cellMode === CellMode.Pencil ? CellMode.Notes : CellMode.Pencil;\n      return {\n        ...state,\n        cellMode: newCellMode,\n        cellProps: updateCellsCellMode(cellProps, newCellMode),\n      };\n    }\n    case HIGHLIGHT_CELLS: {\n      const disableHighlighting = getStorageKey(\n        StorageKeys.DisableHighlighting\n      );\n      if (disableHighlighting) {\n        return state;\n      }\n\n      return {\n        ...state,\n        cellProps: updateCellsHighlight(cellProps, action.payload),\n      };\n    }\n    case SET_CELL_VALUE: {\n      const { pos, value } = action.payload;\n      const props = state.cellProps[pos];\n\n      return {\n        ...state,\n        cellProps: {\n          ...state.cellProps,\n          [pos]: {\n            ...props,\n            value,\n            mode: state.cellMode,\n          },\n        },\n      };\n    }\n    case SET_GAME_STATE: {\n      return {\n        ...state,\n        gameState: action.payload,\n      };\n    }\n    case SET_CELL_PROPS: {\n      return {\n        ...state,\n        cellProps: action.payload,\n      };\n    }\n    case RESET_GAME_TOOLS: {\n      return {\n        ...state,\n        cellMode: CellMode.Pencil,\n      };\n    }\n    case SET_CURRENT_GAME: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import * as React from \"react\";\nimport \"./icons.less\";\n\nexport const crossSvg = (\n  <svg viewBox=\"0 0 30 30\" className=\"icon\">\n    <path\n      d={`m29.082202,23.702671c0,0 0,0 0,0l-8.702823,-8.702823l8.702823,-8.702823c0,0 0,0 0,\n      0c0.093712,-0.093712 0.161606,-0.203681 0.204637,-0.319387c0.118575,-0.318431 0.050681,\n      -0.691368 -0.205594,-0.947643l-4.110915,-4.110915c-0.256275,-0.256275 -0.629212,\n      -0.324168 -0.947643,-0.204637c-0.116662,0.043031 -0.225675,0.110925 -0.320343,0.204637c0,\n      0 0,0 0,0l-8.702823,8.702823l-8.702823,-8.702823c0,0 0,0 0,0c-0.093712,-0.093712 -0.203681,\n      -0.161606 -0.319387,-0.204637c-0.318431,-0.118575 -0.691368,-0.050681 -0.947643,0.204637l-4.110915,\n      4.110915c-0.256275,0.256275 -0.324168,0.629212 -0.205594,0.947643c0.043031,0.116662 0.110925,\n      0.225675 0.204637,0.319387c0,0 0,0 0,0l8.702823,8.702823l-8.702823,8.702823c0,0 0,0 0,0c-0.093712,\n      0.093712 -0.161606,0.203681 -0.204637,0.319387c-0.118575,0.318431 -0.050681,0.691368 0.205594,\n      0.947643l4.110915,4.110915c0.256275,0.256275 0.629212,0.324168 0.947643,0.205594c0.116662,\n      -0.043031 0.225675,-0.110925 0.319387,-0.204637c0,0 0,0 0,0l8.702823,-8.702823l8.702823,8.702823c0,\n      0 0,0 0,0c0.093712,0.093712 0.203681,0.161606 0.319387,0.204637c0.318431,0.118575 0.691368,\n      0.050681 0.947643,-0.205594l4.110915,-4.110915c0.256275,-0.256275 0.324168,-0.629212 0.205594,\n      -0.947643c-0.043031,-0.116662 -0.110925,-0.225675 -0.204637,-0.319387l0.000956,0z`}\n    ></path>\n  </svg>\n);\n\nexport const arrowSvg = (\n  <svg viewBox=\"0 0 30 30\" className=\"icon\">\n    <path d=\"m29.5315,15l-14.063,-14.063l0,8.438l-15,0l0,11.25l15,0l0,8.438l14.063,-14.063z\"></path>\n  </svg>\n);\n\nexport const checkSvg = (\n  <svg viewBox=\"0 0 30 30\" className=\"icon\">\n    <path d=\"M25.313 3.75l-14.063 14.063-6.563-6.563-4.688 4.688 11.25 11.25 18.75-18.75z\"></path>\n  </svg>\n);\n\nexport const menuSvg = (\n  <svg viewBox=\"0 5 30 30\" className=\"icon\">\n    <path d=\"M1.875 5.625h26.25v5.625h-26.25zM1.875 13.125h26.25v5.625h-26.25zM1.875 20.625h26.25v5.625h-26.25z\"></path>\n  </svg>\n);\n\nexport const spinnerSvg = (\n  <svg className=\"icon spinner\" viewBox=\"0 0 32 32\">\n    <path d=\"M16 9.472c-1.030 0-1.865-0.835-1.865-1.865v-5.596c0-1.030 0.835-1.865 1.865-1.865s1.865 0.835 1.865 1.865v5.596c0 1.030-0.835 1.865-1.865 1.865z\"></path>\n    <path d=\"M16 31.155c-0.644 0-1.166-0.522-1.166-1.166v-5.596c0-0.644 0.522-1.166 1.166-1.166s1.166 0.522 1.166 1.166v5.596c0 0.644-0.522 1.166-1.166 1.166z\"></path>\n    <path d=\"M11.805 10.48c-0.604 0-1.192-0.314-1.516-0.875l-2.798-4.846c-0.483-0.836-0.196-1.906 0.64-2.389s1.906-0.196 2.389 0.64l2.798 4.846c0.483 0.836 0.196 1.906-0.64 2.389-0.275 0.159-0.576 0.235-0.873 0.235z\"></path>\n    <path d=\"M22.995 29.164c-0.363 0-0.715-0.188-0.91-0.525l-2.798-4.846c-0.29-0.502-0.118-1.143 0.384-1.433s1.143-0.118 1.433 0.384l2.798 4.846c0.29 0.502 0.118 1.143-0.384 1.433-0.165 0.095-0.346 0.141-0.524 0.141z\"></path>\n    <path d=\"M8.729 13.436c-0.277 0-0.557-0.070-0.814-0.219l-4.846-2.798c-0.781-0.451-1.048-1.449-0.597-2.229s1.449-1.048 2.229-0.597l4.846 2.798c0.781 0.451 1.048 1.449 0.597 2.229-0.302 0.524-0.851 0.816-1.415 0.816z\"></path>\n    <path d=\"M28.114 23.927c-0.158 0-0.319-0.040-0.465-0.125l-4.846-2.798c-0.446-0.258-0.599-0.828-0.341-1.274s0.828-0.599 1.274-0.341l4.846 2.798c0.446 0.258 0.599 0.828 0.341 1.274-0.173 0.299-0.486 0.466-0.809 0.466z\"></path>\n    <path d=\"M7.607 17.515h-5.596c-0.837 0-1.516-0.678-1.516-1.515s0.678-1.515 1.516-1.515h5.596c0.837 0 1.516 0.678 1.516 1.515s-0.678 1.515-1.516 1.515z\"></path>\n    <path d=\"M29.989 16.933c-0 0 0 0 0 0h-5.596c-0.515-0-0.933-0.418-0.933-0.933s0.418-0.933 0.933-0.933c0 0 0 0 0 0h5.596c0.515 0 0.933 0.418 0.933 0.933s-0.418 0.933-0.933 0.933z\"></path>\n    <path d=\"M3.886 24.394c-0.483 0-0.954-0.251-1.213-0.7-0.386-0.669-0.157-1.525 0.512-1.911l4.846-2.798c0.669-0.387 1.525-0.157 1.911 0.512s0.157 1.525-0.512 1.911l-4.846 2.798c-0.22 0.127-0.461 0.188-0.698 0.188z\"></path>\n    <path d=\"M23.27 12.736c-0.322 0-0.636-0.167-0.809-0.466-0.258-0.446-0.105-1.016 0.341-1.274l4.846-2.798c0.446-0.257 1.016-0.105 1.274 0.341s0.105 1.016-0.341 1.274l-4.846 2.798c-0.147 0.085-0.307 0.125-0.465 0.125z\"></path>\n    <path d=\"M9.004 29.397c-0.218 0-0.438-0.055-0.64-0.172-0.613-0.354-0.823-1.138-0.469-1.752l2.798-4.846c0.354-0.613 1.138-0.823 1.752-0.469s0.823 1.138 0.469 1.752l-2.798 4.846c-0.237 0.411-0.668 0.641-1.112 0.641z\"></path>\n    <path d=\"M20.196 9.664c-0.158 0-0.319-0.040-0.465-0.125-0.446-0.258-0.599-0.828-0.341-1.274l2.798-4.846c0.258-0.446 0.828-0.599 1.274-0.341s0.599 0.828 0.341 1.274l-2.798 4.846c-0.173 0.299-0.486 0.466-0.809 0.466z\"></path>\n  </svg>\n);\n","import { ActionWithPayload } from \"../../../consts\";\nimport { PopupProps, PopupText } from \"../../popup/Popup\";\nimport { Action, Dispatch } from \"redux\";\nimport { GameButtonSize } from \"../../buttons/Button\";\nimport { checkSvg } from \"../../svg/Icons\";\nimport { updateGameState } from \"../../game-page/ducks/actions\";\nimport { GameState } from \"../../game-page/ducks/reducer\";\nimport { toggleSideMenu } from \"../../side-menu/ducks/actions\";\n\nexport const SHOW_POPUP = \"@popup/SHOW_POPUP\";\nexport const HIDE_POPUP = \"@popup/HIDE_POPUP\";\n\nexport type ShowPopupAction = ActionWithPayload<\n  typeof SHOW_POPUP,\n  Omit<PopupProps, \"hidden\">\n>;\nexport const showPopup = (\n  payload: Omit<PopupProps, \"hidden\">\n): ShowPopupAction => ({\n  type: SHOW_POPUP,\n  payload,\n});\n\nexport type HidePopupAction = Action<typeof HIDE_POPUP>;\nexport const hidePopup = (): HidePopupAction => ({\n  type: HIDE_POPUP,\n});\n\nexport const showWinPopup = (dispatch: Dispatch) => {\n  dispatch(\n    showPopup({\n      text: PopupText.Win,\n      buttons: [\n        {\n          size: GameButtonSize.Small,\n          icon: checkSvg,\n          onClick: () => dispatch(hidePopup()),\n        },\n      ],\n    })\n  );\n};\n\nexport const showCheckPopup = (dispatch: Dispatch, hasDuplicates: boolean) => {\n  dispatch(\n    showPopup({\n      text: hasDuplicates ? PopupText.Duplicates : PopupText.Check,\n      buttons: [\n        {\n          size: GameButtonSize.Small,\n          icon: checkSvg,\n          onClick: () => dispatch(hidePopup()),\n        },\n      ],\n    })\n  );\n};\n\nexport const showResetPopup = (dispatch: Dispatch<any>) => {\n  dispatch(toggleSideMenu());\n  dispatch(\n    showPopup({\n      text: PopupText.Reset,\n      buttons: [\n        {\n          size: GameButtonSize.Small,\n          value: \"Yes\",\n          onClick: () => dispatch(updateGameState(GameState.New)),\n        },\n        {\n          size: GameButtonSize.Small,\n          value: \"No\",\n          onClick: () => dispatch(hidePopup()),\n        },\n      ],\n    })\n  );\n};\n\nexport const showSolvePopup = (dispatch: Dispatch<any>) => {\n  dispatch(toggleSideMenu());\n  dispatch(\n    showPopup({\n      text: PopupText.Solve,\n      buttons: [\n        {\n          size: GameButtonSize.Small,\n          value: \"Yes\",\n          onClick: () => dispatch(updateGameState(GameState.GameOver)),\n        },\n        {\n          size: GameButtonSize.Small,\n          value: \"No\",\n          onClick: () => dispatch(hidePopup()),\n        },\n      ],\n    })\n  );\n};\n","import {\n  ActionWithPayload,\n  TableCellsMap,\n  AppThunk,\n  CellCoordinates,\n  CellMode,\n  CellProps,\n} from \"../../../consts\";\nimport { Action } from \"redux\";\nimport { Game } from \"../../../generator/generator\";\nimport { getDuplicates } from \"../helpers/gameTable\";\nimport { getCurrentGame } from \"../../app/ducks/selectors\";\nimport {\n  hasInvalidEndgameCells,\n  getNewCellProps,\n  getEndgameCellProps,\n  canAutomaticallyUpdateNotesCells,\n  resetCellStatus,\n} from \"../helpers/helpers\";\nimport { GameState } from \"./reducer\";\nimport { getCellProps, getCellMode } from \"./selectors\";\nimport { removeDuplicateNotesCells } from \"../helpers/gameNotesCells\";\nimport { removeDuplicates } from \"../../../utils/generalUtils\";\nimport { showWinPopup, showCheckPopup } from \"../../popup/ducks/actions\";\nimport { toggleSideMenu } from \"../../side-menu/ducks/actions\";\n\nexport const TOGGLE_CELL_MODE = \"@game/TOGGLE_CELL_MODE\";\nexport const SET_CELL_PROPS = \"@game/SET_CELL_PROPS\";\nexport const RESET_GAME_TOOLS = \"@game/RESET_GAME_TOOLS\";\nexport const HIGHLIGHT_CELLS = \"@game/HIGHLIGHT_CELLS\";\nexport const SET_GAME_STATE = \"@game/SET_GAME_STATE\";\nexport const SET_CELL_VALUE = \"@game/SET_CELL_VALUE\";\n\nexport type ToggleCellModeAction = Action<typeof TOGGLE_CELL_MODE>;\nexport const toggleCellMode = (): ToggleCellModeAction => ({\n  type: TOGGLE_CELL_MODE,\n});\n\nexport type SetCellPropsAction = ActionWithPayload<\n  typeof SET_CELL_PROPS,\n  TableCellsMap\n>;\nexport const setCellProps = (payload: TableCellsMap): SetCellPropsAction => ({\n  type: SET_CELL_PROPS,\n  payload,\n});\n\nexport type ResetGameToolsAction = Action<typeof RESET_GAME_TOOLS>;\nexport const resetGameTools = (): ResetGameToolsAction => ({\n  type: RESET_GAME_TOOLS,\n});\n\nexport type HighLightCellsAction = ActionWithPayload<\n  typeof HIGHLIGHT_CELLS,\n  CellProps\n>;\nexport const highLightCells = (payload: CellProps): HighLightCellsAction => ({\n  type: HIGHLIGHT_CELLS,\n  payload,\n});\n\nexport type SetGameStateAction = ActionWithPayload<\n  typeof SET_GAME_STATE,\n  GameState\n>;\nexport const setGameState = (payload: GameState): SetGameStateAction => ({\n  type: SET_GAME_STATE,\n  payload,\n});\n\nexport type SetCellValueAction = ActionWithPayload<\n  typeof SET_CELL_VALUE,\n  { pos: number; value: number }\n>;\nexport const setCellValue = (payload: {\n  pos: number;\n  value: number;\n}): SetCellValueAction => ({\n  type: SET_CELL_VALUE,\n  payload,\n});\n\nexport const updateGameState = (gameState: GameState): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const game = getCurrentGame(getState());\n  const cellProps = getCellProps(getState());\n\n  if (gameState === GameState.New && game) {\n    dispatch(setCellProps(getNewCellProps(game.mask)));\n    dispatch(resetGameTools());\n  } else if (gameState === GameState.GameOver && game) {\n    dispatch(setCellProps(getEndgameCellProps(game.matrix, cellProps)));\n    dispatch(resetGameTools());\n  } else if (gameState === GameState.Win) {\n    dispatch(resetGameTools());\n    showWinPopup(dispatch);\n  }\n\n  dispatch(setGameState(gameState));\n};\n\nexport const checkForWin = (): AppThunk => (dispatch, getState) => {\n  const game = getCurrentGame(getState()) as Game;\n  const cellProps = getCellProps(getState());\n\n  // Finds pencil mode cell duplicates from rows, cols and grids\n  const duplicates = getDuplicates(cellProps, game.gameType, game.ratio);\n\n  const hasInvalidCells = hasInvalidEndgameCells(cellProps);\n\n  // displays win message if conditions are met\n  if (duplicates.length === 0 && !hasInvalidCells) {\n    dispatch(updateGameState(GameState.Win));\n  } else {\n    dispatch(toggleSideMenu());\n    showCheckPopup(dispatch, !!duplicates.length);\n  }\n};\n\nexport const updatePencilCells = (): AppThunk => (dispatch, getState) => {\n  const game = getCurrentGame(getState()) as Game;\n  const cellProps = getCellProps(getState());\n\n  // Finds pencil mode cell duplicates from rows, cols and grids\n  const duplicates = getDuplicates(cellProps, game.gameType, game.ratio);\n\n  // Resets highlights and updates errors if enabled in settings\n  const newCellProps = resetCellStatus(cellProps, duplicates);\n  if (newCellProps) {\n    dispatch(setCellProps(newCellProps));\n  }\n\n  const hasInvalidCells = hasInvalidEndgameCells(cellProps);\n\n  // displays win message if conditions are met\n  if (duplicates.length === 0 && !hasInvalidCells) {\n    dispatch(updateGameState(GameState.Win));\n  }\n};\n\nexport const updateNotesCells = (coor: CellCoordinates): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const state = getState();\n  const game = getCurrentGame(state) as Game;\n  const cellProps = getCellProps(state);\n  const cellMode = getCellMode(state);\n\n  const pos = coor.x * game.gameType + coor.y;\n  const props = cellProps[pos];\n\n  if (!canAutomaticallyUpdateNotesCells({ cellMode, selectedCell: props })) {\n    return;\n  }\n\n  const newCellProps = removeDuplicateNotesCells(\n    game.gameType,\n    game.ratio,\n    cellProps,\n    props,\n    coor\n  );\n\n  if (!newCellProps) {\n    return;\n  }\n\n  dispatch(setCellProps(newCellProps));\n};\n\nexport const updateCellValue = (pos: number, value: string): AppThunk => (\n  dispatch,\n  getState\n) => {\n  if (value === \"\") {\n    dispatch(setCellValue({ pos, value: 0 }));\n    return;\n  }\n\n  if (value.match(/^[1-9]+$/g)) {\n    const cellMode = getCellMode(getState());\n    let newValue: number;\n\n    if (cellMode === CellMode.Pencil) {\n      newValue = +value || 0;\n    } else {\n      const notes = removeDuplicates(\n        value\n          .split(\"\")\n          .map(val => +val)\n          .sort()\n      ).join(\"\");\n      newValue = +notes || 0;\n    }\n\n    dispatch(setCellValue({ pos, value: newValue }));\n    return;\n  }\n};\n","import { Action } from \"redux\";\n\nexport const TOGGLE_SIDE_MENU = \"@sideMenu/TOGGLE_SIDE_MENU\";\n\nexport type ToggleSideMenuAction = Action<typeof TOGGLE_SIDE_MENU>;\nexport const toggleSideMenu = (): ToggleSideMenuAction => ({\n  type: TOGGLE_SIDE_MENU,\n});\n","import { MenuContentSectionProps } from \"./MenuContentSection\";\n\nexport enum MenuSection {\n  Stats = \"Stats\",\n  Settings = \"Settings\",\n  Rules = \"Rules\",\n  About = \"About\",\n  Contacts = \"Contacts\",\n}\n\nexport type SharedSectionProps = Pick<\n  MenuContentSectionProps,\n  \"crossOnClick\" | \"arrowOnClick\"\n>;\n","import { Reducer } from \"redux\";\nimport {\n  ShowPopupAction,\n  SHOW_POPUP,\n  HIDE_POPUP,\n  HidePopupAction,\n} from \"./actions\";\nimport { PopupProps } from \"../../popup/Popup\";\nimport {\n  SET_CURRENT_GAME,\n  SetCurrentGameAction,\n} from \"../../app/ducks/actions\";\nimport {\n  ResetGameToolsAction,\n  RESET_GAME_TOOLS,\n} from \"../../game-page/ducks/actions\";\n\ntype State = PopupProps;\n\ntype Actions =\n  | ShowPopupAction\n  | HidePopupAction\n  | SetCurrentGameAction\n  | ResetGameToolsAction;\n\nconst initialState: State = {\n  hidden: true,\n};\n\nexport const popupReducer: Reducer<State, Actions> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case SHOW_POPUP:\n      return {\n        ...action.payload,\n        hidden: false,\n      };\n    case HIDE_POPUP:\n      return {\n        ...state,\n        hidden: true,\n      };\n    case RESET_GAME_TOOLS:\n      return {\n        ...state,\n        hidden: true,\n      };\n    case SET_CURRENT_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ToggleSideMenuAction, TOGGLE_SIDE_MENU } from \"./actions\";\nimport {\n  SET_CURRENT_GAME,\n  SetCurrentGameAction,\n} from \"../../app/ducks/actions\";\nimport {\n  ResetGameToolsAction,\n  RESET_GAME_TOOLS,\n} from \"../../game-page/ducks/actions\";\n\ninterface State {\n  isOpen: boolean;\n}\n\ntype Actions =\n  | ToggleSideMenuAction\n  | SetCurrentGameAction\n  | ResetGameToolsAction;\n\nconst initialState: State = {\n  isOpen: false,\n};\n\nexport const sideMenuReducer: Reducer<State, Actions> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case TOGGLE_SIDE_MENU:\n      return { ...state, isOpen: !state.isOpen };\n    case RESET_GAME_TOOLS:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    case SET_CURRENT_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { appReducer } from \"../components/app/ducks/reducer\";\nimport { gameReducer } from \"../components/game-page/ducks/reducer\";\nimport { popupReducer } from \"../components/popup/ducks/reducer\";\nimport { sideMenuReducer } from \"../components/side-menu/ducks/reducer\";\nimport { network } from \"./middlewares/network\";\n\nexport const rootReducer = combineReducers({\n  app: appReducer,\n  game: gameReducer,\n  popup: popupReducer,\n  sideMenu: sideMenuReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, network));\n","import { AppMiddleware } from \"../../consts\";\nimport { isNetworkError } from \"../../utils/server\";\nimport { showPopup, hidePopup } from \"../../components/popup/ducks/actions\";\nimport { removeError, SET_ERROR } from \"../../components/app/ducks/actions\";\nimport { PopupText } from \"../../components/popup/Popup\";\nimport { GameButtonSize } from \"../../components/buttons/Button\";\nimport { checkSvg } from \"../../components/svg/Icons\";\n\nexport const network: AppMiddleware = ({ dispatch }) => next => action => {\n  if (action.type === SET_ERROR && isNetworkError(action.payload.message)) {\n    dispatch(\n      showPopup({\n        text: PopupText.NetworkError,\n        buttons: [\n          {\n            size: GameButtonSize.Small,\n            icon: checkSvg,\n            onClick: () => {\n              dispatch(hidePopup());\n              dispatch(removeError({ message: action.payload.message }));\n            },\n          },\n        ],\n      })\n    );\n  }\n\n  return next(action);\n};\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./mainMenu.less\";\n\nimport { spinnerSvg } from \"../svg/Icons\";\nimport { mapPropsToMenuButtons, MenuButtonProps } from \"../buttons/Button\";\nimport {\n  getLobbyIsLoading,\n  getLobbyHasError,\n  getHasCurrentGame,\n} from \"../app/ducks/selectors\";\nimport { GameConfig, Page, GameDifficulty } from \"../../consts\";\nimport {\n  setPage,\n  setLobbyMenuSection,\n  startNewGame,\n} from \"../app/ducks/actions\";\nimport { MenuSection } from \"../menu-content/types\";\n\nconst menuSectionButtons = [\n  MenuSection.Stats,\n  MenuSection.Settings,\n  MenuSection.Rules,\n  MenuSection.About,\n];\n\nexport const MainMenu: React.FC = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLobbyIsLoading);\n  const hasError = useSelector(getLobbyHasError);\n  const hasCurrentGame = useSelector(getHasCurrentGame);\n\n  const generateGame = useCallback((props: GameConfig) => {\n    dispatch(startNewGame(props));\n  }, []);\n\n  const leftColumn: MenuButtonProps[] = [\n    {\n      value: \"Resume\",\n      disabled: !hasCurrentGame,\n      onClick: hasCurrentGame ? () => dispatch(setPage(Page.Game)) : () => {},\n    },\n    {\n      value: \"Easy\",\n      onClick: () => generateGame({ difficulty: GameDifficulty.Easy }),\n    },\n    {\n      value: \"Medium\",\n      onClick: () => generateGame({ difficulty: GameDifficulty.Medium }),\n    },\n    {\n      value: \"Hard\",\n      onClick: () => generateGame({ difficulty: GameDifficulty.Hard }),\n    },\n  ];\n\n  const rightColumn: MenuButtonProps[] = menuSectionButtons.map(\n    (section: MenuSection) => ({\n      value: section,\n      onClick: () => dispatch(setLobbyMenuSection(section)),\n    })\n  );\n\n  return (\n    <>\n      <h1 className=\"menu-logo\">Sudoku</h1>\n      <div className=\"column-container\">\n        {hasError && (\n          <h3>\n            An error has occurred :(<br></br>Please refresh the page!\n          </h3>\n        )}\n        {isLoading && !hasError && <div className=\"loading\">{spinnerSvg}</div>}\n        {!isLoading && !hasError && (\n          <>\n            <div className=\"column\">{mapPropsToMenuButtons(leftColumn)}</div>\n            <div className=\"column\">{mapPropsToMenuButtons(rightColumn)}</div>\n          </>\n        )}\n      </div>\n      <span>\n        <a\n          href=\"https://github.com/kobawan\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @kobawan\n        </a>\n      </span>\n    </>\n  );\n};\n","import * as React from \"react\";\n\nimport \"./menuContentSection.less\";\n\nimport { crossSvg, arrowSvg } from \"../svg/Icons\";\n\nexport enum ArrowDirection {\n  Right,\n  Left,\n}\n\nexport interface MenuContentSectionProps {\n  title: string;\n  content: JSX.Element;\n  withFooter?: boolean;\n  arrow?: ArrowDirection;\n  arrowOnClick?: () => void;\n  crossOnClick: () => void;\n}\n\nexport class MenuContentSection extends React.PureComponent<\n  MenuContentSectionProps\n> {\n  public render() {\n    const arrowClassNames = [\n      \"arrow\",\n      this.props.arrow === ArrowDirection.Left ? \"left\" : null,\n    ].join(\" \");\n\n    return (\n      <div className=\"section\">\n        <div className=\"cross\" onClick={this.props.crossOnClick}>\n          {crossSvg}\n        </div>\n        <div className=\"header\">\n          <h2>{this.props.title}</h2>\n        </div>\n        <div className=\"scrollable\">{this.props.content}</div>\n        {this.props.withFooter && (\n          <div className=\"footer\">\n            <div className={arrowClassNames} onClick={this.props.arrowOnClick}>\n              {arrowSvg}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StorageKeys,\n  getStorageKey,\n  setStorageKey,\n} from \"../../utils/localStorage\";\n\nimport \"./checkbox.less\";\n\nexport interface CheckBoxProps {\n  text: string;\n  storageKey: StorageKeys;\n}\n\ninterface CheckboxState {\n  isChecked: boolean;\n}\n\nexport class Checkbox extends React.PureComponent<\n  CheckBoxProps,\n  CheckboxState\n> {\n  public state: CheckboxState = {\n    isChecked: !!getStorageKey(this.props.storageKey),\n  };\n\n  public render() {\n    const checked = this.state.isChecked ? \"checked\" : \"\";\n    return (\n      <label className={`checkbox-label ${checked}`}>\n        <input\n          className=\"checkbox\"\n          type=\"checkbox\"\n          checked={this.state.isChecked}\n          onChange={this.onChange}\n        />\n        <span>{this.props.text}</span>\n      </label>\n    );\n  }\n\n  private onChange = () => {\n    const isChecked = !this.state.isChecked;\n    setStorageKey(this.props.storageKey, isChecked);\n    this.setState({ isChecked });\n  };\n}\n","import * as React from \"react\";\n\nimport { MenuContentSection } from \"./MenuContentSection\";\nimport { SharedSectionProps, MenuSection } from \"./types\";\nimport { Checkbox, CheckBoxProps } from \"../checkbox/Checkbox\";\nimport { StorageKeys } from \"../../utils/localStorage\";\n\nexport class SettingsSection extends React.PureComponent<SharedSectionProps> {\n  public render() {\n    return (\n      <MenuContentSection\n        title={MenuSection.Settings}\n        content={this.getContent()}\n        crossOnClick={this.props.crossOnClick}\n        arrowOnClick={this.props.arrowOnClick}\n      />\n    );\n  }\n\n  private getContent = () => {\n    const disableInGameProps: CheckBoxProps = {\n      text: \"Disable in-game error\",\n      storageKey: StorageKeys.DisableInGameError,\n    };\n    const disableHighlightingProps: CheckBoxProps = {\n      text: \"Disable cell highlighting\",\n      storageKey: StorageKeys.DisableHighlighting,\n    };\n    const disableAutoNotesRemovalProps: CheckBoxProps = {\n      text: \"Disable automatic removal of notes values\",\n      storageKey: StorageKeys.DisableAutoNotesRemoval,\n    };\n    return (\n      <>\n        <Checkbox {...disableInGameProps} />\n        <Checkbox {...disableHighlightingProps} />\n        <Checkbox {...disableAutoNotesRemovalProps} />\n      </>\n    );\n  };\n}\n","import * as React from \"react\";\n\nimport { MenuContentSection } from \"./MenuContentSection\";\nimport { SharedSectionProps, MenuSection } from \"./types\";\n\nexport class RulesSection extends React.PureComponent<SharedSectionProps> {\n  public render() {\n    const paragraph1 =\n      \"The classic Sudoku game involves a table of 81 squares. The table is divided \" +\n      \"into nine 3x3 grids, each containing nine squares.\";\n    const paragraph2 =\n      \"To win the game, each of the nine grids has to contain all the numbers 1-9 within \" +\n      \"its cells. Each number can only appear once in a row, column or grid.\";\n    return (\n      <MenuContentSection\n        title={MenuSection.Rules}\n        content={\n          <React.Fragment>\n            <p>{paragraph1}</p>\n            <p>{paragraph2}</p>\n          </React.Fragment>\n        }\n        crossOnClick={this.props.crossOnClick}\n        arrowOnClick={this.props.arrowOnClick}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { MenuContentSection, ArrowDirection } from \"./MenuContentSection\";\nimport { SharedSectionProps, MenuSection } from \"./types\";\n\nexport class ContactsSection extends React.PureComponent<SharedSectionProps> {\n  public render() {\n    return (\n      <MenuContentSection\n        title={MenuSection.Contacts}\n        withFooter={true}\n        arrow={ArrowDirection.Left}\n        content={\n          <React.Fragment>\n            <p>\n              <strong>Developer:</strong> Sara Nordmyr da Cunha\n              <a\n                href=\"https://github.com/kobawan\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                @kobawan\n              </a>\n            </p>\n            <p>\n              <strong>Bug reporting: </strong>\n              <a\n                href=\"https://github.com/kobawan/sudoku/issues\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                https://github.com/kobawan/sudoku/issues\n              </a>\n            </p>\n          </React.Fragment>\n        }\n        crossOnClick={this.props.crossOnClick}\n        arrowOnClick={this.props.arrowOnClick}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { MenuContentSection } from \"./MenuContentSection\";\nimport { SharedSectionProps, MenuSection } from \"./types\";\n\nexport class StatsSection extends React.PureComponent<SharedSectionProps> {\n  public render() {\n    return (\n      <MenuContentSection\n        title={MenuSection.Stats}\n        content={<p>TBD</p>}\n        crossOnClick={this.props.crossOnClick}\n        arrowOnClick={this.props.arrowOnClick}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { MenuContentSection } from \"./MenuContentSection\";\nimport { SharedSectionProps, MenuSection } from \"./types\";\n\nexport class AboutSection extends React.PureComponent<SharedSectionProps> {\n  public render() {\n    const paragraph1 =\n      \"Hi! My name is Sara, or Kobawan in the interwebz. I've always been a fan of puzzles, \" +\n      \"so when I started programming, I came up with the idea to combine my two joys of \" +\n      \"puzzles and programming, to create this website.\";\n    const paragraph2 =\n      \"It's been a fun project to create. Sometimes challenging and time-consuming, \" +\n      \"but in the end, a very good opportunity to learn programming.\";\n    const paragraph3 =\n      \"Along with creating more projects than I can handle, I also knit, play with my \" +\n      \"dogs, and binge watch netflix.\";\n    return (\n      <MenuContentSection\n        title={MenuSection.About}\n        withFooter={true}\n        content={\n          <React.Fragment>\n            <p>{paragraph1}</p>\n            <p>{paragraph2}</p>\n            <p>{paragraph3}</p>\n            <p>I hope you enjoy!</p>\n          </React.Fragment>\n        }\n        crossOnClick={this.props.crossOnClick}\n        arrowOnClick={this.props.arrowOnClick}\n      />\n    );\n  }\n}\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport cx from \"classnames\";\nimport \"./lobbyPage.less\";\n\nimport { MainMenu } from \"../main-menu/MainMenu\";\nimport { MenuSection, SharedSectionProps } from \"../menu-content/types\";\nimport { SettingsSection } from \"../menu-content/SettingsSection\";\nimport { RulesSection } from \"../menu-content/RulesSection\";\nimport { ContactsSection } from \"../menu-content/ContactsSection\";\nimport { StatsSection } from \"../menu-content/StatsSection\";\nimport { AboutSection } from \"../menu-content/AboutSection\";\nimport {\n  getLobbyIsLoading,\n  getLobbyHasError,\n  getLobbyMenuSection,\n} from \"../app/ducks/selectors\";\nimport { setLobbyMenuSection } from \"../app/ducks/actions\";\n\ntype MapMenuSectionToComponentIndexSignature = {\n  [k in MenuSection]: React.ComponentClass<SharedSectionProps>;\n};\n\nconst mapMenuSectionToComponent: MapMenuSectionToComponentIndexSignature = {\n  [MenuSection.Stats]: StatsSection,\n  [MenuSection.Settings]: SettingsSection,\n  [MenuSection.Rules]: RulesSection,\n  [MenuSection.About]: AboutSection,\n  [MenuSection.Contacts]: ContactsSection,\n};\n\nexport interface LobbyPageState {\n  currentSection?: MenuSection;\n}\n\nexport interface LobbyPageProps {\n  hidden: boolean;\n}\n\nexport const LobbyPage: React.FC<LobbyPageProps> = ({ hidden }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLobbyIsLoading);\n  const hasError = useSelector(getLobbyHasError);\n  const currentSection = useSelector(getLobbyMenuSection);\n\n  const getSectionComponent = useCallback(() => {\n    if (!currentSection) {\n      return null;\n    }\n\n    const Component = mapMenuSectionToComponent[currentSection];\n    const setSubSection = () => {\n      if (currentSection === MenuSection.About) {\n        dispatch(setLobbyMenuSection(MenuSection.Contacts));\n        return;\n      }\n      if (currentSection === MenuSection.Contacts) {\n        dispatch(setLobbyMenuSection(MenuSection.About));\n        return;\n      }\n    };\n\n    return (\n      <Component\n        crossOnClick={() => dispatch(setLobbyMenuSection(undefined))}\n        arrowOnClick={setSubSection}\n      />\n    );\n  }, [currentSection]);\n\n  return (\n    <div className={cx(\"lobby\", hidden && \"hidden\")}>\n      <div className=\"lobby-wrapper\">\n        <MainMenu />\n        {!isLoading && !hasError && getSectionComponent()}\n      </div>\n    </div>\n  );\n};\n","import { RootState } from \"../../../ducks/store\";\n\nexport const getSideMenuIsOpen = (state: RootState) => state.sideMenu.isOpen;\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport cx from \"classnames\";\n\nimport \"./sideMenu.less\";\n\nimport { mapPropsToMenuButtons, MenuButtonProps } from \"../buttons/Button\";\nimport { menuSvg } from \"../svg/Icons\";\nimport { checkForWin } from \"../game-page/ducks/actions\";\nimport { showResetPopup, showSolvePopup } from \"../popup/ducks/actions\";\nimport { getSideMenuIsOpen } from \"./ducks/selectors\";\nimport { toggleSideMenu } from \"./ducks/actions\";\n\ninterface SideMenuProps {\n  returnToLobby: () => void;\n}\n\nexport const SideMenu: React.FC<SideMenuProps> = ({ returnToLobby }) => {\n  const dispatch = useDispatch();\n  const isOpen = useSelector(getSideMenuIsOpen);\n  const onClick = useCallback(() => dispatch(toggleSideMenu()), []);\n\n  const sideMenuButtons: MenuButtonProps[] = [\n    {\n      value: \"Return\",\n      onClick: returnToLobby,\n    },\n    {\n      value: \"Reset\",\n      onClick: () => showResetPopup(dispatch),\n    },\n    {\n      value: \"Check\",\n      onClick: () => dispatch(checkForWin()),\n    },\n    {\n      value: \"Solve\",\n      onClick: () => showSolvePopup(dispatch),\n    },\n  ];\n\n  return (\n    <div className={cx(\"side-menu-container\", isOpen ? \"opened\" : \"hidden\")}>\n      <div className=\"side-menu-overlay\" onClick={onClick} />\n      <div className=\"side-menu\">\n        <div className=\"menu\">\n          <svg className=\"side-menu-logo\">\n            <text>Sudoku</text>\n          </svg>\n          <div className=\"buttons-wrapper\">\n            {mapPropsToMenuButtons(sideMenuButtons)}\n          </div>\n          <span>\n            <a\n              href=\"https://github.com/kobawan\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              @kobawan\n            </a>\n          </span>\n        </div>\n        <div className=\"side-menu-button\" onClick={onClick}>\n          {menuSvg}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { CellCoordinates, CellProps, CellMode } from \"../../consts\";\nimport { Game } from \"../../generator/generator\";\n\n/**\n * Returns coordinates of selected cell\n */\nexport const findCoordinates = (\n  gameRatio: number,\n  selectedCell: HTMLTextAreaElement\n): CellCoordinates => {\n  const tableCell = selectedCell.parentElement as HTMLTableDataCellElement;\n  const tableRow = tableCell.parentElement as HTMLTableRowElement;\n  const coorRow = tableRow.rowIndex;\n  const coorCol = tableCell.cellIndex;\n  const coorGrid =\n    Math.floor(coorRow / gameRatio) * gameRatio +\n    Math.floor(coorCol / gameRatio);\n  return { x: coorRow, y: coorCol, grid: coorGrid };\n};\n\nexport const getCellPosFromElement = ({\n  game,\n  cell,\n}: {\n  cell: HTMLTextAreaElement;\n  game: Game;\n}) => {\n  const { x, y } = findCoordinates(game.ratio, cell);\n  return x * game.gameType + y;\n};\n\n/**\n * Key up event to move cells using arrows\n */\nexport const arrowKeys = (keyCode: number, coor: CellCoordinates) => {\n  const sudokuTable = document.querySelector(\n    \"#SudokuTable\"\n  ) as HTMLTableElement;\n  let coorRow = coor.x;\n  let coorCol = coor.y;\n\n  switch (keyCode) {\n    case 37: // left arrow\n      coorCol === 0 ? (coorCol = 8) : coorCol--;\n      break;\n    case 38: // up arrow\n      coorRow === 0 ? (coorRow = 8) : coorRow--;\n      break;\n    case 39: // right arrow\n      coorCol === 8 ? (coorCol = 0) : coorCol++;\n      break;\n    case 40: // down arrow\n      coorRow === 8 ? (coorRow = 0) : coorRow++;\n      break;\n    default:\n      break;\n  }\n\n  const nextCell = sudokuTable.rows[coorRow].cells[coorCol]\n    .children[0] as HTMLTextAreaElement;\n  nextCell.focus();\n};\n\nexport const selectCellContent = ({\n  cell,\n  props,\n  cellMode,\n}: {\n  cell: HTMLTextAreaElement;\n  props: CellProps;\n  cellMode: CellMode;\n}) => {\n  if (\n    (cellMode === CellMode.Notes && props.mode === CellMode.Pencil) ||\n    (cellMode === CellMode.Pencil && props.mode !== CellMode.ReadOnly)\n  ) {\n    cell.select();\n  }\n};\n","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cx from \"classnames\";\n\nimport \"./cell.less\";\n\nimport { CellMode, CellProps } from \"../../consts\";\nimport {\n  getCellPosFromElement,\n  findCoordinates,\n  arrowKeys,\n  selectCellContent,\n} from \"./helpers\";\nimport {\n  highLightCells,\n  updateNotesCells,\n  updatePencilCells,\n  updateCellValue,\n} from \"../game-page/ducks/actions\";\nimport {\n  getCellMode,\n  getCellProps,\n  areCellsDisabled,\n} from \"../game-page/ducks/selectors\";\nimport { getCurrentGame } from \"../app/ducks/selectors\";\nimport { Game } from \"../../generator/generator\";\n\nexport const Cell: React.FC<CellProps> = ({\n  mode,\n  value,\n  withError,\n  withHighlight,\n}) => {\n  const dispatch = useDispatch();\n  const cellMode = useSelector(getCellMode);\n  const cellProps = useSelector(getCellProps);\n  const game = useSelector(getCurrentGame) as Game;\n  const isDisabled = useSelector(areCellsDisabled);\n\n  const onSelect = (\n    e:\n      | React.FocusEvent<HTMLTextAreaElement>\n      | React.MouseEvent<HTMLTextAreaElement>\n  ) => {\n    const cell = e.target as HTMLTextAreaElement;\n    const pos = getCellPosFromElement({ game, cell });\n    const props = cellProps[pos];\n    selectCellContent({ cell, props, cellMode });\n    dispatch(highLightCells(props));\n  };\n\n  const onKeyup: React.KeyboardEventHandler<HTMLTextAreaElement> = e => {\n    const cell = e.target as HTMLTextAreaElement;\n    const coor = findCoordinates(game.ratio, cell);\n\n    // removes notes from column, row and grid where the pencil value was inserted, if enabled in settings\n    dispatch(updateNotesCells(findCoordinates(game.ratio, cell)));\n\n    // resets highlights, shows cell errors if enabled in settings and checks if game is solved\n    dispatch(updatePencilCells());\n\n    // use arrow keys to move from cell to cell\n    arrowKeys(e.keyCode, coor);\n  };\n\n  const onInput: React.ChangeEventHandler<HTMLTextAreaElement> = e => {\n    const cell = e.target as HTMLTextAreaElement;\n    const pos = getCellPosFromElement({ game, cell });\n\n    // Filters invalid inputs updates cell with new value and mode\n    dispatch(updateCellValue(pos, cell.value));\n  };\n\n  return (\n    <textarea\n      readOnly={mode === CellMode.ReadOnly || isDisabled}\n      maxLength={mode !== CellMode.Notes ? 1 : 9}\n      rows={1}\n      cols={1}\n      value={value || \"\"}\n      className={cx(\n        mode,\n        isDisabled && \"disabled\",\n        withError && mode !== CellMode.Notes && \"error\",\n        withHighlight && mode !== CellMode.Notes && \"highlight\"\n      )}\n      onKeyUp={!isDisabled ? onKeyup : undefined}\n      onFocus={!isDisabled ? onSelect : undefined}\n      onClick={!isDisabled ? onSelect : undefined}\n      onChange={!isDisabled && mode !== CellMode.ReadOnly ? onInput : undefined}\n    />\n  );\n};\n","import * as React from \"react\";\n\nimport \"./sudokuTable.less\";\n\nimport { Cell } from \"../sudoku-cell/Cell\";\nimport { TableCellsMap, GameType } from \"../../consts\";\n\nexport interface SudokuTableProps {\n  cellState: TableCellsMap;\n  gameType: GameType;\n}\n\nexport const SudokuTable: React.FC<SudokuTableProps> = ({\n  gameType,\n  cellState,\n}) => {\n  const getTable = () => {\n    const rows: JSX.Element[] = [];\n    for (let row = 0; row < gameType; row++) {\n      const cols: JSX.Element[] = [];\n      for (let col = 0; col < gameType; col++) {\n        const props = cellState[row * gameType + col];\n        cols.push(\n          <td key={col}>\n            <Cell {...props} />\n          </td>\n        );\n      }\n      rows.push(<tr key={row}>{cols}</tr>);\n    }\n\n    return rows;\n  };\n\n  return (\n    <table className=\"sudoku\" id=\"SudokuTable\">\n      <tbody>{getTable()}</tbody>\n    </table>\n  );\n};\n","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./slider.less\";\n\nimport { toggleCellMode } from \"../game-page/ducks/actions\";\nimport { getCellMode } from \"../game-page/ducks/selectors\";\n\nexport const Slider: React.FC = () => {\n  const dispatch = useDispatch();\n  const cellMode = useSelector(getCellMode);\n\n  return (\n    <div className=\"game-buttons\" onClick={() => dispatch(toggleCellMode())}>\n      <span>Pencil</span>\n      <span>Notes</span>\n      <div className={`slider ${cellMode}-slider`} />\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport cx from \"classnames\";\n\nimport \"./gamePage.less\";\n\nimport { SideMenu } from \"../side-menu/SideMenu\";\nimport { Game } from \"../../generator/generator\";\nimport { SudokuTable } from \"../sudoku-table/SudokuTable\";\nimport { Slider } from \"../slider/Slider\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCellProps } from \"./ducks/selectors\";\nimport { resetGameTools, updateGameState } from \"./ducks/actions\";\nimport { GameState } from \"./ducks/reducer\";\n\nexport interface GamePageProps {\n  hidden: boolean;\n  game: Game;\n  returnToLobby: () => void;\n}\n\nexport const GamePage: React.FC<GamePageProps> = ({\n  hidden,\n  game,\n  returnToLobby,\n}) => {\n  const dispatch = useDispatch();\n  const cellProps = useSelector(getCellProps);\n\n  useEffect(() => {\n    dispatch(updateGameState(GameState.New));\n  }, []);\n\n  useEffect(() => {\n    dispatch(resetGameTools());\n  }, [hidden]);\n\n  return (\n    <div className={cx(\"game\", hidden && \"hidden\")}>\n      <SideMenu returnToLobby={returnToLobby} />\n      <div className=\"game-wrapper\">\n        <SudokuTable cellState={cellProps} gameType={game.gameType} />\n        <Slider />\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./ducks/store\";\n\nimport { App } from \"./components/app/App\";\nimport \"../styles/common.less\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React, { useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { LobbyPage } from \"../lobby-page/LobbyPage\";\nimport { GamePage } from \"../game-page/GamePage\";\nimport { getStorageKey, StorageKeys } from \"../../utils/localStorage\";\nimport { Page } from \"../../consts\";\nimport { getPage, getCurrentGame, getLobbyIsLoading } from \"./ducks/selectors\";\nimport { setPage, handleNewUser, handleCurrentUser } from \"./ducks/actions\";\nimport { Popup } from \"../popup/Popup\";\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedPage = useSelector(getPage);\n  const currentGame = useSelector(getCurrentGame);\n  const isLoading = useSelector(getLobbyIsLoading);\n\n  const isLobby = selectedPage === Page.Menu;\n  const returnToLobby = useCallback(() => {\n    dispatch(setPage(Page.Menu));\n  }, []);\n\n  useEffect(() => {\n    const id = getStorageKey(StorageKeys.UserId) as string;\n\n    if (!id) {\n      dispatch(handleNewUser());\n      return;\n    }\n    dispatch(handleCurrentUser(id));\n  }, []);\n\n  return (\n    <>\n      <LobbyPage hidden={!isLobby} />\n      {!isLoading && currentGame && (\n        <GamePage\n          hidden={isLobby}\n          game={currentGame}\n          returnToLobby={returnToLobby}\n        />\n      )}\n      <Popup />\n    </>\n  );\n};\n"],"sourceRoot":""}