!function(e){function n(n){for(var r,i,l=n[0],c=n[1],s=n[2],m=0,d=[];m<l.length;m++)i=l[m],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&d.push(a[i][0]),a[i]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(u&&u(n);d.length;)d.shift()();return o.push.apply(o,s||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],r=!0,l=1;l<t.length;l++){var c=t[l];0!==a[c]&&(r=!1)}r&&(o.splice(n--,1),e=i(i.s=t[0]))}return e}var r={},a={0:0},o=[];function i(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=e,i.c=r,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)i.d(t,r,function(n){return e[n]}.bind(null,r));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="";var l=window.webpackJsonp=window.webpackJsonp||[],c=l.push.bind(l);l.push=n,l=l.slice();for(var s=0;s<l.length;s++)n(l[s]);var u=c;o.push([30,1]),t()}({111:function(e,n,t){var r={"./log":112};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=111},113:function(e,n,t){"use strict";t.r(n);var r,a,o,i,l=t(0),c=t.n(l),s=t(11),u=t(2),m=t(9),d=t(29),p=t(1);!function(e){e[e.Game=0]="Game",e[e.Menu=1]="Menu"}(r||(r={})),function(e){e[e.Easy=4]="Easy",e[e.Medium=5]="Medium",e[e.Hard=6]="Hard"}(a||(a={})),function(e){e[e.Default=9]="Default"}(o||(o={})),function(e){e.Pencil="pencil",e.Notes="notes",e.ReadOnly="readOnly"}(i||(i={}));var f,h,g=function(e){if(1!==e.length)for(var n=0;n<e.length;n++)for(var t=1;t<e.length-n;t++)e[n]===e[n+t]&&e.splice(n+t,1);return e},b=function(e){var n=this;this.matrix=[],this.mask=[],this.createTemplate=function(){for(var e,t=[],r=0;r<n.gameType;r++)for(var a=0;a<n.gameType;a++)e=(r*n.ratio+Math.floor(r/n.ratio)+a)%n.gameType+1,t[r*n.gameType+a]=e;return t},this.shufflePairs=function(e){for(var t,r,a=e.slice(),o=0;o<n.shuffle;o++){t=Math.ceil(Math.random()*n.gameType);do{r=Math.ceil(Math.random()*n.gameType)}while(t===r);for(var i=0;i<a.length;i++)a[i]===t?a[i]=r:a[i]===r&&(a[i]=t)}return a},this.shuffleColumns=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s*n.gameType+(t*n.ratio+c%n.ratio),o=s*n.gameType+(r*n.ratio+c%n.ratio),i=l[a],l[a]=l[o],l[o]=i}return l},this.shuffleColumnsInGrid=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s*n.gameType+(c%n.ratio*n.ratio+t),o=s*n.gameType+(c%n.ratio*n.ratio+r),i=l[a],l[a]=l[o],l[o]=i}return l},this.shuffleRowsInGrid=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s+n.gameType*(c%n.ratio*n.ratio+t),o=s+n.gameType*(c%n.ratio*n.ratio+r),i=l[a],l[a]=l[o],l[o]=i}return l},this.maskGame=function(e){for(var t=e.slice(),r=0;r<n.gameType;r++){for(var a=[],o=void 0,i=0;i<n.difficulty;i++){do{o=Math.floor(Math.random()*n.gameType)}while(a.includes(o));a.push(o)}for(var l=0;l<n.gameType;l++)a.includes(l)&&(t[l+(n.gameType-n.ratio)*Math.floor(l/n.ratio)+r*n.ratio+Math.floor(r/n.ratio)*n.gameType*(n.ratio-1)]=0)}return t},this.generate=function(){var e=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return e.reduce((function(e,n){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return e(n.apply(void 0,t))}}))}(n.shuffleRowsInGrid,n.shuffleColumnsInGrid,n.shuffleColumns,n.shufflePairs)(n.createTemplate());return{matrix:e,mask:n.maskGame(e)}},this.gameType=e.type||o.Default,this.difficulty=e.difficulty,this.ratio=Math.sqrt(this.gameType),this.shuffle=e.shuffle||60;var t=this.generate();this.matrix=t.matrix,this.mask=t.mask};!function(e){e.DisableInGameError="DisableInGameError",e.DisableHighlighting="DisableHighlighting",e.DisableAutoNotesRemoval="DisableAutoNotesRemoval",e.UserId="UserId"}(h||(h={}));var v,y=((f={})[h.DisableInGameError]=!1,f[h.DisableHighlighting]=!1,f[h.DisableAutoNotesRemoval]=!1,f[h.UserId]="",f),E=function(e){try{var n=window.localStorage.getItem(e);if(null===n)throw Error;return JSON.parse(n)}catch(n){return y[e]}},O=function(e,n){try{window.localStorage.setItem(e,JSON.stringify(n))}catch(n){console.error("Local storage: Was not able to set item in key "+e)}},w=t(10),x=t.n(w),k="https://damp-refuge-15092.herokuapp.com",j={headers:{"Cache-Control":"no-store, no-cache"},timeout:15e3},_=function(e){return x.a.get(e,j)},C=function(e,n){return void 0===n&&(n={}),x.a.post(e,n,j)},M=function(e){try{return void 0!==e.status}catch(e){return!1}},S=function(e){return _(function(e){return k+"/user/"+e}(e))},T=function(e,n){return C("https://damp-refuge-15092.herokuapp.com/saveGame",{config:e,state:n,id:E(h.UserId)})},N=function(e){return{type:"@app/SET_PAGE",payload:e}},P=function(e){return{type:"@app/SET_CURRENT_GAME",payload:e}},G=function(e){return{type:"@app/SET_LOBBY_IS_LOADING",payload:e}},z=function(e){return{type:"@app/SET_LOBBY_HAS_ERROR",payload:e}},L=function(e){return{type:"@app/SET_LOBBY_MENU_SECTION",payload:e}},R={page:r.Menu,currentGame:void 0,lobbyIsLoading:!0,lobbyHasError:!1,lobbyMenuSection:void 0},I=function(e,n){for(var t=[],r=0;r<e;r++){t.push([]);for(var a=0;a<e;a++)n({row:r,pos:r*e+a,arr:t})}return t},D=function(e,n){for(var t=[],r=0;r<e;r++){t.push([]);for(var a=0;a<e;a++)n({col:r,pos:r+e*a,arr:t})}return t},A=function(e,n,t){for(var r,a,o=[],i=0;i<n;i++)for(var l=0;l<n;l++){r=i*n+l,o.push([]);for(var c=0;c<n;c++){a=(c+i*n)*e;for(var s=0;s<n;s++)t({row:c,col:s,grid:r,pos:a+(s+l*n),arr:o})}}return o},H=function(e,n,t){var r=I(n,(function(n){var t=n.arr,r=n.row,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)})),a=D(n,(function(n){var t=n.arr,r=n.col,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)})),o=A(n,t,(function(n){var t=n.arr,r=n.grid,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)}));return g(U(r,a,o,e))},U=function(e,n,t,r){for(var a=Object(p.f)(e,n,t),o=[],i=0;i<a.length;i++)for(var l=0;l<a[i].length;l++)for(var c=1;c<a[i].length-l;c++){var s=a[i][l],u=a[i][l+c];r[s].value===r[u].value&&(o.push(s),o.push(u))}return o},B=function(e){return e.app.page},F=function(e){return e.app.currentGame},W=function(e){return!!e.app.currentGame},Y=function(e){return e.app.lobbyIsLoading},K=function(e){return e.app.lobbyHasError},X=function(e){return e.app.lobbyMenuSection},q=function(e,n){var t={};for(var r in e)if(e.hasOwnProperty(r)){var a=e[r];t[r]=a.value?a:Object(p.a)(Object(p.a)({},a),{mode:n})}return t},J=function(e){for(var n in e)if(e.hasOwnProperty(n)&&e[n].mode===i.Notes||!e[n].value)return!0;return!1},V=function(e,n){var t,r={};for(var a in e)if(e.hasOwnProperty(a)){var o=e[a].mode!==i.Notes&&n.value===e[a].value;r[a]=Object(p.a)(Object(p.a)({},e[a]),{withHighlight:(t=n,!!t.value&&t.mode!==i.Notes&&o)})}return r},$=function(e){return e.game.cellMode},Q=function(e){return e.game.cellProps},Z=function(e){return[se.Win,se.GameOver].includes(function(e){return e.game.gameState}(e))},ee=function(e,n,t,r,a){var o=function(e,n,t,r){var a=I(e,(function(e){var n=e.arr,r=e.row,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)})),o=D(e,(function(e){var n=e.arr,r=e.col,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)})),l=A(e,n,(function(e){var n=e.arr,r=e.grid,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)}));return g(Object(p.f)(a[r.x],o[r.y],l[r.grid]))}(e,n,t,a);if(o.length){var l={};for(var c in t)if(t.hasOwnProperty(c)){var s=t[c],u=s.value;if(o.includes(+c))u=+(""+u).split("").filter((function(e){return""+r.value!==e})).join("")||0;l[c]=Object(p.a)(Object(p.a)({},s),{value:u})}return l}},ne=t(6),te=t.n(ne),re=(t(56),t(58),function(e){return l.createElement("button",{className:["menu-button",e.reversed?"reversed":null,e.disabled?"disabled":null].join(" "),onClick:e.onClick,key:e.index},e.value)}),ae=function(e){return e.map((function(e,n){return l.createElement(re,Object(p.a)({},e,{key:n}))}))};!function(e){e[e.Default=0]="Default",e[e.Small=1]="Small"}(v||(v={}));var oe,ie,le=function(e){var n=e.value,t=e.icon,r=e.onClick,a=e.size,o=void 0===a?v.Default:a,i=e.selected,c=void 0!==i&&i;return l.createElement("button",{className:["game-button",c?"selected":null,o===v.Small?"small":null].join(" "),onClick:r},n,t)},ce=function(e){return e.popup};!function(e){e.Solve="Solve",e.Reset="Reset",e.Win="Win",e.Duplicates="Duplicates",e.Check="Check"}(ie||(ie={}));var se,ue=((oe={})[ie.Solve]=l.createElement("span",null,"Are you sure you want to solve?"),oe[ie.Reset]=l.createElement("span",null,"Are you sure you want to reset?"),oe[ie.Win]=l.createElement(l.Fragment,null,l.createElement("span",null,"Correct!"),l.createElement("br",null),l.createElement("span",null,"You have won the game!")),oe[ie.Duplicates]=l.createElement("span",null,"Some cell values are incorrect."),oe[ie.Check]=l.createElement("span",null,"Correct so far!"),oe),me=function(){var e=Object(u.c)(ce),n=e.text,t=e.hidden,r=e.buttons,a=t||!n||!r;return l.createElement("div",{className:te()("message-popup",a&&"hidden")},l.createElement("div",{className:"message"},n&&ue[n]),l.createElement("div",{className:"buttons"},r&&function(e){return e.map((function(e,n){return l.createElement(le,Object(p.a)({},e,{key:n}))}))}(r)))},de=(t(60),l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"m29.082202,23.702671c0,0 0,0 0,0l-8.702823,-8.702823l8.702823,-8.702823c0,0 0,0 0,\n      0c0.093712,-0.093712 0.161606,-0.203681 0.204637,-0.319387c0.118575,-0.318431 0.050681,\n      -0.691368 -0.205594,-0.947643l-4.110915,-4.110915c-0.256275,-0.256275 -0.629212,\n      -0.324168 -0.947643,-0.204637c-0.116662,0.043031 -0.225675,0.110925 -0.320343,0.204637c0,\n      0 0,0 0,0l-8.702823,8.702823l-8.702823,-8.702823c0,0 0,0 0,0c-0.093712,-0.093712 -0.203681,\n      -0.161606 -0.319387,-0.204637c-0.318431,-0.118575 -0.691368,-0.050681 -0.947643,0.204637l-4.110915,\n      4.110915c-0.256275,0.256275 -0.324168,0.629212 -0.205594,0.947643c0.043031,0.116662 0.110925,\n      0.225675 0.204637,0.319387c0,0 0,0 0,0l8.702823,8.702823l-8.702823,8.702823c0,0 0,0 0,0c-0.093712,\n      0.093712 -0.161606,0.203681 -0.204637,0.319387c-0.118575,0.318431 -0.050681,0.691368 0.205594,\n      0.947643l4.110915,4.110915c0.256275,0.256275 0.629212,0.324168 0.947643,0.205594c0.116662,\n      -0.043031 0.225675,-0.110925 0.319387,-0.204637c0,0 0,0 0,0l8.702823,-8.702823l8.702823,8.702823c0,\n      0 0,0 0,0c0.093712,0.093712 0.203681,0.161606 0.319387,0.204637c0.318431,0.118575 0.691368,\n      0.050681 0.947643,-0.205594l4.110915,-4.110915c0.256275,-0.256275 0.324168,-0.629212 0.205594,\n      -0.947643c-0.043031,-0.116662 -0.110925,-0.225675 -0.204637,-0.319387l0.000956,0z"}))),pe=l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"m29.5315,15l-14.063,-14.063l0,8.438l-15,0l0,11.25l15,0l0,8.438l14.063,-14.063z"})),fe=l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"M25.313 3.75l-14.063 14.063-6.563-6.563-4.688 4.688 11.25 11.25 18.75-18.75z"})),he=l.createElement("svg",{viewBox:"0 5 30 30",className:"icon"},l.createElement("path",{d:"M1.875 5.625h26.25v5.625h-26.25zM1.875 13.125h26.25v5.625h-26.25zM1.875 20.625h26.25v5.625h-26.25z"})),ge=l.createElement("svg",{className:"icon spinner",viewBox:"0 0 32 32"},l.createElement("path",{d:"M16 9.472c-1.030 0-1.865-0.835-1.865-1.865v-5.596c0-1.030 0.835-1.865 1.865-1.865s1.865 0.835 1.865 1.865v5.596c0 1.030-0.835 1.865-1.865 1.865z"}),l.createElement("path",{d:"M16 31.155c-0.644 0-1.166-0.522-1.166-1.166v-5.596c0-0.644 0.522-1.166 1.166-1.166s1.166 0.522 1.166 1.166v5.596c0 0.644-0.522 1.166-1.166 1.166z"}),l.createElement("path",{d:"M11.805 10.48c-0.604 0-1.192-0.314-1.516-0.875l-2.798-4.846c-0.483-0.836-0.196-1.906 0.64-2.389s1.906-0.196 2.389 0.64l2.798 4.846c0.483 0.836 0.196 1.906-0.64 2.389-0.275 0.159-0.576 0.235-0.873 0.235z"}),l.createElement("path",{d:"M22.995 29.164c-0.363 0-0.715-0.188-0.91-0.525l-2.798-4.846c-0.29-0.502-0.118-1.143 0.384-1.433s1.143-0.118 1.433 0.384l2.798 4.846c0.29 0.502 0.118 1.143-0.384 1.433-0.165 0.095-0.346 0.141-0.524 0.141z"}),l.createElement("path",{d:"M8.729 13.436c-0.277 0-0.557-0.070-0.814-0.219l-4.846-2.798c-0.781-0.451-1.048-1.449-0.597-2.229s1.449-1.048 2.229-0.597l4.846 2.798c0.781 0.451 1.048 1.449 0.597 2.229-0.302 0.524-0.851 0.816-1.415 0.816z"}),l.createElement("path",{d:"M28.114 23.927c-0.158 0-0.319-0.040-0.465-0.125l-4.846-2.798c-0.446-0.258-0.599-0.828-0.341-1.274s0.828-0.599 1.274-0.341l4.846 2.798c0.446 0.258 0.599 0.828 0.341 1.274-0.173 0.299-0.486 0.466-0.809 0.466z"}),l.createElement("path",{d:"M7.607 17.515h-5.596c-0.837 0-1.516-0.678-1.516-1.515s0.678-1.515 1.516-1.515h5.596c0.837 0 1.516 0.678 1.516 1.515s-0.678 1.515-1.516 1.515z"}),l.createElement("path",{d:"M29.989 16.933c-0 0 0 0 0 0h-5.596c-0.515-0-0.933-0.418-0.933-0.933s0.418-0.933 0.933-0.933c0 0 0 0 0 0h5.596c0.515 0 0.933 0.418 0.933 0.933s-0.418 0.933-0.933 0.933z"}),l.createElement("path",{d:"M3.886 24.394c-0.483 0-0.954-0.251-1.213-0.7-0.386-0.669-0.157-1.525 0.512-1.911l4.846-2.798c0.669-0.387 1.525-0.157 1.911 0.512s0.157 1.525-0.512 1.911l-4.846 2.798c-0.22 0.127-0.461 0.188-0.698 0.188z"}),l.createElement("path",{d:"M23.27 12.736c-0.322 0-0.636-0.167-0.809-0.466-0.258-0.446-0.105-1.016 0.341-1.274l4.846-2.798c0.446-0.257 1.016-0.105 1.274 0.341s0.105 1.016-0.341 1.274l-4.846 2.798c-0.147 0.085-0.307 0.125-0.465 0.125z"}),l.createElement("path",{d:"M9.004 29.397c-0.218 0-0.438-0.055-0.64-0.172-0.613-0.354-0.823-1.138-0.469-1.752l2.798-4.846c0.354-0.613 1.138-0.823 1.752-0.469s0.823 1.138 0.469 1.752l-2.798 4.846c-0.237 0.411-0.668 0.641-1.112 0.641z"}),l.createElement("path",{d:"M20.196 9.664c-0.158 0-0.319-0.040-0.465-0.125-0.446-0.258-0.599-0.828-0.341-1.274l2.798-4.846c0.258-0.446 0.828-0.599 1.274-0.341s0.599 0.828 0.341 1.274l-2.798 4.846c-0.173 0.299-0.486 0.466-0.809 0.466z"})),be=function(e){return{type:"@popup/SHOW_POPUP",payload:e}},ve=function(e){return{type:"@game/SET_CELL_PROPS",payload:e}},ye=function(e){return{type:"@game/SET_CELL_VALUE",payload:e}},Ee=function(e){return function(n,t){var r=F(t()),a=Q(t());e===se.New&&r?(n(ve(function(e){var n={};return e.forEach((function(e,t){var r=0!==e;n[t]={value:e,withHighlight:!1,withError:!1,mode:r?i.ReadOnly:i.Pencil}})),n}(r.mask))),n({type:"@game/RESET_GAME_TOOLS"})):e===se.GameOver&&r?(n(ve(function(e,n){var t={};return e.forEach((function(e,r){var a=n[r]&&n[r].mode===i.ReadOnly;t[r]={value:e,withHighlight:!1,withError:!1,mode:a?i.ReadOnly:i.Pencil}})),t}(r.matrix,a))),n({type:"@game/RESET_GAME_TOOLS"})):e===se.Win&&(n({type:"@game/RESET_GAME_TOOLS"}),function(e){e(be({text:ie.Win,buttons:[{size:v.Small,icon:fe,onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(n)),n({type:"@game/SET_GAME_STATE",payload:e})}},Oe=function(){return function(e,n){var t=F(n()),r=Q(n()),a=H(r,t.gameType,t.ratio),o=J(r);0!==a.length||o?(e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),function(e,n){e(be({text:n?ie.Duplicates:ie.Check,buttons:[{size:v.Small,icon:fe,onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(e,!!a.length)):e(Ee(se.Win))}},we=function(){return function(e,n){var t=F(n()),r=Q(n()),a=H(r,t.gameType,t.ratio),o=function(e,n){var t={},r=E(h.DisableInGameError);if(!E(h.DisableHighlighting)||!r){for(var a in e)if(e.hasOwnProperty(a)){var o=+a;t[o]=Object(p.a)(Object(p.a)({},e[o]),{withHighlight:!1,withError:!r&&n.includes(o)})}return t}}(r,a);o&&e(ve(o));var i=J(r);0!==a.length||i||e(Ee(se.Win))}},xe=function(e){return function(n,t){var r=t(),a=F(r),o=Q(r),l=$(r),c=o[e.x*a.gameType+e.y];if(function(e){var n=e.cellMode,t=e.selectedCell,r=E(h.DisableAutoNotesRemoval);return n===i.Pencil&&t.mode===i.Pencil&&t.value&&!r}({cellMode:l,selectedCell:c})){var s=ee(a.gameType,a.ratio,o,c,e);s&&n(ve(s))}}};!function(e){e[e.New=0]="New",e[e.Playing=1]="Playing",e[e.Win=2]="Win",e[e.GameOver=3]="GameOver"}(se||(se={}));var ke,je={cellMode:i.Pencil,cellProps:{},gameState:se.New},_e={hidden:!0},Ce={isOpen:!1},Me=Object(m.c)({app:function(e,n){switch(void 0===e&&(e=R),n.type){case"@app/SET_PAGE":return Object(p.a)(Object(p.a)({},e),{page:n.payload});case"@app/SET_CURRENT_GAME":return Object(p.a)(Object(p.a)({},e),{currentGame:n.payload});case"@app/SET_LOBBY_HAS_ERROR":return Object(p.a)(Object(p.a)({},e),{lobbyHasError:n.payload});case"@app/SET_LOBBY_IS_LOADING":return Object(p.a)(Object(p.a)({},e),{lobbyIsLoading:n.payload});case"@app/SET_LOBBY_MENU_SECTION":return Object(p.a)(Object(p.a)({},e),{lobbyMenuSection:n.payload});default:return e}},game:function(e,n){var t;void 0===e&&(e=je);var r=e.cellMode,a=e.cellProps;switch(n.type){case"@game/TOGGLE_CELL_MODE":var o=r===i.Pencil?i.Notes:i.Pencil;return Object(p.a)(Object(p.a)({},e),{cellMode:o,cellProps:q(a,o)});case"@game/HIGHLIGHT_CELLS":return E(h.DisableHighlighting)?e:Object(p.a)(Object(p.a)({},e),{cellProps:V(a,n.payload)});case"@game/SET_CELL_VALUE":var l=n.payload,c=l.pos,s=l.value,u=e.cellProps[c];return Object(p.a)(Object(p.a)({},e),{cellProps:Object(p.a)(Object(p.a)({},e.cellProps),(t={},t[c]=Object(p.a)(Object(p.a)({},u),{value:s,mode:e.cellMode}),t))});case"@game/SET_GAME_STATE":return Object(p.a)(Object(p.a)({},e),{gameState:n.payload});case"@game/SET_CELL_PROPS":return Object(p.a)(Object(p.a)({},e),{cellProps:n.payload});case"@game/RESET_GAME_TOOLS":return Object(p.a)(Object(p.a)({},e),{cellMode:i.Pencil});case"@app/SET_CURRENT_GAME":return je;default:return e}},popup:function(e,n){switch(void 0===e&&(e=_e),n.type){case"@popup/SHOW_POPUP":return Object(p.a)(Object(p.a)({},n.payload),{hidden:!1});case"@popup/HIDE_POPUP":case"@game/RESET_GAME_TOOLS":return Object(p.a)(Object(p.a)({},e),{hidden:!0});case"@app/SET_CURRENT_GAME":return _e;default:return e}},sideMenu:function(e,n){switch(void 0===e&&(e=Ce),n.type){case"@sideMenu/TOGGLE_SIDE_MENU":return Object(p.a)(Object(p.a)({},e),{isOpen:!e.isOpen});case"@game/RESET_GAME_TOOLS":return Object(p.a)(Object(p.a)({},e),{isOpen:!1});case"@app/SET_CURRENT_GAME":return Ce;default:return e}}}),Se=Object(m.d)(Me,Object(m.a)(d.a));t(62),t(64);!function(e){e.Stats="Stats",e.Settings="Settings",e.Rules="Rules",e.About="About",e.Contacts="Contacts"}(ke||(ke={}));var Te,Ne=[ke.Stats,ke.Settings,ke.Rules,ke.About],Pe=function(){var e=Object(u.b)(),n=Object(u.c)(Y),t=Object(u.c)(K),o=Object(u.c)(W),i=Object(l.useCallback)((function(n){e(function(e){return function(n){return Object(p.b)(void 0,void 0,void 0,(function(){var t,a,o;return Object(p.d)(this,(function(i){switch(i.label){case 0:n(G(!0)),t=new b(e),t.shuffle,a=Object(p.e)(t,["shuffle"]),i.label=1;case 1:return i.trys.push([1,3,,4]),[4,T(a,"initialState")];case 2:if(o=i.sent().data,console.log(o),M(o))throw o;return n(P(t)),n(G(!1)),n(N(r.Game)),[3,4];case 3:return i.sent(),n(G(!1)),n(z(!0)),[3,4];case 4:return[2]}}))}))}}(n))}),[]),s=[{value:"Resume",disabled:!o,onClick:o?function(){return e(N(r.Game))}:function(){}},{value:"Easy",onClick:function(){return i({difficulty:a.Easy})}},{value:"Medium",onClick:function(){return i({difficulty:a.Medium})}},{value:"Hard",onClick:function(){return i({difficulty:a.Hard})}}],m=Ne.map((function(n){return{value:n,onClick:function(){return e(L(n))}}}));return c.a.createElement(c.a.Fragment,null,c.a.createElement("h1",{className:"menu-logo"},"Sudoku"),c.a.createElement("div",{className:"column-container"},t&&c.a.createElement("h3",null,"An error has occurred :(",c.a.createElement("br",null),"Please refresh the page!"),n&&!t&&c.a.createElement("div",{className:"loading"},ge),!n&&!t&&c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"column"},ae(s)),c.a.createElement("div",{className:"column"},ae(m)))),c.a.createElement("span",null,c.a.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan")))};t(66);!function(e){e[e.Right=0]="Right",e[e.Left=1]="Left"}(Te||(Te={}));var Ge,ze=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(p.c)(n,e),n.prototype.render=function(){var e=["arrow",this.props.arrow===Te.Left?"left":null].join(" ");return l.createElement("div",{className:"section"},l.createElement("div",{className:"cross",onClick:this.props.crossOnClick},de),l.createElement("div",{className:"header"},l.createElement("h2",null,this.props.title)),l.createElement("div",{className:"scrollable"},this.props.content),this.props.withFooter&&l.createElement("div",{className:"footer"},l.createElement("div",{className:e,onClick:this.props.arrowOnClick},pe)))},n}(l.PureComponent),Le=(t(68),function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={isChecked:!!E(n.props.storageKey)},n.onChange=function(){var e=!n.state.isChecked;O(n.props.storageKey,e),n.setState({isChecked:e})},n}return Object(p.c)(n,e),n.prototype.render=function(){var e=this.state.isChecked?"checked":"";return l.createElement("label",{className:"checkbox-label "+e},l.createElement("input",{className:"checkbox",type:"checkbox",checked:this.state.isChecked,onChange:this.onChange}),l.createElement("span",null,this.props.text))},n}(l.PureComponent)),Re=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.getContent=function(){var e={text:"Disable in-game error",storageKey:h.DisableInGameError},n={text:"Disable cell highlighting",storageKey:h.DisableHighlighting},t={text:"Disable automatic removal of notes values",storageKey:h.DisableAutoNotesRemoval};return l.createElement(l.Fragment,null,l.createElement(Le,Object(p.a)({},e)),l.createElement(Le,Object(p.a)({},n)),l.createElement(Le,Object(p.a)({},t)))},n}return Object(p.c)(n,e),n.prototype.render=function(){return l.createElement(ze,{title:ke.Settings,content:this.getContent(),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Ie=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(p.c)(n,e),n.prototype.render=function(){return l.createElement(ze,{title:ke.Rules,content:l.createElement(l.Fragment,null,l.createElement("p",null,"The classic Sudoku game involves a table of 81 squares. The table is divided into nine 3x3 grids, each containing nine squares."),l.createElement("p",null,"To win the game, each of the nine grids has to contain all the numbers 1-9 within its cells. Each number can only appear once in a row, column or grid.")),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),De=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(p.c)(n,e),n.prototype.render=function(){return l.createElement(ze,{title:ke.Contacts,withFooter:!0,arrow:Te.Left,content:l.createElement(l.Fragment,null,l.createElement("p",null,l.createElement("strong",null,"Developer:")," Sara Nordmyr da Cunha",l.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan")),l.createElement("p",null,l.createElement("strong",null,"Bug reporting: "),l.createElement("a",{href:"https://github.com/kobawan/sudoku/issues",target:"_blank",rel:"noopener noreferrer"},"https://github.com/kobawan/sudoku/issues"))),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Ae=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(p.c)(n,e),n.prototype.render=function(){return l.createElement(ze,{title:ke.Stats,content:l.createElement("p",null,"TBD"),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),He=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(p.c)(n,e),n.prototype.render=function(){return l.createElement(ze,{title:ke.About,withFooter:!0,content:l.createElement(l.Fragment,null,l.createElement("p",null,"Hi! My name is Sara, or Kobawan in the interwebz. I've always been a fan of puzzles, so when I started programming, I came up with the idea to combine my two joys of puzzles and programming, to create this website."),l.createElement("p",null,"It's been a fun project to create. Sometimes challenging and time-consuming, but in the end, a very good opportunity to learn programming."),l.createElement("p",null,"Along with creating more projects than I can handle, I also knit, play with my dogs, and binge watch netflix."),l.createElement("p",null,"I hope you enjoy!")),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Ue=((Ge={})[ke.Stats]=Ae,Ge[ke.Settings]=Re,Ge[ke.Rules]=Ie,Ge[ke.About]=He,Ge[ke.Contacts]=De,Ge),Be=function(e){var n=e.hidden,t=Object(u.b)(),r=Object(u.c)(Y),a=Object(u.c)(K),o=Object(u.c)(X),i=Object(l.useCallback)((function(){if(!o)return null;var e=Ue[o];return c.a.createElement(e,{crossOnClick:function(){return t(L(void 0))},arrowOnClick:function(){o!==ke.About?o!==ke.Contacts||t(L(ke.About)):t(L(ke.Contacts))}})}),[o]);return c.a.createElement("div",{className:te()("lobby",n&&"hidden")},c.a.createElement("div",{className:"lobby-wrapper"},c.a.createElement(Pe,null),!r&&!a&&i()))},Fe=(t(70),t(72),function(e){return e.sideMenu.isOpen}),We=function(e){var n=e.returnToLobby,t=Object(u.b)(),r=Object(u.c)(Fe),a=Object(l.useCallback)((function(){return t({type:"@sideMenu/TOGGLE_SIDE_MENU"})}),[]),o=[{value:"Return",onClick:n},{value:"Reset",onClick:function(){return function(e){e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),e(be({text:ie.Reset,buttons:[{size:v.Small,value:"Yes",onClick:function(){return e(Ee(se.New))}},{size:v.Small,value:"No",onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(t)}},{value:"Check",onClick:function(){return t(Oe())}},{value:"Solve",onClick:function(){return function(e){e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),e(be({text:ie.Solve,buttons:[{size:v.Small,value:"Yes",onClick:function(){return e(Ee(se.GameOver))}},{size:v.Small,value:"No",onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(t)}}];return c.a.createElement("div",{className:te()("side-menu-container",r?"opened":"hidden")},c.a.createElement("div",{className:"side-menu-overlay",onClick:a}),c.a.createElement("div",{className:"side-menu"},c.a.createElement("div",{className:"menu"},c.a.createElement("svg",{className:"side-menu-logo"},c.a.createElement("text",null,"Sudoku")),c.a.createElement("div",{className:"buttons-wrapper"},ae(o)),c.a.createElement("span",null,c.a.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan"))),c.a.createElement("div",{className:"side-menu-button",onClick:a},he)))},Ye=(t(74),t(76),function(e,n){var t=n.parentElement,r=t.parentElement.rowIndex,a=t.cellIndex;return{x:r,y:a,grid:Math.floor(r/e)*e+Math.floor(a/e)}}),Ke=function(e){var n=e.game,t=e.cell,r=Ye(n.ratio,t),a=r.x,o=r.y;return a*n.gameType+o},Xe=function(e){var n=e.mode,t=e.value,r=e.withError,a=e.withHighlight,o=Object(u.b)(),c=Object(u.c)($),s=Object(u.c)(Q),m=Object(u.c)(F),d=Object(u.c)(Z),p=function(e){var n=e.target,t=Ke({game:m,cell:n}),r=s[t];!function(e){var n=e.cell,t=e.props,r=e.cellMode;(r===i.Notes&&t.mode===i.Pencil||r===i.Pencil&&t.mode!==i.ReadOnly)&&n.select()}({cell:n,props:r,cellMode:c}),o({type:"@game/HIGHLIGHT_CELLS",payload:r})};return l.createElement("textarea",{readOnly:n===i.ReadOnly||d,maxLength:n!==i.Notes?1:9,rows:1,cols:1,value:t||"",className:te()(n,d&&"disabled",r&&n!==i.Notes&&"error",a&&n!==i.Notes&&"highlight"),onKeyUp:d?void 0:function(e){var n=e.target,t=Ye(m.ratio,n);o(xe(Ye(m.ratio,n))),o(we()),function(e,n){var t=document.querySelector("#SudokuTable"),r=n.x,a=n.y;switch(e){case 37:0===a?a=8:a--;break;case 38:0===r?r=8:r--;break;case 39:8===a?a=0:a++;break;case 40:8===r?r=0:r++}t.rows[r].cells[a].children[0].focus()}(e.keyCode,t)},onFocus:d?void 0:p,onClick:d?void 0:p,onChange:d||n===i.ReadOnly?void 0:function(e){var n=e.target,t=Ke({game:m,cell:n});o(function(e,n){return function(t,r){if(""!==n)if(n.match(/^[1-9]+$/g)){var a=void 0;a=$(r())===i.Pencil?+n||0:+g(n.split("").map((function(e){return+e})).sort()).join("")||0,t(ye({pos:e,value:a}))}else;else t(ye({pos:e,value:0}))}}(t,n.value))}})},qe=function(e){var n=e.gameType,t=e.cellState;return l.createElement("table",{className:"sudoku",id:"SudokuTable"},l.createElement("tbody",null,function(){for(var e=[],r=0;r<n;r++){for(var a=[],o=0;o<n;o++){var i=t[r*n+o];a.push(l.createElement("td",{key:o},l.createElement(Xe,Object(p.a)({},i))))}e.push(l.createElement("tr",{key:r},a))}return l.createElement(l.Fragment,null,e)}()))},Je=(t(78),function(){var e=Object(u.b)(),n=Object(u.c)($);return l.createElement("div",{className:"game-buttons",onClick:function(){return e({type:"@game/TOGGLE_CELL_MODE"})}},l.createElement("span",null,"Pencil"),l.createElement("span",null,"Notes"),l.createElement("div",{className:"slider "+n+"-slider"}))}),Ve=function(e){var n=e.hidden,t=e.game,r=e.returnToLobby,a=Object(u.b)(),o=Object(u.c)(Q);return Object(l.useEffect)((function(){a(Ee(se.New))}),[]),Object(l.useEffect)((function(){a({type:"@game/RESET_GAME_TOOLS"})}),[n]),c.a.createElement("div",{className:te()("game",n&&"hidden")},c.a.createElement(We,{returnToLobby:r}),c.a.createElement("div",{className:"game-wrapper"},c.a.createElement(qe,{cellState:o,gameType:t.gameType}),c.a.createElement(Je,null)))};t(80);s.render(l.createElement(u.a,{store:Se},l.createElement((function(){var e=Object(u.b)(),n=Object(u.c)(B),t=Object(u.c)(F),a=Object(u.c)(Y),o=n===r.Menu,i=Object(l.useCallback)((function(){e(N(r.Menu))}),[]);return Object(l.useEffect)((function(){var n=E(h.UserId);e(n?function(e){return function(n){return Object(p.b)(void 0,void 0,void 0,(function(){var t;return Object(p.d)(this,(function(r){switch(r.label){case 0:n(G(!0)),r.label=1;case 1:return r.trys.push([1,3,,4]),[4,S(e)];case 2:if(t=r.sent().data,M(t))throw t;return n(G(!1)),n(P(t.game.config)),[3,4];case 3:return r.sent(),n(G(!1)),n(z(!0)),[3,4];case 4:return[2]}}))}))}}(n):function(e){return Object(p.b)(void 0,void 0,void 0,(function(){var n;return Object(p.d)(this,(function(t){switch(t.label){case 0:e(G(!0)),t.label=1;case 1:return t.trys.push([1,3,,4]),[4,C("https://damp-refuge-15092.herokuapp.com/registerUser")];case 2:if(n=t.sent().data,M(n))throw n;return e(G(!1)),O(h.UserId,n),[3,4];case 3:return t.sent(),e(G(!1)),e(z(!0)),[3,4];case 4:return[2]}}))}))})}),[]),c.a.createElement(c.a.Fragment,null,c.a.createElement(Be,{hidden:!o}),!a&&t&&c.a.createElement(Ve,{hidden:o,game:t,returnToLobby:i}),c.a.createElement(me,null))}),null)),document.getElementById("root"))},30:function(e,n,t){t(113),t(85),e.exports=t(86)},56:function(e,n,t){var r=t(4),a=t(57);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},57:function(e,n,t){(n=t(5)(!1)).push([e.i,".message-popup {\n  position: fixed;\n  right: 0;\n  top: 1.875em;\n  padding: 1.25em;\n  width: 16.25em;\n  background-color: #ecebeb;\n  box-shadow: 0 0 1.25em rgba(0, 0, 0, 0.45);\n  text-align: center;\n  transition: transform 0.3s ease-in-out;\n  font-size: 1rem;\n  transform: translateX(0);\n}\n.message-popup.hidden {\n  transform: translateX(100%);\n  box-shadow: none;\n}\n.message-popup .message {\n  font-size: 1.25em;\n  color: #000000;\n  cursor: default;\n  padding-bottom: 0.5em;\n}\n.message-popup .buttons {\n  display: flex;\n  justify-content: space-around;\n  margin: 0 5em;\n}\n.message-popup .buttons .icon {\n  fill: #ffffff;\n  cursor: pointer;\n  pointer-events: none;\n  width: 1em;\n  height: 1em;\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .message-popup {\n    font-size: calc(0.5rem + 1.2vw);\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .message-popup {\n    font-size: calc(0.5rem + 1.1vh);\n  }\n}\n",""]),e.exports=n},58:function(e,n,t){var r=t(4),a=t(59);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},59:function(e,n,t){(n=t(5)(!1)).push([e.i,".menu-button {\n  background-color: #000000;\n  border: 0;\n  color: #ffffff;\n  border-radius: 0 0.6em;\n  min-width: 5.5em;\n  min-height: 1.9em;\n  padding: 0.35em;\n  margin: 0.5em 0;\n  transition: 0.5s;\n}\n@media (orientation: landscape) and (max-height: 400px) {\n  .menu-button {\n    margin: 0.3em 0;\n  }\n}\n.menu-button.reversed {\n  border-radius: 0.6em 0;\n}\n.menu-button.disabled {\n  pointer-events: none;\n  background-color: #e2e1e1;\n  color: #000000;\n}\n.menu-button:hover {\n  background-color: #d45287;\n}\n.game-button {\n  background-color: #000000;\n  border: 0;\n  color: #ffffff;\n  border-radius: 2.625em;\n  height: 4.1875em;\n  width: 4.125em;\n  padding: 0;\n  transition: 0.5s;\n  display: flex;\n  justify-content: center;\n}\n.game-button.small {\n  height: 2.5em;\n  width: 2.5em;\n  font-size: 1em;\n}\n.game-button:hover,\n.game-button.selected {\n  background-color: #d45287;\n}\n",""]),e.exports=n},60:function(e,n,t){var r=t(4),a=t(61);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},61:function(e,n,t){(n=t(5)(!1)).push([e.i,"@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n.icon {\n  display: block;\n  transition: transform 0.3s ease;\n  width: 100%;\n  height: 100%;\n}\n.icon.spinner {\n  animation: rotating 2s ease-out infinite;\n}\n",""]),e.exports=n},62:function(e,n,t){var r=t(4),a=t(63);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},63:function(e,n,t){(n=t(5)(!1)).push([e.i,".lobby {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: visible;\n  opacity: 1;\n}\n.lobby.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n.lobby .lobby-wrapper {\n  height: 25rem;\n  max-height: 90%;\n  width: 100%;\n  max-width: 22.5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: space-between;\n}\n",""]),e.exports=n},64:function(e,n,t){var r=t(4),a=t(65);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},65:function(e,n,t){(n=t(5)(!1)).push([e.i,'.menu-logo {\n  font: bold 5.625em "dekiru", corbel, sans-serif;\n  margin: 0;\n  height: 1em;\n}\n.loading {\n  width: 2em;\n}\n.column-container {\n  display: flex;\n  flex-flow: row nowrap;\n}\n.column-container .column {\n  padding: 0 0.625rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n',""]),e.exports=n},66:function(e,n,t){var r=t(4),a=t(67);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},67:function(e,n,t){(n=t(5)(!1)).push([e.i,".section {\n  box-sizing: border-box;\n  box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.45);\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  border-radius: 1.875rem 0;\n  padding: 1.25rem;\n  background-color: #ecebeb;\n  position: fixed;\n  max-width: 90%;\n  max-height: 90%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 31.25rem;\n  height: 25rem;\n  font-size: 1rem;\n  user-select: none;\n}\n.section .cross {\n  position: absolute;\n  right: 1.25em;\n  width: 1em;\n  height: 1em;\n  cursor: pointer;\n  transition: 0.5s;\n}\n.section .cross:hover {\n  fill: #d45287;\n}\n.section .header h2 {\n  color: #d45287;\n  font-size: 1.25em;\n  text-align: center;\n  margin: 0;\n  padding-bottom: 1em;\n}\n.section .scrollable {\n  flex-grow: 2;\n  overflow-y: scroll;\n}\n.section .scrollable p {\n  color: #000000;\n  margin: 0;\n  padding: 0.3125em 0;\n}\n.section .footer {\n  height: 1.4375em;\n  padding-top: 1.25em;\n}\n.section .footer .arrow {\n  margin: 0 auto;\n  height: 1.25em;\n  width: 1.25em;\n  cursor: pointer;\n  transition: 0.5s;\n}\n.section .footer .arrow.left {\n  transform: rotate(180deg);\n}\n.section .footer .arrow:hover {\n  fill: #d45287;\n}\n.section a {\n  color: #d45287;\n  text-decoration: underline;\n}\n",""]),e.exports=n},68:function(e,n,t){var r=t(4),a=t(69);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},69:function(e,n,t){(n=t(5)(!1)).push([e.i,'.checkbox-label {\n  display: flex;\n  align-items: center;\n  height: calc(1.3em + 2px);\n  margin-bottom: 0.5em;\n}\n.checkbox-label input[type="checkbox"] {\n  opacity: 0;\n  position: fixed;\n  margin: 0;\n  padding: 0;\n}\n.checkbox-label span {\n  position: relative;\n  padding-left: 2em;\n  height: 100%;\n  line-height: 1.5;\n}\n.checked.checkbox-label span::after {\n  content: "";\n}\n.checkbox-label span::before,\n.checkbox-label span::after {\n  position: absolute;\n  display: inline-block;\n}\n.checkbox-label span::before {\n  content: "";\n  height: 1.3em;\n  width: 1.3em;\n  border: 1px solid;\n  left: 0;\n  border-radius: 50em;\n}\n.checkbox-label span::before:hover {\n  color: red;\n}\n.checkbox-label span::after {\n  content: none;\n  height: 0.375em;\n  width: 0.5625em;\n  border-left: 2px solid;\n  border-bottom: 2px solid;\n  transform: rotate(-45deg);\n  left: calc((1.3em - 0.5625em) / 2);\n  top: calc(1.3em / 4);\n}\n',""]),e.exports=n},70:function(e,n,t){var r=t(4),a=t(71);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},71:function(e,n,t){(n=t(5)(!1)).push([e.i,".game {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: visible;\n  opacity: 1;\n}\n.game.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n.game-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 1rem;\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .game-wrapper {\n    font-size: calc(0.5rem + 1.2vw);\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .game-wrapper {\n    font-size: calc(0.5rem + 1.1vh);\n  }\n}\n",""]),e.exports=n},72:function(e,n,t){var r=t(4),a=t(73);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},73:function(e,n,t){(n=t(5)(!1)).push([e.i,'.side-menu-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n  pointer-events: none;\n}\n.side-menu {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: stretch;\n  justify-content: flex-start;\n  transition: 0.2s ease-in-out;\n  pointer-events: all;\n}\n.hidden .side-menu {\n  transform: translateX(-100%);\n}\n.side-menu .menu {\n  background-color: rgba(236, 235, 235, 0.95);\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 1.25rem;\n  box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.45);\n}\n.side-menu .menu .side-menu-logo {\n  width: 16.25em;\n  height: 6.125em;\n  font-size: 1rem;\n}\n@media (orientation: landscape) and (max-height: 335px) {\n  .side-menu .menu .side-menu-logo {\n    font-size: 0.8rem;\n  }\n}\n@media (orientation: portrait) and (max-width: 374px) {\n  .side-menu .menu .side-menu-logo {\n    font-size: calc(0.26rem + 2.5vw);\n  }\n}\n.side-menu .menu .side-menu-logo text {\n  font: bold 5em "dekiru", corbel, sans-serif;\n  dominant-baseline: text-before-edge;\n}\n.side-menu .menu .buttons-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 1.875rem 0;\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .side-menu .menu {\n    justify-content: space-between;\n  }\n  .side-menu .menu .buttons-wrapper {\n    margin: 0;\n  }\n}\n.side-menu .side-menu-button {\n  position: absolute;\n  left: 110%;\n  top: 1.875em;\n  height: 2rem;\n  fill: black;\n  font-size: 1rem;\n}\n.side-menu .side-menu-button svg {\n  width: 2em;\n  height: 2em;\n}\n@media (hover: hover) {\n  .side-menu .side-menu-button :hover {\n    cursor: pointer;\n    fill: #d45287;\n  }\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .side-menu .side-menu-button {\n    font-size: 0.8rem;\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .side-menu .side-menu-button {\n    font-size: 0.8rem;\n  }\n}\n.side-menu-overlay {\n  width: 100%;\n  height: 100%;\n  pointer-events: all;\n}\n.opened .side-menu-overlay {\n  background-color: rgba(236, 235, 235, 0.5);\n}\n.hidden .side-menu-overlay {\n  display: none;\n}\n',""]),e.exports=n},74:function(e,n,t){var r=t(4),a=t(75);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},75:function(e,n,t){(n=t(5)(!1)).push([e.i,".sudoku {\n  border: 2px solid black;\n  border-collapse: collapse;\n}\n.sudoku tr:nth-of-type(3n) td {\n  border-bottom: 2px solid black;\n}\n.sudoku tr td {\n  border: 1px solid black;\n  padding: 0;\n  width: 2.1875em;\n  height: 2.1875em;\n  overflow: hidden;\n}\n.sudoku tr td:nth-of-type(3n) {\n  border-right: 2px solid black;\n}\n",""]),e.exports=n},76:function(e,n,t){var r=t(4),a=t(77);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},77:function(e,n,t){(n=t(5)(!1)).push([e.i,"textarea {\n  text-align: center;\n  padding: 0;\n  resize: none;\n  vertical-align: middle;\n  box-sizing: border-box;\n  border: none;\n  width: 100%;\n  height: 100%;\n}\ntextarea:focus {\n  outline: 0;\n}\n.pencil {\n  font-size: 1.4em;\n  letter-spacing: 0;\n  line-height: 1.5625em;\n  background-color: #ffffff;\n}\n.readOnly {\n  font-size: 1.4em;\n  letter-spacing: 0;\n  line-height: 1.5625em;\n  background-color: #e2e1e1;\n  cursor: default;\n}\n.notes {\n  font-size: 0.7em;\n  letter-spacing: 0.3em;\n  line-height: 1;\n  background-color: #ffffff;\n}\n.highlight {\n  background-color: #f8c9dc;\n}\n.error {\n  line-height: calc(1.5625em - (4px * 2));\n  border: 4px solid #c40202;\n}\n.disabled {\n  cursor: default;\n}\n",""]),e.exports=n},78:function(e,n,t){var r=t(4),a=t(79);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},79:function(e,n,t){(n=t(5)(!1)).push([e.i,".game-buttons {\n  display: flex;\n  margin-top: 1.25em;\n  border: 1px solid;\n  border-radius: 62.5em;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n}\n.game-buttons span {\n  height: 2em;\n  width: 3.75em;\n  color: #000000;\n  z-index: 5;\n  vertical-align: middle;\n  line-height: 2em;\n  text-align: center;\n  border-radius: 50em;\n  font-size: 1.25em;\n}\n.game-buttons .slider {\n  position: absolute;\n  height: 2.5em;\n  width: 4.6875em;\n  background-color: rgba(212, 82, 135, 0.6);\n  border-radius: 2.625em;\n  transition: 0.3s;\n}\n.game-buttons .slider.notes-slider {\n  transform: translateX(100%);\n}\n@media (hover: hover) {\n  :hover.game-buttons .slider {\n    background-color: rgba(212, 82, 135, 0.4);\n    transform: scaleX(1.1);\n    transform-origin: left;\n  }\n  :hover.game-buttons .slider.notes-slider {\n    transform: scaleX(1.1) translateX(90%);\n    transform-origin: right;\n  }\n}\n",""]),e.exports=n},80:function(e,n,t){var r=t(4),a=t(81);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},81:function(e,n,t){var r=t(5),a=t(82),o=t(83),i=t(84);n=r(!1);var l=a(o),c=a(i);n.push([e.i,'@font-face {\n  font-family: "dekiru";\n  src: url('+l+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\nhtml {\n  font: 16px "dekiru", corbel, sans-serif;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  background: #ecebeb no-repeat center / cover url('+c+');\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\n#root {\n  background-color: rgba(236, 235, 235, 0.4);\n  width: 100%;\n  height: 100%;\n}\nbutton {\n  font: 1.25rem "dekiru", corbel, sans-serif;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n}\n@media (orientation: landscape) and (max-height: 335px) {\n  button {\n    font-size: 1.1rem;\n  }\n}\nbutton:focus {\n  outline: none;\n}\na {\n  color: #000000;\n  text-decoration: none;\n}\n@media (hover: hover) {\n  a:hover {\n    color: #d45287;\n    text-decoration: underline;\n  }\n}\nsvg text {\n  user-select: none;\n}\n',""]),e.exports=n},83:function(e,n,t){"use strict";t.r(n),n.default=t.p+"Dekiru.ttf"},84:function(e,n,t){"use strict";t.r(n),n.default=t.p+"images/background.jpg"},85:function(e,n){e.exports='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <meta charset="UTF-8">\n  <title>Sudoku</title>\n</head>\n<body>\n  <div id="root"></div>\n</body>\n</html>\n'}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,