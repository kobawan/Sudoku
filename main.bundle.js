!function(e){function n(n){for(var r,i,l=n[0],c=n[1],s=n[2],m=0,p=[];m<l.length;m++)i=l[m],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&p.push(a[i][0]),a[i]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(u&&u(n);p.length;)p.shift()();return o.push.apply(o,s||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],r=!0,l=1;l<t.length;l++){var c=t[l];0!==a[c]&&(r=!1)}r&&(o.splice(n--,1),e=i(i.s=t[0]))}return e}var r={},a={0:0},o=[];function i(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=e,i.c=r,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)i.d(t,r,function(n){return e[n]}.bind(null,r));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="";var l=window.webpackJsonp=window.webpackJsonp||[],c=l.push.bind(l);l.push=n,l=l.slice();for(var s=0;s<l.length;s++)n(l[s]);var u=c;o.push([30,1]),t()}({111:function(e,n,t){var r={"./log":112};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=111},113:function(e,n,t){"use strict";t.r(n);var r,a,o,i,l=t(0),c=t.n(l),s=t(11),u=t(2),m=t(9),p=t(29),d=t(1);!function(e){e[e.Game=0]="Game",e[e.Menu=1]="Menu"}(r||(r={})),function(e){e[e.Easy=4]="Easy",e[e.Medium=5]="Medium",e[e.Hard=6]="Hard"}(a||(a={})),function(e){e[e.Default=9]="Default"}(o||(o={})),function(e){e.Pencil="pencil",e.Notes="notes",e.ReadOnly="readOnly"}(i||(i={}));var f,h,E=function(e){if(1!==e.length)for(var n=0;n<e.length;n++)for(var t=1;t<e.length-n;t++)e[n]===e[n+t]&&e.splice(n+t,1);return e},g=function(e){var n=this;this.matrix=[],this.mask=[],this.createTemplate=function(){for(var e,t=[],r=0;r<n.gameType;r++)for(var a=0;a<n.gameType;a++)e=(r*n.ratio+Math.floor(r/n.ratio)+a)%n.gameType+1,t[r*n.gameType+a]=e;return t},this.shufflePairs=function(e){for(var t,r,a=e.slice(),o=0;o<n.shuffle;o++){t=Math.ceil(Math.random()*n.gameType);do{r=Math.ceil(Math.random()*n.gameType)}while(t===r);for(var i=0;i<a.length;i++)a[i]===t?a[i]=r:a[i]===r&&(a[i]=t)}return a},this.shuffleColumns=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s*n.gameType+(t*n.ratio+c%n.ratio),o=s*n.gameType+(r*n.ratio+c%n.ratio),i=l[a],l[a]=l[o],l[o]=i}return l},this.shuffleColumnsInGrid=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s*n.gameType+(c%n.ratio*n.ratio+t),o=s*n.gameType+(c%n.ratio*n.ratio+r),i=l[a],l[a]=l[o],l[o]=i}return l},this.shuffleRowsInGrid=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s+n.gameType*(c%n.ratio*n.ratio+t),o=s+n.gameType*(c%n.ratio*n.ratio+r),i=l[a],l[a]=l[o],l[o]=i}return l},this.maskGame=function(e){for(var t=e.slice(),r=0;r<n.gameType;r++){for(var a=[],o=void 0,i=0;i<n.difficulty;i++){do{o=Math.floor(Math.random()*n.gameType)}while(a.includes(o));a.push(o)}for(var l=0;l<n.gameType;l++)a.includes(l)&&(t[l+(n.gameType-n.ratio)*Math.floor(l/n.ratio)+r*n.ratio+Math.floor(r/n.ratio)*n.gameType*(n.ratio-1)]=0)}return t},this.generate=function(){var e=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return e.reduce((function(e,n){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return e(n.apply(void 0,t))}}))}(n.shuffleRowsInGrid,n.shuffleColumnsInGrid,n.shuffleColumns,n.shufflePairs)(n.createTemplate());return{matrix:e,mask:n.maskGame(e)}},this.gameType=e.type||o.Default,this.difficulty=e.difficulty,this.ratio=Math.sqrt(this.gameType),this.shuffle=e.shuffle||60;var t=this.generate();this.matrix=t.matrix,this.mask=t.mask};!function(e){e.DisableInGameError="DisableInGameError",e.DisableHighlighting="DisableHighlighting",e.DisableAutoNotesRemoval="DisableAutoNotesRemoval",e.UserId="UserId"}(h||(h={}));var b,O=((f={})[h.DisableInGameError]=!1,f[h.DisableHighlighting]=!1,f[h.DisableAutoNotesRemoval]=!1,f[h.UserId]="",f),v=function(e){try{var n=window.localStorage.getItem(e);if(null===n)throw Error;return JSON.parse(n)}catch(n){return O[e]}},T=function(e,n){try{window.localStorage.setItem(e,JSON.stringify(n))}catch(n){console.error("Local storage: Was not able to set item in key "+e)}},y=t(10),_=t.n(y),N="https://damp-refuge-15092.herokuapp.com",R=N+"/user",w={headers:{"Cache-Control":"no-store, no-cache"},timeout:15e3},S=function(e){return _.a.get(e,w)},C=function(e,n){return void 0===n&&(n={}),_.a.post(e,n,w)},I=function(e){try{return void 0!==e.status}catch(e){return!1}},k=function(e){return S(R+"/"+e)},x=function(e,n){return C("https://damp-refuge-15092.herokuapp.com/saveGame",{config:e,state:n,id:v(h.UserId)})};!function(e){e[e.CONTINUE=100]="CONTINUE",e[e.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",e[e.PROCESSING=102]="PROCESSING",e[e.OK=200]="OK",e[e.CREATED=201]="CREATED",e[e.ACCEPTED=202]="ACCEPTED",e[e.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",e[e.NO_CONTENT=204]="NO_CONTENT",e[e.RESET_CONTENT=205]="RESET_CONTENT",e[e.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",e[e.MULTI_STATUS=207]="MULTI_STATUS",e[e.ALREADY_REPORTED=208]="ALREADY_REPORTED",e[e.IM_USED=226]="IM_USED",e[e.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",e[e.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",e[e.FOUND=302]="FOUND",e[e.SEE_OTHER=303]="SEE_OTHER",e[e.NOT_MODIFIED=304]="NOT_MODIFIED",e[e.USE_PROXY=305]="USE_PROXY",e[e.SWITCH_PROXY=306]="SWITCH_PROXY",e[e.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",e[e.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",e[e.BAD_REQUEST=400]="BAD_REQUEST",e[e.UNAUTHORIZED=401]="UNAUTHORIZED",e[e.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",e[e.FORBIDDEN=403]="FORBIDDEN",e[e.NOT_FOUND=404]="NOT_FOUND",e[e.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",e[e.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",e[e.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",e[e.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",e[e.CONFLICT=409]="CONFLICT",e[e.GONE=410]="GONE",e[e.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",e[e.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",e[e.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",e[e.URI_TOO_LONG=414]="URI_TOO_LONG",e[e.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",e[e.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",e[e.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",e[e.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",e[e.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",e[e.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",e[e.LOCKED=423]="LOCKED",e[e.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",e[e.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",e[e.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",e[e.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",e[e.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",e[e.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",e[e.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",e[e.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",e[e.BAD_GATEWAY=502]="BAD_GATEWAY",e[e.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",e[e.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",e[e.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",e[e.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",e[e.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",e[e.LOOP_DETECTED=508]="LOOP_DETECTED",e[e.NOT_EXTENDED=510]="NOT_EXTENDED",e[e.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"}(b||(b={}));var A,M=function(e){return{type:"@app/SET_PAGE",payload:e}},D=function(e){return{type:"@app/SET_CURRENT_GAME",payload:e}},P=function(e){return{type:"@app/SET_LOBBY_IS_LOADING",payload:e}},j=function(e){return{type:"@app/SET_LOBBY_HAS_ERROR",payload:e}},L=function(e){return{type:"@app/SET_LOBBY_MENU_SECTION",payload:e}},U=function(e){return{type:"@app/SET_ERROR",payload:{message:e.message||"Unknown error occured!",status:e.status||b.INTERNAL_SERVER_ERROR}}},G={page:r.Menu,currentGame:void 0,lobbyIsLoading:!0,lobbyHasError:!1,lobbyMenuSection:void 0,errors:[]},H=function(e,n){for(var t=[],r=0;r<e;r++){t.push([]);for(var a=0;a<e;a++)n({row:r,pos:r*e+a,arr:t})}return t},z=function(e,n){for(var t=[],r=0;r<e;r++){t.push([]);for(var a=0;a<e;a++)n({col:r,pos:r+e*a,arr:t})}return t},F=function(e,n,t){for(var r,a,o=[],i=0;i<n;i++)for(var l=0;l<n;l++){r=i*n+l,o.push([]);for(var c=0;c<n;c++){a=(c+i*n)*e;for(var s=0;s<n;s++)t({row:c,col:s,grid:r,pos:a+(s+l*n),arr:o})}}return o},Y=function(e,n,t){var r=H(n,(function(n){var t=n.arr,r=n.row,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)})),a=z(n,(function(n){var t=n.arr,r=n.col,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)})),o=F(n,t,(function(n){var t=n.arr,r=n.grid,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)}));return E(B(r,a,o,e))},B=function(e,n,t,r){for(var a=Object(d.f)(e,n,t),o=[],i=0;i<a.length;i++)for(var l=0;l<a[i].length;l++)for(var c=1;c<a[i].length-l;c++){var s=a[i][l],u=a[i][l+c];r[s].value===r[u].value&&(o.push(s),o.push(u))}return o},W=function(e){return e.app.page},Q=function(e){return e.app.currentGame},V=function(e){return!!e.app.currentGame},X=function(e){return e.app.lobbyIsLoading},K=function(e){return e.app.lobbyHasError},q=function(e){return e.app.lobbyMenuSection},J=function(e,n){var t={};for(var r in e)if(e.hasOwnProperty(r)){var a=e[r];t[r]=a.value?a:Object(d.a)(Object(d.a)({},a),{mode:n})}return t},Z=function(e){for(var n in e)if(e.hasOwnProperty(n)&&e[n].mode===i.Notes||!e[n].value)return!0;return!1},$=function(e,n){var t,r={};for(var a in e)if(e.hasOwnProperty(a)){var o=e[a].mode!==i.Notes&&n.value===e[a].value;r[a]=Object(d.a)(Object(d.a)({},e[a]),{withHighlight:(t=n,!!t.value&&t.mode!==i.Notes&&o)})}return r},ee=function(e){return e.game.cellMode},ne=function(e){return e.game.cellProps},te=function(e){return[pe.Win,pe.GameOver].includes(function(e){return e.game.gameState}(e))},re=function(e,n,t,r,a){var o=function(e,n,t,r){var a=H(e,(function(e){var n=e.arr,r=e.row,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)})),o=z(e,(function(e){var n=e.arr,r=e.col,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)})),l=F(e,n,(function(e){var n=e.arr,r=e.grid,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)}));return E(Object(d.f)(a[r.x],o[r.y],l[r.grid]))}(e,n,t,a);if(o.length){var l={};for(var c in t)if(t.hasOwnProperty(c)){var s=t[c],u=s.value;if(o.includes(+c))u=+(""+u).split("").filter((function(e){return""+r.value!==e})).join("")||0;l[c]=Object(d.a)(Object(d.a)({},s),{value:u})}return l}},ae=t(6),oe=t.n(ae),ie=(t(56),t(58),function(e){return l.createElement("button",{className:["menu-button",e.reversed?"reversed":null,e.disabled?"disabled":null].join(" "),onClick:e.onClick,key:e.index},e.value)}),le=function(e){return e.map((function(e,n){return l.createElement(ie,Object(d.a)({},e,{key:n}))}))};!function(e){e[e.Default=0]="Default",e[e.Small=1]="Small"}(A||(A={}));var ce,se,ue=function(e){var n=e.value,t=e.icon,r=e.onClick,a=e.size,o=void 0===a?A.Default:a,i=e.selected,c=void 0!==i&&i;return l.createElement("button",{className:["game-button",c?"selected":null,o===A.Small?"small":null].join(" "),onClick:r},n,t)},me=function(e){return e.popup};!function(e){e.Solve="Solve",e.Reset="Reset",e.Win="Win",e.Duplicates="Duplicates",e.Check="Check",e.NetworkError="NetworkError"}(se||(se={}));var pe,de=((ce={})[se.Solve]=l.createElement("span",null,"Are you sure you want to solve?"),ce[se.Reset]=l.createElement("span",null,"Are you sure you want to reset?"),ce[se.Win]=l.createElement(l.Fragment,null,l.createElement("span",null,"Correct!"),l.createElement("br",null),l.createElement("span",null,"You have won the game!")),ce[se.Duplicates]=l.createElement("span",null,"Some cell values are incorrect."),ce[se.Check]=l.createElement("span",null,"Correct so far!"),ce[se.NetworkError]=l.createElement("span",null,"Your network connection is down. Please check your network and try later."),ce),fe=function(){var e=Object(u.c)(me),n=e.text,t=e.hidden,r=e.buttons,a=t||!n||!r;return l.createElement("div",{className:oe()("message-popup",a&&"hidden")},l.createElement("div",{className:"message"},n&&de[n]),l.createElement("div",{className:"buttons"},r&&function(e){return e.map((function(e,n){return l.createElement(ue,Object(d.a)({},e,{key:n}))}))}(r)))},he=(t(60),l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"m29.082202,23.702671c0,0 0,0 0,0l-8.702823,-8.702823l8.702823,-8.702823c0,0 0,0 0,\n      0c0.093712,-0.093712 0.161606,-0.203681 0.204637,-0.319387c0.118575,-0.318431 0.050681,\n      -0.691368 -0.205594,-0.947643l-4.110915,-4.110915c-0.256275,-0.256275 -0.629212,\n      -0.324168 -0.947643,-0.204637c-0.116662,0.043031 -0.225675,0.110925 -0.320343,0.204637c0,\n      0 0,0 0,0l-8.702823,8.702823l-8.702823,-8.702823c0,0 0,0 0,0c-0.093712,-0.093712 -0.203681,\n      -0.161606 -0.319387,-0.204637c-0.318431,-0.118575 -0.691368,-0.050681 -0.947643,0.204637l-4.110915,\n      4.110915c-0.256275,0.256275 -0.324168,0.629212 -0.205594,0.947643c0.043031,0.116662 0.110925,\n      0.225675 0.204637,0.319387c0,0 0,0 0,0l8.702823,8.702823l-8.702823,8.702823c0,0 0,0 0,0c-0.093712,\n      0.093712 -0.161606,0.203681 -0.204637,0.319387c-0.118575,0.318431 -0.050681,0.691368 0.205594,\n      0.947643l4.110915,4.110915c0.256275,0.256275 0.629212,0.324168 0.947643,0.205594c0.116662,\n      -0.043031 0.225675,-0.110925 0.319387,-0.204637c0,0 0,0 0,0l8.702823,-8.702823l8.702823,8.702823c0,\n      0 0,0 0,0c0.093712,0.093712 0.203681,0.161606 0.319387,0.204637c0.318431,0.118575 0.691368,\n      0.050681 0.947643,-0.205594l4.110915,-4.110915c0.256275,-0.256275 0.324168,-0.629212 0.205594,\n      -0.947643c-0.043031,-0.116662 -0.110925,-0.225675 -0.204637,-0.319387l0.000956,0z"}))),Ee=l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"m29.5315,15l-14.063,-14.063l0,8.438l-15,0l0,11.25l15,0l0,8.438l14.063,-14.063z"})),ge=l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"M25.313 3.75l-14.063 14.063-6.563-6.563-4.688 4.688 11.25 11.25 18.75-18.75z"})),be=l.createElement("svg",{viewBox:"0 5 30 30",className:"icon"},l.createElement("path",{d:"M1.875 5.625h26.25v5.625h-26.25zM1.875 13.125h26.25v5.625h-26.25zM1.875 20.625h26.25v5.625h-26.25z"})),Oe=l.createElement("svg",{className:"icon spinner",viewBox:"0 0 32 32"},l.createElement("path",{d:"M16 9.472c-1.030 0-1.865-0.835-1.865-1.865v-5.596c0-1.030 0.835-1.865 1.865-1.865s1.865 0.835 1.865 1.865v5.596c0 1.030-0.835 1.865-1.865 1.865z"}),l.createElement("path",{d:"M16 31.155c-0.644 0-1.166-0.522-1.166-1.166v-5.596c0-0.644 0.522-1.166 1.166-1.166s1.166 0.522 1.166 1.166v5.596c0 0.644-0.522 1.166-1.166 1.166z"}),l.createElement("path",{d:"M11.805 10.48c-0.604 0-1.192-0.314-1.516-0.875l-2.798-4.846c-0.483-0.836-0.196-1.906 0.64-2.389s1.906-0.196 2.389 0.64l2.798 4.846c0.483 0.836 0.196 1.906-0.64 2.389-0.275 0.159-0.576 0.235-0.873 0.235z"}),l.createElement("path",{d:"M22.995 29.164c-0.363 0-0.715-0.188-0.91-0.525l-2.798-4.846c-0.29-0.502-0.118-1.143 0.384-1.433s1.143-0.118 1.433 0.384l2.798 4.846c0.29 0.502 0.118 1.143-0.384 1.433-0.165 0.095-0.346 0.141-0.524 0.141z"}),l.createElement("path",{d:"M8.729 13.436c-0.277 0-0.557-0.070-0.814-0.219l-4.846-2.798c-0.781-0.451-1.048-1.449-0.597-2.229s1.449-1.048 2.229-0.597l4.846 2.798c0.781 0.451 1.048 1.449 0.597 2.229-0.302 0.524-0.851 0.816-1.415 0.816z"}),l.createElement("path",{d:"M28.114 23.927c-0.158 0-0.319-0.040-0.465-0.125l-4.846-2.798c-0.446-0.258-0.599-0.828-0.341-1.274s0.828-0.599 1.274-0.341l4.846 2.798c0.446 0.258 0.599 0.828 0.341 1.274-0.173 0.299-0.486 0.466-0.809 0.466z"}),l.createElement("path",{d:"M7.607 17.515h-5.596c-0.837 0-1.516-0.678-1.516-1.515s0.678-1.515 1.516-1.515h5.596c0.837 0 1.516 0.678 1.516 1.515s-0.678 1.515-1.516 1.515z"}),l.createElement("path",{d:"M29.989 16.933c-0 0 0 0 0 0h-5.596c-0.515-0-0.933-0.418-0.933-0.933s0.418-0.933 0.933-0.933c0 0 0 0 0 0h5.596c0.515 0 0.933 0.418 0.933 0.933s-0.418 0.933-0.933 0.933z"}),l.createElement("path",{d:"M3.886 24.394c-0.483 0-0.954-0.251-1.213-0.7-0.386-0.669-0.157-1.525 0.512-1.911l4.846-2.798c0.669-0.387 1.525-0.157 1.911 0.512s0.157 1.525-0.512 1.911l-4.846 2.798c-0.22 0.127-0.461 0.188-0.698 0.188z"}),l.createElement("path",{d:"M23.27 12.736c-0.322 0-0.636-0.167-0.809-0.466-0.258-0.446-0.105-1.016 0.341-1.274l4.846-2.798c0.446-0.257 1.016-0.105 1.274 0.341s0.105 1.016-0.341 1.274l-4.846 2.798c-0.147 0.085-0.307 0.125-0.465 0.125z"}),l.createElement("path",{d:"M9.004 29.397c-0.218 0-0.438-0.055-0.64-0.172-0.613-0.354-0.823-1.138-0.469-1.752l2.798-4.846c0.354-0.613 1.138-0.823 1.752-0.469s0.823 1.138 0.469 1.752l-2.798 4.846c-0.237 0.411-0.668 0.641-1.112 0.641z"}),l.createElement("path",{d:"M20.196 9.664c-0.158 0-0.319-0.040-0.465-0.125-0.446-0.258-0.599-0.828-0.341-1.274l2.798-4.846c0.258-0.446 0.828-0.599 1.274-0.341s0.599 0.828 0.341 1.274l-2.798 4.846c-0.173 0.299-0.486 0.466-0.809 0.466z"})),ve=function(e){return{type:"@popup/SHOW_POPUP",payload:e}},Te=function(e){return{type:"@game/SET_CELL_PROPS",payload:e}},ye=function(e){return{type:"@game/SET_CELL_VALUE",payload:e}},_e=function(e){return function(n,t){var r=Q(t()),a=ne(t());e===pe.New&&r?(n(Te(function(e){var n={};return e.forEach((function(e,t){var r=0!==e;n[t]={value:e,withHighlight:!1,withError:!1,mode:r?i.ReadOnly:i.Pencil}})),n}(r.mask))),n({type:"@game/RESET_GAME_TOOLS"})):e===pe.GameOver&&r?(n(Te(function(e,n){var t={};return e.forEach((function(e,r){var a=n[r]&&n[r].mode===i.ReadOnly;t[r]={value:e,withHighlight:!1,withError:!1,mode:a?i.ReadOnly:i.Pencil}})),t}(r.matrix,a))),n({type:"@game/RESET_GAME_TOOLS"})):e===pe.Win&&(n({type:"@game/RESET_GAME_TOOLS"}),function(e){e(ve({text:se.Win,buttons:[{size:A.Small,icon:ge,onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(n)),n({type:"@game/SET_GAME_STATE",payload:e})}},Ne=function(){return function(e,n){var t=Q(n()),r=ne(n()),a=Y(r,t.gameType,t.ratio),o=Z(r);0!==a.length||o?(e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),function(e,n){e(ve({text:n?se.Duplicates:se.Check,buttons:[{size:A.Small,icon:ge,onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(e,!!a.length)):e(_e(pe.Win))}},Re=function(){return function(e,n){var t=Q(n()),r=ne(n()),a=Y(r,t.gameType,t.ratio),o=function(e,n){var t={},r=v(h.DisableInGameError);if(!v(h.DisableHighlighting)||!r){for(var a in e)if(e.hasOwnProperty(a)){var o=+a;t[o]=Object(d.a)(Object(d.a)({},e[o]),{withHighlight:!1,withError:!r&&n.includes(o)})}return t}}(r,a);o&&e(Te(o));var i=Z(r);0!==a.length||i||e(_e(pe.Win))}},we=function(e){return function(n,t){var r=t(),a=Q(r),o=ne(r),l=ee(r),c=o[e.x*a.gameType+e.y];if(function(e){var n=e.cellMode,t=e.selectedCell,r=v(h.DisableAutoNotesRemoval);return n===i.Pencil&&t.mode===i.Pencil&&t.value&&!r}({cellMode:l,selectedCell:c})){var s=re(a.gameType,a.ratio,o,c,e);s&&n(Te(s))}}};!function(e){e[e.New=0]="New",e[e.Playing=1]="Playing",e[e.Win=2]="Win",e[e.GameOver=3]="GameOver"}(pe||(pe={}));var Se,Ce={cellMode:i.Pencil,cellProps:{},gameState:pe.New},Ie={hidden:!0},ke={isOpen:!1},xe=Object(m.c)({app:function(e,n){switch(void 0===e&&(e=G),n.type){case"@app/SET_PAGE":return Object(d.a)(Object(d.a)({},e),{page:n.payload});case"@app/SET_CURRENT_GAME":return Object(d.a)(Object(d.a)({},e),{currentGame:n.payload});case"@app/SET_LOBBY_HAS_ERROR":return Object(d.a)(Object(d.a)({},e),{lobbyHasError:n.payload});case"@app/SET_LOBBY_IS_LOADING":return Object(d.a)(Object(d.a)({},e),{lobbyIsLoading:n.payload});case"@app/SET_LOBBY_MENU_SECTION":return Object(d.a)(Object(d.a)({},e),{lobbyMenuSection:n.payload});case"@app/SET_ERROR":return Object(d.a)(Object(d.a)({},e),{errors:Object(d.f)([n.payload],e.errors.filter((function(e){return e.message!==n.payload.message})))});case"@app/REMOVE_ERROR":return Object(d.a)(Object(d.a)({},e),{errors:e.errors.filter((function(e){return e.message!==n.payload.message}))});default:return e}},game:function(e,n){var t;void 0===e&&(e=Ce);var r=e.cellMode,a=e.cellProps;switch(n.type){case"@game/TOGGLE_CELL_MODE":var o=r===i.Pencil?i.Notes:i.Pencil;return Object(d.a)(Object(d.a)({},e),{cellMode:o,cellProps:J(a,o)});case"@game/HIGHLIGHT_CELLS":return v(h.DisableHighlighting)?e:Object(d.a)(Object(d.a)({},e),{cellProps:$(a,n.payload)});case"@game/SET_CELL_VALUE":var l=n.payload,c=l.pos,s=l.value,u=e.cellProps[c];return Object(d.a)(Object(d.a)({},e),{cellProps:Object(d.a)(Object(d.a)({},e.cellProps),(t={},t[c]=Object(d.a)(Object(d.a)({},u),{value:s,mode:e.cellMode}),t))});case"@game/SET_GAME_STATE":return Object(d.a)(Object(d.a)({},e),{gameState:n.payload});case"@game/SET_CELL_PROPS":return Object(d.a)(Object(d.a)({},e),{cellProps:n.payload});case"@game/RESET_GAME_TOOLS":return Object(d.a)(Object(d.a)({},e),{cellMode:i.Pencil});case"@app/SET_CURRENT_GAME":return Ce;default:return e}},popup:function(e,n){switch(void 0===e&&(e=Ie),n.type){case"@popup/SHOW_POPUP":return Object(d.a)(Object(d.a)({},n.payload),{hidden:!1});case"@popup/HIDE_POPUP":case"@game/RESET_GAME_TOOLS":return Object(d.a)(Object(d.a)({},e),{hidden:!0});case"@app/SET_CURRENT_GAME":return Ie;default:return e}},sideMenu:function(e,n){switch(void 0===e&&(e=ke),n.type){case"@sideMenu/TOGGLE_SIDE_MENU":return Object(d.a)(Object(d.a)({},e),{isOpen:!e.isOpen});case"@game/RESET_GAME_TOOLS":return Object(d.a)(Object(d.a)({},e),{isOpen:!1});case"@app/SET_CURRENT_GAME":return ke;default:return e}}}),Ae=Object(m.d)(xe,Object(m.a)(p.a,(function(e){var n=e.dispatch;return function(e){return function(t){return"@app/SET_ERROR"===t.type&&"Network Error"===t.payload.message&&n(ve({text:se.NetworkError,buttons:[{size:A.Small,icon:ge,onClick:function(){n({type:"@popup/HIDE_POPUP"}),n({type:"@app/REMOVE_ERROR",payload:{message:t.payload.message}})}}]})),e(t)}}})));t(62),t(64);!function(e){e.Stats="Stats",e.Settings="Settings",e.Rules="Rules",e.About="About",e.Contacts="Contacts"}(Se||(Se={}));var Me,De=[Se.Stats,Se.Settings,Se.Rules,Se.About],Pe=function(){var e=Object(u.b)(),n=Object(u.c)(X),t=Object(u.c)(K),o=Object(u.c)(V),i=Object(l.useCallback)((function(n){e(function(e){return function(n){return Object(d.b)(void 0,void 0,void 0,(function(){var t,a,o,i;return Object(d.d)(this,(function(l){switch(l.label){case 0:n(P(!0)),t=new g(e),t.shuffle,a=Object(d.e)(t,["shuffle"]),l.label=1;case 1:return l.trys.push([1,3,,4]),[4,x(a,"initialState")];case 2:if(o=l.sent().data,I(o))throw o;return n(D(t)),n(P(!1)),n(M(r.Game)),[3,4];case 3:return i=l.sent(),n(U(i)),n(P(!1)),n(j(!0)),[3,4];case 4:return[2]}}))}))}}(n))}),[]),s=[{value:"Resume",disabled:!o,onClick:o?function(){return e(M(r.Game))}:function(){}},{value:"Easy",onClick:function(){return i({difficulty:a.Easy})}},{value:"Medium",onClick:function(){return i({difficulty:a.Medium})}},{value:"Hard",onClick:function(){return i({difficulty:a.Hard})}}],m=De.map((function(n){return{value:n,onClick:function(){return e(L(n))}}}));return c.a.createElement(c.a.Fragment,null,c.a.createElement("h1",{className:"menu-logo"},"Sudoku"),c.a.createElement("div",{className:"column-container"},t&&c.a.createElement("h3",null,"An error has occurred :(",c.a.createElement("br",null),"Please refresh the page!"),n&&!t&&c.a.createElement("div",{className:"loading"},Oe),!n&&!t&&c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"column"},le(s)),c.a.createElement("div",{className:"column"},le(m)))),c.a.createElement("span",null,c.a.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan")))};t(66);!function(e){e[e.Right=0]="Right",e[e.Left=1]="Left"}(Me||(Me={}));var je,Le=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){var e=["arrow",this.props.arrow===Me.Left?"left":null].join(" ");return l.createElement("div",{className:"section"},l.createElement("div",{className:"cross",onClick:this.props.crossOnClick},he),l.createElement("div",{className:"header"},l.createElement("h2",null,this.props.title)),l.createElement("div",{className:"scrollable"},this.props.content),this.props.withFooter&&l.createElement("div",{className:"footer"},l.createElement("div",{className:e,onClick:this.props.arrowOnClick},Ee)))},n}(l.PureComponent),Ue=(t(68),function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={isChecked:!!v(n.props.storageKey)},n.onChange=function(){var e=!n.state.isChecked;T(n.props.storageKey,e),n.setState({isChecked:e})},n}return Object(d.c)(n,e),n.prototype.render=function(){var e=this.state.isChecked?"checked":"";return l.createElement("label",{className:"checkbox-label "+e},l.createElement("input",{className:"checkbox",type:"checkbox",checked:this.state.isChecked,onChange:this.onChange}),l.createElement("span",null,this.props.text))},n}(l.PureComponent)),Ge=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.getContent=function(){var e={text:"Disable in-game error",storageKey:h.DisableInGameError},n={text:"Disable cell highlighting",storageKey:h.DisableHighlighting},t={text:"Disable automatic removal of notes values",storageKey:h.DisableAutoNotesRemoval};return l.createElement(l.Fragment,null,l.createElement(Ue,Object(d.a)({},e)),l.createElement(Ue,Object(d.a)({},n)),l.createElement(Ue,Object(d.a)({},t)))},n}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Settings,content:this.getContent(),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),He=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Rules,content:l.createElement(l.Fragment,null,l.createElement("p",null,"The classic Sudoku game involves a table of 81 squares. The table is divided into nine 3x3 grids, each containing nine squares."),l.createElement("p",null,"To win the game, each of the nine grids has to contain all the numbers 1-9 within its cells. Each number can only appear once in a row, column or grid.")),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),ze=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Contacts,withFooter:!0,arrow:Me.Left,content:l.createElement(l.Fragment,null,l.createElement("p",null,l.createElement("strong",null,"Developer:")," Sara Nordmyr da Cunha",l.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan")),l.createElement("p",null,l.createElement("strong",null,"Bug reporting: "),l.createElement("a",{href:"https://github.com/kobawan/sudoku/issues",target:"_blank",rel:"noopener noreferrer"},"https://github.com/kobawan/sudoku/issues"))),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Fe=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Stats,content:l.createElement("p",null,"TBD"),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Ye=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.About,withFooter:!0,content:l.createElement(l.Fragment,null,l.createElement("p",null,"Hi! My name is Sara, or Kobawan in the interwebz. I've always been a fan of puzzles, so when I started programming, I came up with the idea to combine my two joys of puzzles and programming, to create this website."),l.createElement("p",null,"It's been a fun project to create. Sometimes challenging and time-consuming, but in the end, a very good opportunity to learn programming."),l.createElement("p",null,"Along with creating more projects than I can handle, I also knit, play with my dogs, and binge watch netflix."),l.createElement("p",null,"I hope you enjoy!")),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Be=((je={})[Se.Stats]=Fe,je[Se.Settings]=Ge,je[Se.Rules]=He,je[Se.About]=Ye,je[Se.Contacts]=ze,je),We=function(e){var n=e.hidden,t=Object(u.b)(),r=Object(u.c)(X),a=Object(u.c)(K),o=Object(u.c)(q),i=Object(l.useCallback)((function(){if(!o)return null;var e=Be[o];return c.a.createElement(e,{crossOnClick:function(){return t(L(void 0))},arrowOnClick:function(){o!==Se.About?o!==Se.Contacts||t(L(Se.About)):t(L(Se.Contacts))}})}),[o]);return c.a.createElement("div",{className:oe()("lobby",n&&"hidden")},c.a.createElement("div",{className:"lobby-wrapper"},c.a.createElement(Pe,null),!r&&!a&&i()))},Qe=(t(70),t(72),function(e){return e.sideMenu.isOpen}),Ve=function(e){var n=e.returnToLobby,t=Object(u.b)(),r=Object(u.c)(Qe),a=Object(l.useCallback)((function(){return t({type:"@sideMenu/TOGGLE_SIDE_MENU"})}),[]),o=[{value:"Return",onClick:n},{value:"Reset",onClick:function(){return function(e){e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),e(ve({text:se.Reset,buttons:[{size:A.Small,value:"Yes",onClick:function(){return e(_e(pe.New))}},{size:A.Small,value:"No",onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(t)}},{value:"Check",onClick:function(){return t(Ne())}},{value:"Solve",onClick:function(){return function(e){e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),e(ve({text:se.Solve,buttons:[{size:A.Small,value:"Yes",onClick:function(){return e(_e(pe.GameOver))}},{size:A.Small,value:"No",onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(t)}}];return c.a.createElement("div",{className:oe()("side-menu-container",r?"opened":"hidden")},c.a.createElement("div",{className:"side-menu-overlay",onClick:a}),c.a.createElement("div",{className:"side-menu"},c.a.createElement("div",{className:"menu"},c.a.createElement("svg",{className:"side-menu-logo"},c.a.createElement("text",null,"Sudoku")),c.a.createElement("div",{className:"buttons-wrapper"},le(o)),c.a.createElement("span",null,c.a.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan"))),c.a.createElement("div",{className:"side-menu-button",onClick:a},be)))},Xe=(t(74),t(76),function(e,n){var t=n.parentElement,r=t.parentElement.rowIndex,a=t.cellIndex;return{x:r,y:a,grid:Math.floor(r/e)*e+Math.floor(a/e)}}),Ke=function(e){var n=e.game,t=e.cell,r=Xe(n.ratio,t),a=r.x,o=r.y;return a*n.gameType+o},qe=function(e){var n=e.mode,t=e.value,r=e.withError,a=e.withHighlight,o=Object(u.b)(),c=Object(u.c)(ee),s=Object(u.c)(ne),m=Object(u.c)(Q),p=Object(u.c)(te),d=function(e){var n=e.target,t=Ke({game:m,cell:n}),r=s[t];!function(e){var n=e.cell,t=e.props,r=e.cellMode;(r===i.Notes&&t.mode===i.Pencil||r===i.Pencil&&t.mode!==i.ReadOnly)&&n.select()}({cell:n,props:r,cellMode:c}),o({type:"@game/HIGHLIGHT_CELLS",payload:r})};return l.createElement("textarea",{readOnly:n===i.ReadOnly||p,maxLength:n!==i.Notes?1:9,rows:1,cols:1,value:t||"",className:oe()(n,p&&"disabled",r&&n!==i.Notes&&"error",a&&n!==i.Notes&&"highlight"),onKeyUp:p?void 0:function(e){var n=e.target,t=Xe(m.ratio,n);o(we(Xe(m.ratio,n))),o(Re()),function(e,n){var t=document.querySelector("#SudokuTable"),r=n.x,a=n.y;switch(e){case 37:0===a?a=8:a--;break;case 38:0===r?r=8:r--;break;case 39:8===a?a=0:a++;break;case 40:8===r?r=0:r++}t.rows[r].cells[a].children[0].focus()}(e.keyCode,t)},onFocus:p?void 0:d,onClick:p?void 0:d,onChange:p||n===i.ReadOnly?void 0:function(e){var n=e.target,t=Ke({game:m,cell:n});o(function(e,n){return function(t,r){if(""!==n)if(n.match(/^[1-9]+$/g)){var a=void 0;a=ee(r())===i.Pencil?+n||0:+E(n.split("").map((function(e){return+e})).sort()).join("")||0,t(ye({pos:e,value:a}))}else;else t(ye({pos:e,value:0}))}}(t,n.value))}})},Je=function(e){var n=e.gameType,t=e.cellState;return l.createElement("table",{className:"sudoku",id:"SudokuTable"},l.createElement("tbody",null,function(){for(var e=[],r=0;r<n;r++){for(var a=[],o=0;o<n;o++){var i=t[r*n+o];a.push(l.createElement("td",{key:o},l.createElement(qe,Object(d.a)({},i))))}e.push(l.createElement("tr",{key:r},a))}return l.createElement(l.Fragment,null,e)}()))},Ze=(t(78),function(){var e=Object(u.b)(),n=Object(u.c)(ee);return l.createElement("div",{className:"game-buttons",onClick:function(){return e({type:"@game/TOGGLE_CELL_MODE"})}},l.createElement("span",null,"Pencil"),l.createElement("span",null,"Notes"),l.createElement("div",{className:"slider "+n+"-slider"}))}),$e=function(e){var n=e.hidden,t=e.game,r=e.returnToLobby,a=Object(u.b)(),o=Object(u.c)(ne);return Object(l.useEffect)((function(){a(_e(pe.New))}),[]),Object(l.useEffect)((function(){a({type:"@game/RESET_GAME_TOOLS"})}),[n]),c.a.createElement("div",{className:oe()("game",n&&"hidden")},c.a.createElement(Ve,{returnToLobby:r}),c.a.createElement("div",{className:"game-wrapper"},c.a.createElement(Je,{cellState:o,gameType:t.gameType}),c.a.createElement(Ze,null)))};t(80);s.render(l.createElement(u.a,{store:Ae},l.createElement((function(){var e=Object(u.b)(),n=Object(u.c)(W),t=Object(u.c)(Q),a=Object(u.c)(X),o=n===r.Menu,i=Object(l.useCallback)((function(){e(M(r.Menu))}),[]);return Object(l.useEffect)((function(){var n=v(h.UserId);e(n?function(e){return function(n){return Object(d.b)(void 0,void 0,void 0,(function(){var t,r;return Object(d.d)(this,(function(a){switch(a.label){case 0:n(P(!0)),a.label=1;case 1:return a.trys.push([1,3,,4]),[4,k(e)];case 2:if(t=a.sent().data,I(t))throw t;return n(P(!1)),n(D(t.game.config)),[3,4];case 3:return r=a.sent(),n(U(r)),n(P(!1)),n(j(!0)),[3,4];case 4:return[2]}}))}))}}(n):function(e){return Object(d.b)(void 0,void 0,void 0,(function(){var n,t;return Object(d.d)(this,(function(r){switch(r.label){case 0:e(P(!0)),r.label=1;case 1:return r.trys.push([1,3,,4]),[4,C(R)];case 2:if(n=r.sent().data,I(n))throw n;return e(P(!1)),T(h.UserId,n),[3,4];case 3:return t=r.sent(),e(U(t)),e(P(!1)),e(j(!0)),[3,4];case 4:return[2]}}))}))})}),[]),c.a.createElement(c.a.Fragment,null,c.a.createElement(We,{hidden:!o}),!a&&t&&c.a.createElement($e,{hidden:o,game:t,returnToLobby:i}),c.a.createElement(fe,null))}),null)),document.getElementById("root"))},30:function(e,n,t){t(113),t(85),e.exports=t(86)},56:function(e,n,t){var r=t(4),a=t(57);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},57:function(e,n,t){(n=t(5)(!1)).push([e.i,".message-popup {\n  position: fixed;\n  right: 0;\n  top: 1.875em;\n  padding: 1.25em;\n  width: 16.25em;\n  background-color: #ecebeb;\n  box-shadow: 0 0 1.25em rgba(0, 0, 0, 0.45);\n  text-align: center;\n  transition: transform 0.3s ease-in-out;\n  font-size: 1rem;\n  transform: translateX(0);\n}\n.message-popup.hidden {\n  transform: translateX(100%);\n  box-shadow: none;\n}\n.message-popup .message {\n  font-size: 1.25em;\n  color: #000000;\n  cursor: default;\n  padding-bottom: 0.5em;\n}\n.message-popup .buttons {\n  display: flex;\n  justify-content: space-around;\n  margin: 0 5em;\n}\n.message-popup .buttons .icon {\n  fill: #ffffff;\n  cursor: pointer;\n  pointer-events: none;\n  width: 1em;\n  height: 1em;\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .message-popup {\n    font-size: calc(0.5rem + 1.2vw);\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .message-popup {\n    font-size: calc(0.5rem + 1.1vh);\n  }\n}\n",""]),e.exports=n},58:function(e,n,t){var r=t(4),a=t(59);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},59:function(e,n,t){(n=t(5)(!1)).push([e.i,".menu-button {\n  background-color: #000000;\n  border: 0;\n  color: #ffffff;\n  border-radius: 0 0.6em;\n  min-width: 5.5em;\n  min-height: 1.9em;\n  padding: 0.35em;\n  margin: 0.5em 0;\n  transition: 0.5s;\n}\n@media (orientation: landscape) and (max-height: 400px) {\n  .menu-button {\n    margin: 0.3em 0;\n  }\n}\n.menu-button.reversed {\n  border-radius: 0.6em 0;\n}\n.menu-button.disabled {\n  pointer-events: none;\n  background-color: #e2e1e1;\n  color: #000000;\n}\n.menu-button:hover {\n  background-color: #d45287;\n}\n.game-button {\n  background-color: #000000;\n  border: 0;\n  color: #ffffff;\n  border-radius: 2.625em;\n  height: 4.1875em;\n  width: 4.125em;\n  padding: 0;\n  transition: 0.5s;\n  display: flex;\n  justify-content: center;\n}\n.game-button.small {\n  height: 2.5em;\n  width: 2.5em;\n  font-size: 1em;\n}\n.game-button:hover,\n.game-button.selected {\n  background-color: #d45287;\n}\n",""]),e.exports=n},60:function(e,n,t){var r=t(4),a=t(61);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},61:function(e,n,t){(n=t(5)(!1)).push([e.i,"@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n.icon {\n  display: block;\n  transition: transform 0.3s ease;\n  width: 100%;\n  height: 100%;\n}\n.icon.spinner {\n  animation: rotating 2s ease-out infinite;\n}\n",""]),e.exports=n},62:function(e,n,t){var r=t(4),a=t(63);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},63:function(e,n,t){(n=t(5)(!1)).push([e.i,".lobby {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: visible;\n  opacity: 1;\n}\n.lobby.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n.lobby .lobby-wrapper {\n  height: 25rem;\n  max-height: 90%;\n  width: 100%;\n  max-width: 22.5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: space-between;\n}\n",""]),e.exports=n},64:function(e,n,t){var r=t(4),a=t(65);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},65:function(e,n,t){(n=t(5)(!1)).push([e.i,'.menu-logo {\n  font: bold 5.625em "dekiru", corbel, sans-serif;\n  margin: 0;\n  height: 1em;\n}\n.loading {\n  width: 2em;\n}\n.column-container {\n  display: flex;\n  flex-flow: row nowrap;\n}\n.column-container .column {\n  padding: 0 0.625rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n',""]),e.exports=n},66:function(e,n,t){var r=t(4),a=t(67);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},67:function(e,n,t){(n=t(5)(!1)).push([e.i,".section {\n  box-sizing: border-box;\n  box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.45);\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  border-radius: 1.875rem 0;\n  padding: 1.25rem;\n  background-color: #ecebeb;\n  position: fixed;\n  max-width: 90%;\n  max-height: 90%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 31.25rem;\n  height: 25rem;\n  font-size: 1rem;\n  user-select: none;\n}\n.section .cross {\n  position: absolute;\n  right: 1.25em;\n  width: 1em;\n  height: 1em;\n  cursor: pointer;\n  transition: 0.5s;\n}\n.section .cross:hover {\n  fill: #d45287;\n}\n.section .header h2 {\n  color: #d45287;\n  font-size: 1.25em;\n  text-align: center;\n  margin: 0;\n  padding-bottom: 1em;\n}\n.section .scrollable {\n  flex-grow: 2;\n  overflow-y: scroll;\n}\n.section .scrollable p {\n  color: #000000;\n  margin: 0;\n  padding: 0.3125em 0;\n}\n.section .footer {\n  height: 1.4375em;\n  padding-top: 1.25em;\n}\n.section .footer .arrow {\n  margin: 0 auto;\n  height: 1.25em;\n  width: 1.25em;\n  cursor: pointer;\n  transition: 0.5s;\n}\n.section .footer .arrow.left {\n  transform: rotate(180deg);\n}\n.section .footer .arrow:hover {\n  fill: #d45287;\n}\n.section a {\n  color: #d45287;\n  text-decoration: underline;\n}\n",""]),e.exports=n},68:function(e,n,t){var r=t(4),a=t(69);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},69:function(e,n,t){(n=t(5)(!1)).push([e.i,'.checkbox-label {\n  display: flex;\n  align-items: center;\n  height: calc(1.3em + 2px);\n  margin-bottom: 0.5em;\n}\n.checkbox-label input[type="checkbox"] {\n  opacity: 0;\n  position: fixed;\n  margin: 0;\n  padding: 0;\n}\n.checkbox-label span {\n  position: relative;\n  padding-left: 2em;\n  height: 100%;\n  line-height: 1.5;\n}\n.checked.checkbox-label span::after {\n  content: "";\n}\n.checkbox-label span::before,\n.checkbox-label span::after {\n  position: absolute;\n  display: inline-block;\n}\n.checkbox-label span::before {\n  content: "";\n  height: 1.3em;\n  width: 1.3em;\n  border: 1px solid;\n  left: 0;\n  border-radius: 50em;\n}\n.checkbox-label span::before:hover {\n  color: red;\n}\n.checkbox-label span::after {\n  content: none;\n  height: 0.375em;\n  width: 0.5625em;\n  border-left: 2px solid;\n  border-bottom: 2px solid;\n  transform: rotate(-45deg);\n  left: calc((1.3em - 0.5625em) / 2);\n  top: calc(1.3em / 4);\n}\n',""]),e.exports=n},70:function(e,n,t){var r=t(4),a=t(71);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},71:function(e,n,t){(n=t(5)(!1)).push([e.i,".game {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: visible;\n  opacity: 1;\n}\n.game.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n.game-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 1rem;\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .game-wrapper {\n    font-size: calc(0.5rem + 1.2vw);\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .game-wrapper {\n    font-size: calc(0.5rem + 1.1vh);\n  }\n}\n",""]),e.exports=n},72:function(e,n,t){var r=t(4),a=t(73);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},73:function(e,n,t){(n=t(5)(!1)).push([e.i,'.side-menu-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n  pointer-events: none;\n}\n.side-menu {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: stretch;\n  justify-content: flex-start;\n  transition: 0.2s ease-in-out;\n  pointer-events: all;\n}\n.hidden .side-menu {\n  transform: translateX(-100%);\n}\n.side-menu .menu {\n  background-color: rgba(236, 235, 235, 0.95);\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 1.25rem;\n  box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.45);\n}\n.side-menu .menu .side-menu-logo {\n  width: 16.25em;\n  height: 6.125em;\n  font-size: 1rem;\n}\n@media (orientation: landscape) and (max-height: 335px) {\n  .side-menu .menu .side-menu-logo {\n    font-size: 0.8rem;\n  }\n}\n@media (orientation: portrait) and (max-width: 374px) {\n  .side-menu .menu .side-menu-logo {\n    font-size: calc(0.26rem + 2.5vw);\n  }\n}\n.side-menu .menu .side-menu-logo text {\n  font: bold 5em "dekiru", corbel, sans-serif;\n  dominant-baseline: text-before-edge;\n}\n.side-menu .menu .buttons-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 1.875rem 0;\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .side-menu .menu {\n    justify-content: space-between;\n  }\n  .side-menu .menu .buttons-wrapper {\n    margin: 0;\n  }\n}\n.side-menu .side-menu-button {\n  position: absolute;\n  left: 110%;\n  top: 1.875em;\n  height: 2rem;\n  fill: black;\n  font-size: 1rem;\n}\n.side-menu .side-menu-button svg {\n  width: 2em;\n  height: 2em;\n}\n@media (hover: hover) {\n  .side-menu .side-menu-button :hover {\n    cursor: pointer;\n    fill: #d45287;\n  }\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .side-menu .side-menu-button {\n    font-size: 0.8rem;\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .side-menu .side-menu-button {\n    font-size: 0.8rem;\n  }\n}\n.side-menu-overlay {\n  width: 100%;\n  height: 100%;\n  pointer-events: all;\n}\n.opened .side-menu-overlay {\n  background-color: rgba(236, 235, 235, 0.5);\n}\n.hidden .side-menu-overlay {\n  display: none;\n}\n',""]),e.exports=n},74:function(e,n,t){var r=t(4),a=t(75);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},75:function(e,n,t){(n=t(5)(!1)).push([e.i,".sudoku {\n  border: 2px solid black;\n  border-collapse: collapse;\n}\n.sudoku tr:nth-of-type(3n) td {\n  border-bottom: 2px solid black;\n}\n.sudoku tr td {\n  border: 1px solid black;\n  padding: 0;\n  width: 2.1875em;\n  height: 2.1875em;\n  overflow: hidden;\n}\n.sudoku tr td:nth-of-type(3n) {\n  border-right: 2px solid black;\n}\n",""]),e.exports=n},76:function(e,n,t){var r=t(4),a=t(77);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},77:function(e,n,t){(n=t(5)(!1)).push([e.i,"textarea {\n  text-align: center;\n  padding: 0;\n  resize: none;\n  vertical-align: middle;\n  box-sizing: border-box;\n  border: none;\n  width: 100%;\n  height: 100%;\n}\ntextarea:focus {\n  outline: 0;\n}\n.pencil {\n  font-size: 1.4em;\n  letter-spacing: 0;\n  line-height: 1.5625em;\n  background-color: #ffffff;\n}\n.readOnly {\n  font-size: 1.4em;\n  letter-spacing: 0;\n  line-height: 1.5625em;\n  background-color: #e2e1e1;\n  cursor: default;\n}\n.notes {\n  font-size: 0.7em;\n  letter-spacing: 0.3em;\n  line-height: 1;\n  background-color: #ffffff;\n}\n.highlight {\n  background-color: #f8c9dc;\n}\n.error {\n  line-height: calc(1.5625em - (4px * 2));\n  border: 4px solid #c40202;\n}\n.disabled {\n  cursor: default;\n}\n",""]),e.exports=n},78:function(e,n,t){var r=t(4),a=t(79);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},79:function(e,n,t){(n=t(5)(!1)).push([e.i,".game-buttons {\n  display: flex;\n  margin-top: 1.25em;\n  border: 1px solid;\n  border-radius: 62.5em;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n}\n.game-buttons span {\n  height: 2em;\n  width: 3.75em;\n  color: #000000;\n  z-index: 5;\n  vertical-align: middle;\n  line-height: 2em;\n  text-align: center;\n  border-radius: 50em;\n  font-size: 1.25em;\n}\n.game-buttons .slider {\n  position: absolute;\n  height: 2.5em;\n  width: 4.6875em;\n  background-color: rgba(212, 82, 135, 0.6);\n  border-radius: 2.625em;\n  transition: 0.3s;\n}\n.game-buttons .slider.notes-slider {\n  transform: translateX(100%);\n}\n@media (hover: hover) {\n  :hover.game-buttons .slider {\n    background-color: rgba(212, 82, 135, 0.4);\n    transform: scaleX(1.1);\n    transform-origin: left;\n  }\n  :hover.game-buttons .slider.notes-slider {\n    transform: scaleX(1.1) translateX(90%);\n    transform-origin: right;\n  }\n}\n",""]),e.exports=n},80:function(e,n,t){var r=t(4),a=t(81);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},81:function(e,n,t){var r=t(5),a=t(82),o=t(83),i=t(84);n=r(!1);var l=a(o),c=a(i);n.push([e.i,'@font-face {\n  font-family: "dekiru";\n  src: url('+l+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\nhtml {\n  font: 16px "dekiru", corbel, sans-serif;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  background: #ecebeb no-repeat center / cover url('+c+');\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\n#root {\n  background-color: rgba(236, 235, 235, 0.4);\n  width: 100%;\n  height: 100%;\n}\nbutton {\n  font: 1.25rem "dekiru", corbel, sans-serif;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n}\n@media (orientation: landscape) and (max-height: 335px) {\n  button {\n    font-size: 1.1rem;\n  }\n}\nbutton:focus {\n  outline: none;\n}\na {\n  color: #000000;\n  text-decoration: none;\n}\n@media (hover: hover) {\n  a:hover {\n    color: #d45287;\n    text-decoration: underline;\n  }\n}\nsvg text {\n  user-select: none;\n}\n',""]),e.exports=n},83:function(e,n,t){"use strict";t.r(n),n.default=t.p+"Dekiru.ttf"},84:function(e,n,t){"use strict";t.r(n),n.default=t.p+"images/background.jpg"},85:function(e,n){e.exports='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <meta charset="UTF-8">\n  <title>Sudoku</title>\n</head>\n<body>\n  <div id="root"></div>\n</body>\n</html>\n'}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9ob3Qgc3luYyBub25yZWN1cnNpdmUgXlxcLlxcL2xvZyQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbnN0cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvZ2VuZXJhbFV0aWxzLnRzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9sb2NhbFN0b3JhZ2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2dlbmVyYXRvci9nZW5lcmF0b3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL2Vycm9yQ29kZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL3NlcnZlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9hcHAvZHVja3MvcmVxdWVzdHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvYXBwL2R1Y2tzL2FjdGlvbnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvYnV0dG9ucy9CdXR0b24udHN4Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2FwcC9kdWNrcy9yZWR1Y2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9hcnJheVV0aWxzLnRzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2dhbWUtcGFnZS9oZWxwZXJzL2dhbWVUYWJsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9hcHAvZHVja3Mvc2VsZWN0b3JzLnRzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2dhbWUtcGFnZS9oZWxwZXJzL2hlbHBlcnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvZ2FtZS1wYWdlL2R1Y2tzL3NlbGVjdG9ycy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9nYW1lLXBhZ2UvaGVscGVycy9nYW1lTm90ZXNDZWxscy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9wb3B1cC9Qb3B1cC50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvcG9wdXAvZHVja3Mvc2VsZWN0b3JzLnRzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2dhbWUtcGFnZS9kdWNrcy9yZWR1Y2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3N2Zy9JY29ucy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvcG9wdXAvZHVja3MvYWN0aW9ucy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvZ2FtZS1wYWdlL2R1Y2tzL2FjdGlvbnMudHN4Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3NpZGUtbWVudS9kdWNrcy9hY3Rpb25zLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9tZW51LWNvbnRlbnQvdHlwZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvcG9wdXAvZHVja3MvcmVkdWNlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9zaWRlLW1lbnUvZHVja3MvcmVkdWNlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvZHVja3Mvc3RvcmUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2R1Y2tzL21pZGRsZXdhcmVzL25ldHdvcmsudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbWFpbi1tZW51L01haW5NZW51LnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9tZW51LWNvbnRlbnQvTWVudUNvbnRlbnRTZWN0aW9uLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9jaGVja2JveC9DaGVja2JveC50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbWVudS1jb250ZW50L1NldHRpbmdzU2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbWVudS1jb250ZW50L1J1bGVzU2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbWVudS1jb250ZW50L0NvbnRhY3RzU2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbWVudS1jb250ZW50L1N0YXRzU2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbWVudS1jb250ZW50L0Fib3V0U2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbG9iYnktcGFnZS9Mb2JieVBhZ2UudHN4Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3NpZGUtbWVudS9kdWNrcy9zZWxlY3RvcnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvc2lkZS1tZW51L1NpZGVNZW51LnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9zdWRva3UtY2VsbC9oZWxwZXJzLnRzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3N1ZG9rdS1jZWxsL0NlbGwudHN4Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3N1ZG9rdS10YWJsZS9TdWRva3VUYWJsZS50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvc2xpZGVyL1NsaWRlci50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvZ2FtZS1wYWdlL0dhbWVQYWdlLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvanMvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2FwcC9BcHAudHN4Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3BvcHVwL3BvcHVwLmxlc3M/NzM5ZiIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9wb3B1cC9wb3B1cC5sZXNzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2J1dHRvbnMvYnV0dG9uLmxlc3M/M2RkZSIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9idXR0b25zL2J1dHRvbi5sZXNzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3N2Zy9pY29ucy5sZXNzPzMwNzciLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvc3ZnL2ljb25zLmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbG9iYnktcGFnZS9sb2JieVBhZ2UubGVzcz9jYjAzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2xvYmJ5LXBhZ2UvbG9iYnlQYWdlLmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvbWFpbi1tZW51L21haW5NZW51Lmxlc3M/MjNiOCIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9tYWluLW1lbnUvbWFpbk1lbnUubGVzcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9tZW51LWNvbnRlbnQvbWVudUNvbnRlbnRTZWN0aW9uLmxlc3M/ZWMwNyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9tZW51LWNvbnRlbnQvbWVudUNvbnRlbnRTZWN0aW9uLmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvY2hlY2tib3gvY2hlY2tib3gubGVzcz82OWFkIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL2NoZWNrYm94L2NoZWNrYm94Lmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvZ2FtZS1wYWdlL2dhbWVQYWdlLmxlc3M/NGNjZSIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9nYW1lLXBhZ2UvZ2FtZVBhZ2UubGVzcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9zaWRlLW1lbnUvc2lkZU1lbnUubGVzcz84M2M5Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3NpZGUtbWVudS9zaWRlTWVudS5sZXNzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3N1ZG9rdS10YWJsZS9zdWRva3VUYWJsZS5sZXNzPzFhY2YiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvc3Vkb2t1LXRhYmxlL3N1ZG9rdVRhYmxlLmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvc3Vkb2t1LWNlbGwvY2VsbC5sZXNzPzY2M2IiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvc3Vkb2t1LWNlbGwvY2VsbC5sZXNzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3NsaWRlci9zbGlkZXIubGVzcz9jNDE1Iiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL3NsaWRlci9zbGlkZXIubGVzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2NvbW1vbi5sZXNzPzgxYjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9jb21tb24ubGVzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ZvbnRzL0Rla2lydS50dGYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9pbWFnZXMvYmFja2dyb3VuZC5qcGciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9pbmRleC5odG1sIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJleGVjdXRlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMCIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwibWFwIiwid2VicGFja0NvbnRleHQiLCJyZXEiLCJpZCIsIndlYnBhY2tDb250ZXh0UmVzb2x2ZSIsImUiLCJFcnJvciIsImNvZGUiLCJrZXlzIiwicmVzb2x2ZSIsIlBhZ2UiLCJHYW1lRGlmZmljdWx0eSIsIkdhbWVUeXBlIiwiQ2VsbE1vZGUiLCJTdG9yYWdlS2V5cyIsInJlbW92ZUR1cGxpY2F0ZXMiLCJhcnIiLCJwb3MiLCJuZXh0IiwicHJvcHMiLCJtYXRyaXgiLCJtYXNrIiwiY3JlYXRlVGVtcGxhdGUiLCJ2YWwiLCJnYW1lVGVtcGxhdGUiLCJyb3ciLCJnYW1lVHlwZSIsImNvbCIsInJhdGlvIiwiTWF0aCIsImZsb29yIiwic2h1ZmZsZVBhaXJzIiwicmFuZDEiLCJyYW5kMiIsIm5ld0FyciIsInJhbmRvbWl6ZSIsInNodWZmbGUiLCJjZWlsIiwicmFuZG9tIiwic2h1ZmZsZUNvbHVtbnMiLCJwb3MxIiwicG9zMiIsIm9yaWdpbmFsVmFsIiwic2h1ZmZsZUNvbHVtbnNJbkdyaWQiLCJzaHVmZmxlUm93c0luR3JpZCIsIm1hc2tHYW1lIiwiZ3JpZCIsIm1hc2tQb3NpdGlvbnMiLCJyYW5kIiwiZGlmIiwiZGlmZmljdWx0eSIsImluY2x1ZGVzIiwiZ2VuZXJhdGUiLCJmbnMiLCJyZWR1Y2UiLCJmIiwiZyIsImFyZ3MiLCJjb21wb3NlIiwidGhpcyIsInR5cGUiLCJEZWZhdWx0Iiwic3FydCIsIkhUVFBTdGF0dXNDb2RlIiwic3RvcmFnZUtleXNUb0RlZmF1bHRNYXAiLCJEaXNhYmxlSW5HYW1lRXJyb3IiLCJEaXNhYmxlSGlnaGxpZ2h0aW5nIiwiRGlzYWJsZUF1dG9Ob3Rlc1JlbW92YWwiLCJVc2VySWQiLCJnZXRTdG9yYWdlS2V5IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsInNldFN0b3JhZ2VLZXkiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwiY29uc29sZSIsImVycm9yIiwiU0VSVkVSX1VSTCIsIlVTRVJfRU5EUE9JTlQiLCJjb21tb25PcHRpb25zIiwiaGVhZGVycyIsInRpbWVvdXQiLCJyZXF1ZXN0IiwidXJsIiwiYSIsImJvZHkiLCJwb3N0IiwiaXNFcnJvclJlc3BvbnNlIiwidW5kZWZpbmVkIiwic3RhdHVzIiwiZ2V0VXNlciIsInNhdmVHYW1lIiwiY29uZmlnIiwic3RhdGUiLCJHYW1lQnV0dG9uU2l6ZSIsInNldFBhZ2UiLCJwYXlsb2FkIiwic2V0Q3VycmVudEdhbWUiLCJzZXRMb2JieUlzTG9hZGluZyIsInNldExvYmJ5SGFzRXJyb3IiLCJzZXRMb2JieU1lbnVTZWN0aW9uIiwic2V0RXJyb3IiLCJtZXNzYWdlIiwiSU5URVJOQUxfU0VSVkVSX0VSUk9SIiwiaW5pdGlhbFN0YXRlIiwicGFnZSIsIk1lbnUiLCJjdXJyZW50R2FtZSIsImxvYmJ5SXNMb2FkaW5nIiwibG9iYnlIYXNFcnJvciIsImxvYmJ5TWVudVNlY3Rpb24iLCJlcnJvcnMiLCJzb3J0QnlSb3dzIiwiY2FsbGJhY2siLCJzb3J0QnlDb2xzIiwic29ydEJ5R3JpZHMiLCJnYW1lUmF0aW8iLCJyb3dQb3MiLCJyb3dHcmlkIiwiY29sR3JpZCIsImdldER1cGxpY2F0ZXMiLCJjZWxsUHJvcHMiLCJwZW5jaWxDZWxsc1Jvd3MiLCJOb3RlcyIsInBlbmNpbENlbGxzQ29scyIsInBlbmNpbENlbGxzR3JpZHMiLCJmaW5kRHVwbGljYXRlcyIsInJvd3MiLCJjb2xzIiwiZ3JpZHMiLCJkdXBsaWNhdGVzIiwib3V0ZXIiLCJpbm5lciIsImN1cnJlbnRQb3MiLCJuZXh0UG9zIiwiZ2V0UGFnZSIsImFwcCIsImdldEN1cnJlbnRHYW1lIiwiZ2V0SGFzQ3VycmVudEdhbWUiLCJnZXRMb2JieUlzTG9hZGluZyIsImdldExvYmJ5SGFzRXJyb3IiLCJnZXRMb2JieU1lbnVTZWN0aW9uIiwidXBkYXRlQ2VsbHNDZWxsTW9kZSIsImNlbGxNb2RlIiwibmV3Q2VsbFByb3BzIiwiaGFzSW52YWxpZEVuZGdhbWVDZWxscyIsInVwZGF0ZUNlbGxzSGlnaGxpZ2h0Iiwic2VsZWN0ZWRDZWxsIiwiY2VsbCIsIm1hdGNoZXNWYWx1ZSIsIndpdGhIaWdobGlnaHQiLCJnZXRDZWxsTW9kZSIsImdhbWUiLCJnZXRDZWxsUHJvcHMiLCJhcmVDZWxsc0Rpc2FibGVkIiwiR2FtZVN0YXRlIiwiV2luIiwiR2FtZU92ZXIiLCJnYW1lU3RhdGUiLCJnZXRHYW1lU3RhdGUiLCJyZW1vdmVEdXBsaWNhdGVOb3Rlc0NlbGxzIiwiY29vciIsIm5vdGVzQ2VsbHNSb3dzIiwibm90ZXNDZWxsc0NvbHMiLCJub3Rlc0NlbGxzR3JpZHMiLCJ4IiwieSIsImdldER1cGxpY2F0ZU5vdGVzQ2VsbHMiLCJzcGxpdCIsImZpbHRlciIsImpvaW4iLCJNZW51QnV0dG9uIiwiY2xhc3NOYW1lIiwicmV2ZXJzZWQiLCJkaXNhYmxlZCIsIm9uQ2xpY2siLCJpbmRleCIsIm1hcFByb3BzVG9NZW51QnV0dG9ucyIsImJ1dHRvbnMiLCJQb3B1cFRleHQiLCJHYW1lQnV0dG9uIiwiaWNvbiIsInNpemUiLCJzZWxlY3RlZCIsIlNtYWxsIiwiZ2V0UG9wdXBQcm9wcyIsInBvcHVwIiwiUG9wdXBUZXh0TWFwIiwiU29sdmUiLCJSZXNldCIsIkR1cGxpY2F0ZXMiLCJDaGVjayIsIk5ldHdvcmtFcnJvciIsIlBvcHVwIiwidGV4dCIsImhpZGRlbiIsImlzSGlkZGVuIiwibWFwUHJvcHNUb0dhbWVCdXR0b25zIiwiY3Jvc3NTdmciLCJ2aWV3Qm94IiwiYXJyb3dTdmciLCJjaGVja1N2ZyIsIm1lbnVTdmciLCJzcGlubmVyU3ZnIiwic2hvd1BvcHVwIiwic2V0Q2VsbFByb3BzIiwic2V0Q2VsbFZhbHVlIiwidXBkYXRlR2FtZVN0YXRlIiwiZGlzcGF0Y2giLCJnZXRTdGF0ZSIsIk5ldyIsInZhbHVlcyIsImZvckVhY2giLCJpc1JlYWRPbmx5Q2VsbCIsIndpdGhFcnJvciIsIlJlYWRPbmx5IiwiUGVuY2lsIiwiZ2V0TmV3Q2VsbFByb3BzIiwiY3VycmVudENlbGxQcm9wcyIsImdldEVuZGdhbWVDZWxsUHJvcHMiLCJzaG93V2luUG9wdXAiLCJjaGVja0ZvcldpbiIsImhhc0ludmFsaWRDZWxscyIsImhhc0R1cGxpY2F0ZXMiLCJzaG93Q2hlY2tQb3B1cCIsInVwZGF0ZVBlbmNpbENlbGxzIiwiZGlzYWJsZUluR2FtZUVycm9yIiwicmVzZXRDZWxsU3RhdHVzIiwidXBkYXRlTm90ZXNDZWxscyIsImRpc2FibGVBdXRvTm90ZXNSZW1vdmFsIiwiY2FuQXV0b21hdGljYWxseVVwZGF0ZU5vdGVzQ2VsbHMiLCJNZW51U2VjdGlvbiIsImlzT3BlbiIsInJvb3RSZWR1Y2VyIiwiYWN0aW9uIiwibmV3Q2VsbE1vZGUiLCJzaWRlTWVudSIsInN0b3JlIiwiQXJyb3dEaXJlY3Rpb24iLCJtZW51U2VjdGlvbkJ1dHRvbnMiLCJTdGF0cyIsIlNldHRpbmdzIiwiUnVsZXMiLCJBYm91dCIsIk1haW5NZW51IiwiaXNMb2FkaW5nIiwiaGFzRXJyb3IiLCJoYXNDdXJyZW50R2FtZSIsImdlbmVyYXRlR2FtZSIsIkdhbWUiLCJzdGFydE5ld0dhbWUiLCJsZWZ0Q29sdW1uIiwiRWFzeSIsIk1lZGl1bSIsIkhhcmQiLCJyaWdodENvbHVtbiIsInNlY3Rpb24iLCJocmVmIiwidGFyZ2V0IiwicmVsIiwicmVuZGVyIiwiYXJyb3dDbGFzc05hbWVzIiwiYXJyb3ciLCJMZWZ0IiwiY3Jvc3NPbkNsaWNrIiwidGl0bGUiLCJjb250ZW50Iiwid2l0aEZvb3RlciIsImFycm93T25DbGljayIsImlzQ2hlY2tlZCIsInN0b3JhZ2VLZXkiLCJvbkNoYW5nZSIsInNldFN0YXRlIiwiY2hlY2tlZCIsImdldENvbnRlbnQiLCJkaXNhYmxlSW5HYW1lUHJvcHMiLCJkaXNhYmxlSGlnaGxpZ2h0aW5nUHJvcHMiLCJkaXNhYmxlQXV0b05vdGVzUmVtb3ZhbFByb3BzIiwiQ29udGFjdHMiLCJtYXBNZW51U2VjdGlvblRvQ29tcG9uZW50IiwiTG9iYnlQYWdlIiwiY3VycmVudFNlY3Rpb24iLCJnZXRTZWN0aW9uQ29tcG9uZW50IiwiQ29tcG9uZW50IiwiZ2V0U2lkZU1lbnVJc09wZW4iLCJTaWRlTWVudSIsInJldHVyblRvTG9iYnkiLCJzaWRlTWVudUJ1dHRvbnMiLCJzaG93UmVzZXRQb3B1cCIsInNob3dTb2x2ZVBvcHVwIiwiZmluZENvb3JkaW5hdGVzIiwidGFibGVDZWxsIiwicGFyZW50RWxlbWVudCIsImNvb3JSb3ciLCJyb3dJbmRleCIsImNvb3JDb2wiLCJjZWxsSW5kZXgiLCJnZXRDZWxsUG9zRnJvbUVsZW1lbnQiLCJDZWxsIiwiaXNEaXNhYmxlZCIsIm9uU2VsZWN0Iiwic2VsZWN0Iiwic2VsZWN0Q2VsbENvbnRlbnQiLCJyZWFkT25seSIsIm1heExlbmd0aCIsIm9uS2V5VXAiLCJrZXlDb2RlIiwic3Vkb2t1VGFibGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjZWxscyIsImNoaWxkcmVuIiwiZm9jdXMiLCJhcnJvd0tleXMiLCJvbkZvY3VzIiwibWF0Y2giLCJuZXdWYWx1ZSIsInNvcnQiLCJ1cGRhdGVDZWxsVmFsdWUiLCJTdWRva3VUYWJsZSIsImNlbGxTdGF0ZSIsImdldFRhYmxlIiwiU2xpZGVyIiwiR2FtZVBhZ2UiLCJzZWxlY3RlZFBhZ2UiLCJpc0xvYmJ5IiwiaGFuZGxlQ3VycmVudFVzZXIiLCJnZXRFbGVtZW50QnlJZCIsImFwaSIsImRlZmF1bHQiLCJvcHRpb25zIiwiZXhwb3J0ZWQiLCJsb2NhbHMiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIl0sIm1hcHBpbmdzIjoiYUFDRSxTQUFTQSxFQUFxQkMsR0FRN0IsSUFQQSxJQU1JQyxFQUFVQyxFQU5WQyxFQUFXSCxFQUFLLEdBQ2hCSSxFQUFjSixFQUFLLEdBQ25CSyxFQUFpQkwsRUFBSyxHQUlITSxFQUFJLEVBQUdDLEVBQVcsR0FDcENELEVBQUlILEVBQVNLLE9BQVFGLElBQ3pCSixFQUFVQyxFQUFTRyxHQUNoQkcsT0FBT0MsVUFBVUMsZUFBZUMsS0FBS0MsRUFBaUJYLElBQVlXLEVBQWdCWCxJQUNwRkssRUFBU08sS0FBS0QsRUFBZ0JYLEdBQVMsSUFFeENXLEVBQWdCWCxHQUFXLEVBRTVCLElBQUlELEtBQVlHLEVBQ1pLLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtSLEVBQWFILEtBQ3BEYyxFQUFRZCxHQUFZRyxFQUFZSCxJQUtsQyxJQUZHZSxHQUFxQkEsRUFBb0JoQixHQUV0Q08sRUFBU0MsUUFDZEQsRUFBU1UsT0FBVFYsR0FPRCxPQUhBVyxFQUFnQkosS0FBS0ssTUFBTUQsRUFBaUJiLEdBQWtCLElBR3ZEZSxJQUVSLFNBQVNBLElBRVIsSUFEQSxJQUFJQyxFQUNJZixFQUFJLEVBQUdBLEVBQUlZLEVBQWdCVixPQUFRRixJQUFLLENBRy9DLElBRkEsSUFBSWdCLEVBQWlCSixFQUFnQlosR0FDakNpQixHQUFZLEVBQ1JDLEVBQUksRUFBR0EsRUFBSUYsRUFBZWQsT0FBUWdCLElBQUssQ0FDOUMsSUFBSUMsRUFBUUgs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VyxFQURrQyxFQUFRLEVBQ2hDOFcsRUFBNEIsSUFFOUIvWCxLQUFLLENBQUNrQixFQUFPMUIsRUFBSSw2NkJBQTg2QixLQUV2OEIwQixFQUFPRCxRQUFVQSxHLG1CQ05qQixJQUFJeVcsRUFBTSxFQUFRLEdBQ0Y5RCxFQUFVLEVBQVEsSUFJQyxpQkFGdkJBLEVBQVVBLEVBQVF6UixXQUFheVIsRUFBUStELFFBQVUvRCxLQUcvQ0EsRUFBVSxDQUFDLENBQUMxUyxFQUFPMUIsRUFBSW9VLEVBQVMsTUFHOUMsSUFBSWdFLEVBQVUsQ0FFZCxPQUFpQixPQUNqQixXQUFvQixHQUloQkMsR0FGU0gsRUFBSTlELEVBQVNnRSxHQUVYaEUsRUFBUWtFLE9BQVNsRSxFQUFRa0UsT0FBUyxJQUlqRDVXLEVBQU9ELFFBQVU0VyxHLG1CQ25CakIsSUFBSUUsRUFBOEIsRUFBUSxHQUN0Q0MsRUFBa0MsRUFBUSxJQUMxQ0MsRUFBZ0MsRUFBUSxJQUN4Q0MsRUFBZ0MsRUFBUSxJQUM1Q2pYLEVBQVU4VyxHQUE0QixHQUN0QyxJQUFJSSxFQUFxQ0gsRUFBZ0NDLEdBQ3JFRyxFQUFxQ0osRUFBZ0NFLEdBRXpFalgsRUFBUWpCLEtBQUssQ0FBQ2tCLEVBQU8xQixFQUFJLHNEQUEwRDJZLEVBQXFDLDRQQUFrUUMsRUFBcUMsMm1CQUE4bUIsS0FFN2dDbFgsRUFBT0QsUUFBVUEsRyxnQ0NYakIsT0FBZSxjQUEwQixjLGdDQ0F6QyxPQUFlLGNBQTBCLHlCLGlCQ0F6Q0MsRUFBT0QsUUFBVSIsImZpbGUiOiJtYWluLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuIFx0XHR2YXIgZXhlY3V0ZU1vZHVsZXMgPSBkYXRhWzJdO1xuXG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiYgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuXG4gXHRcdHdoaWxlKHJlc29sdmVzLmxlbmd0aCkge1xuIFx0XHRcdHJlc29sdmVzLnNoaWZ0KCkoKTtcbiBcdFx0fVxuXG4gXHRcdC8vIGFkZCBlbnRyeSBtb2R1bGVzIGZyb20gbG9hZGVkIGNodW5rIHRvIGRlZmVycmVkIGxpc3RcbiBcdFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2guYXBwbHkoZGVmZXJyZWRNb2R1bGVzLCBleGVjdXRlTW9kdWxlcyB8fCBbXSk7XG5cbiBcdFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiBhbGwgY2h1bmtzIHJlYWR5XG4gXHRcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIFx0fTtcbiBcdGZ1bmN0aW9uIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCkge1xuIFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0dmFyIGRlZmVycmVkTW9kdWxlID0gZGVmZXJyZWRNb2R1bGVzW2ldO1xuIFx0XHRcdHZhciBmdWxmaWxsZWQgPSB0cnVlO1xuIFx0XHRcdGZvcih2YXIgaiA9IDE7IGogPCBkZWZlcnJlZE1vZHVsZS5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGRlcElkID0gZGVmZXJyZWRNb2R1bGVbal07XG4gXHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbZGVwSWRdICE9PSAwKSBmdWxmaWxsZWQgPSBmYWxzZTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYoZnVsZmlsbGVkKSB7XG4gXHRcdFx0XHRkZWZlcnJlZE1vZHVsZXMuc3BsaWNlKGktLSwgMSk7XG4gXHRcdFx0XHRyZXN1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IGRlZmVycmVkTW9kdWxlWzBdKTtcbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MDogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbMzAsMV0pO1xuIFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiByZWFkeVxuIFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4iLCJ2YXIgbWFwID0ge1xuXHRcIi4vbG9nXCI6IDExMlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhtYXAsIHJlcSkpIHtcblx0XHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdHRocm93IGU7XG5cdH1cblx0cmV0dXJuIG1hcFtyZXFdO1xufVxud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IDExMTsiLCJpbXBvcnQgeyBBY3Rpb24sIE1pZGRsZXdhcmUgfSBmcm9tIFwicmVkdXhcIjtcbmltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi9nZW5lcmF0b3IvZ2VuZXJhdG9yXCI7XG5pbXBvcnQgeyBUaHVua0FjdGlvbiB9IGZyb20gXCJyZWR1eC10aHVua1wiO1xuaW1wb3J0IHsgUm9vdFN0YXRlIH0gZnJvbSBcIi4vZHVja3Mvc3RvcmVcIjtcblxuZXhwb3J0IGVudW0gUGFnZSB7XG4gIEdhbWUsXG4gIE1lbnUsXG59XG5cbmV4cG9ydCBlbnVtIEdhbWVEaWZmaWN1bHR5IHtcbiAgRWFzeSA9IDQsXG4gIE1lZGl1bSA9IDUsXG4gIEhhcmQgPSA2LFxufVxuXG5leHBvcnQgZW51bSBHYW1lVHlwZSB7XG4gIERlZmF1bHQgPSA5LFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdhbWVDb25maWcge1xuICBkaWZmaWN1bHR5OiBHYW1lRGlmZmljdWx0eTtcbiAgdHlwZT86IEdhbWVUeXBlO1xuICBzaHVmZmxlPzogbnVtYmVyO1xufVxuXG5leHBvcnQgZW51bSBDZWxsTW9kZSB7XG4gIFBlbmNpbCA9IFwicGVuY2lsXCIsXG4gIE5vdGVzID0gXCJub3Rlc1wiLFxuICBSZWFkT25seSA9IFwicmVhZE9ubHlcIixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDZWxsUHJvcHMge1xuICBtb2RlOiBDZWxsTW9kZTtcbiAgd2l0aEhpZ2hsaWdodDogYm9vbGVhbjtcbiAgd2l0aEVycm9yOiBib29sZWFuO1xuICB2YWx1ZTogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlQ2VsbHNNYXAge1xuICBba2V5OiBudW1iZXJdOiBDZWxsUHJvcHM7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2VsbENvb3JkaW5hdGVzIHtcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG4gIGdyaWQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHYW1lRGF0YSB7XG4gIGNvbmZpZzogR2FtZTtcbiAgc3RhdGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVc2VyRGF0YSB7XG4gIF9pZDogc3RyaW5nO1xuICBnYW1lOiBHYW1lRGF0YTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY3Rpb25XaXRoUGF5bG9hZDxULCBQPiBleHRlbmRzIEFjdGlvbjxUPiB7XG4gIHBheWxvYWQ6IFA7XG59XG5cbmV4cG9ydCB0eXBlIEFwcFRodW5rPFJldHVyblR5cGUgPSB2b2lkPiA9IFRodW5rQWN0aW9uPFxuICBSZXR1cm5UeXBlLFxuICBSb290U3RhdGUsXG4gIHVua25vd24sXG4gIEFjdGlvbjxzdHJpbmc+XG4+O1xuXG5leHBvcnQgdHlwZSBBcHBNaWRkbGV3YXJlID0gTWlkZGxld2FyZTx7fSwgUm9vdFN0YXRlPjtcbiIsImV4cG9ydCBjb25zdCBjb21wb3NlID0gKC4uLmZuczogRnVuY3Rpb25bXSkgPT5cbiAgZm5zLnJlZHVjZSgoZiwgZykgPT4gKC4uLmFyZ3M6IGFueVtdKSA9PiBmKGcoLi4uYXJncykpKTtcblxuZXhwb3J0IGNvbnN0IHJlbW92ZUR1cGxpY2F0ZXMgPSA8VD4oYXJyOiBUW10pID0+IHtcbiAgaWYgKGFyci5sZW5ndGggIT09IDEpIHtcbiAgICBmb3IgKGxldCBwb3MgPSAwOyBwb3MgPCBhcnIubGVuZ3RoOyBwb3MrKykge1xuICAgICAgZm9yIChsZXQgbmV4dCA9IDE7IG5leHQgPCBhcnIubGVuZ3RoIC0gcG9zOyBuZXh0KyspIHtcbiAgICAgICAgaWYgKGFycltwb3NdID09PSBhcnJbcG9zICsgbmV4dF0pIHtcbiAgICAgICAgICBhcnIuc3BsaWNlKHBvcyArIG5leHQsIDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBhcnI7XG59O1xuIiwiZXhwb3J0IGVudW0gU3RvcmFnZUtleXMge1xuICBEaXNhYmxlSW5HYW1lRXJyb3IgPSBcIkRpc2FibGVJbkdhbWVFcnJvclwiLFxuICBEaXNhYmxlSGlnaGxpZ2h0aW5nID0gXCJEaXNhYmxlSGlnaGxpZ2h0aW5nXCIsXG4gIERpc2FibGVBdXRvTm90ZXNSZW1vdmFsID0gXCJEaXNhYmxlQXV0b05vdGVzUmVtb3ZhbFwiLFxuICBVc2VySWQgPSBcIlVzZXJJZFwiLFxufVxuXG50eXBlIFN0b3JhZ2VLZXlzVHlwZSA9IGJvb2xlYW4gfCBzdHJpbmc7XG5cbmV4cG9ydCBjb25zdCBzdG9yYWdlS2V5c1RvRGVmYXVsdE1hcDoge1xuICBba2V5IGluIFN0b3JhZ2VLZXlzXTogU3RvcmFnZUtleXNUeXBlO1xufSA9IHtcbiAgW1N0b3JhZ2VLZXlzLkRpc2FibGVJbkdhbWVFcnJvcl06IGZhbHNlLFxuICBbU3RvcmFnZUtleXMuRGlzYWJsZUhpZ2hsaWdodGluZ106IGZhbHNlLFxuICBbU3RvcmFnZUtleXMuRGlzYWJsZUF1dG9Ob3Rlc1JlbW92YWxdOiBmYWxzZSxcbiAgW1N0b3JhZ2VLZXlzLlVzZXJJZF06IFwiXCIsXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0U3RvcmFnZUtleSA9IChrZXk6IFN0b3JhZ2VLZXlzKTogU3RvcmFnZUtleXNUeXBlID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB2YWx1ZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgdGhyb3cgRXJyb3I7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKHZhbHVlKTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIHN0b3JhZ2VLZXlzVG9EZWZhdWx0TWFwW2tleV07XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBzZXRTdG9yYWdlS2V5ID0gKGtleTogU3RvcmFnZUtleXMsIHZhbHVlOiBTdG9yYWdlS2V5c1R5cGUpID0+IHtcbiAgdHJ5IHtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xuICB9IGNhdGNoIHtcbiAgICBjb25zb2xlLmVycm9yKGBMb2NhbCBzdG9yYWdlOiBXYXMgbm90IGFibGUgdG8gc2V0IGl0ZW0gaW4ga2V5ICR7a2V5fWApO1xuICB9XG59O1xuIiwiaW1wb3J0IHsgY29tcG9zZSB9IGZyb20gXCIuLi91dGlscy9nZW5lcmFsVXRpbHNcIjtcbmltcG9ydCB7IEdhbWVDb25maWcsIEdhbWVUeXBlLCBHYW1lRGlmZmljdWx0eSB9IGZyb20gXCIuLi9jb25zdHNcIjtcblxuZXhwb3J0IGNsYXNzIEdhbWUge1xuICBwdWJsaWMgcmVhZG9ubHkgZ2FtZVR5cGU6IEdhbWVUeXBlO1xuICBwdWJsaWMgcmVhZG9ubHkgZGlmZmljdWx0eTogR2FtZURpZmZpY3VsdHk7XG4gIHB1YmxpYyByZWFkb25seSByYXRpbzogbnVtYmVyO1xuICBwdWJsaWMgcmVhZG9ubHkgbWF0cml4OiBudW1iZXJbXSA9IFtdOyAvLyBBcnJheSBvZiByZXN1bHQgb3JkZXJlZCBieSByb3dzXG4gIHB1YmxpYyByZWFkb25seSBtYXNrOiBudW1iZXJbXSA9IFtdOyAvLyBBcnJheSBvZiBtYXNrZWQgcmVzdWx0IG9yZGVyZWQgYnkgcm93c1xuICBwdWJsaWMgcmVhZG9ubHkgc2h1ZmZsZTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBHYW1lQ29uZmlnKSB7XG4gICAgdGhpcy5nYW1lVHlwZSA9IHByb3BzLnR5cGUgfHwgR2FtZVR5cGUuRGVmYXVsdDtcbiAgICB0aGlzLmRpZmZpY3VsdHkgPSBwcm9wcy5kaWZmaWN1bHR5O1xuICAgIHRoaXMucmF0aW8gPSBNYXRoLnNxcnQodGhpcy5nYW1lVHlwZSk7XG4gICAgdGhpcy5zaHVmZmxlID0gcHJvcHMuc2h1ZmZsZSB8fCA2MDtcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmdlbmVyYXRlKCk7XG4gICAgdGhpcy5tYXRyaXggPSByZXN1bHQubWF0cml4O1xuICAgIHRoaXMubWFzayA9IHJlc3VsdC5tYXNrO1xuICB9XG4gIC8qXG4gICAqIENyZWF0ZXMgYXJyYXkgb3JkZXJlZCBieSByb3cgd2l0aCB2YWx1ZXM6XG4gICAqIDEyM3w0NTZ8Nzg5XG4gICAqIDQ1Nnw3ODl8MTIzXG4gICAqIDc4OXwxMjN8NDU2XG4gICAqIC0tLXwtLS18LS0tXG4gICAqIDIzNHw1Njd8ODkxXG4gICAqIDU2N3w4OTF8MjM0XG4gICAqIDg5MXwyMzR8NTY3XG4gICAqIC0tLXwtLS18LS0tXG4gICAqIDM0NXw2Nzh8OTEyXG4gICAqIDY3OHw5MTJ8MzQ1XG4gICAqIDkxMnwzNDV8Njc4XG4gICAqL1xuICBwcml2YXRlIGNyZWF0ZVRlbXBsYXRlID0gKCkgPT4ge1xuICAgIGNvbnN0IGdhbWVUZW1wbGF0ZTogbnVtYmVyW10gPSBbXTtcbiAgICBsZXQgcG9zOiBudW1iZXI7XG4gICAgbGV0IHZhbDogbnVtYmVyO1xuICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuZ2FtZVR5cGU7IHJvdysrKSB7XG4gICAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCB0aGlzLmdhbWVUeXBlOyBjb2wrKykge1xuICAgICAgICAvKipcbiAgICAgICAgICogcm93ICogdGhpcy5yYXRpbyA9IGFtb3VudCB0byBza2lwIGVhY2ggcm93LiBpbmNyZW1lbnRzIG9mIHJvdyBwZXIgZ3JpZCBzaXplXG4gICAgICAgICAqIE1hdGguZmxvb3Iocm93IC8gdGhpcy5yYXRpbykgPSBhbW91bnQgdG8gc2tpcCBlYWNoIGdyaWQtcm93LiBpbmNyZW1lbnRzIG9mIDEgcGVyIGdyaWQtcm93XG4gICAgICAgICAqIGNvbCA9IGNvbHVtbiBudW1iZXIgdG8gaXRlcmF0ZVxuICAgICAgICAgKiAlIHRoaXMuZ2FtZVR5cGUgKyAxID0gZGl2aXNpYmxlIGJ5IDksIGFuZCBhZGQgMVxuICAgICAgICAgKi9cbiAgICAgICAgdmFsID1cbiAgICAgICAgICAoKHJvdyAqIHRoaXMucmF0aW8gKyBNYXRoLmZsb29yKHJvdyAvIHRoaXMucmF0aW8pICsgY29sKSAlXG4gICAgICAgICAgICB0aGlzLmdhbWVUeXBlKSArXG4gICAgICAgICAgMTtcbiAgICAgICAgcG9zID0gcm93ICogdGhpcy5nYW1lVHlwZSArIGNvbDtcbiAgICAgICAgZ2FtZVRlbXBsYXRlW3Bvc10gPSB2YWw7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBnYW1lVGVtcGxhdGU7XG4gIH07XG5cbiAgLypcbiAgICogUmVwbGFjZXMgdmFsdWVzIGluIHRlbXAgZnJvbSByYW5kMS10by1yYW5kMiBhbmQgcmFuZDItdG8tcmFuZDFcbiAgICogYW5kIGNyZWF0ZXMgcmFuZG9tIGNvbWJvcyBvZiByYW5kMSBhbmQgcmFuZDIgdG8gc3dpdGNoIHBsYWNlc1xuICAgKi9cbiAgcHJpdmF0ZSBzaHVmZmxlUGFpcnMgPSAoYXJyOiBudW1iZXJbXSkgPT4ge1xuICAgIGxldCByYW5kMTogbnVtYmVyO1xuICAgIGxldCByYW5kMjogbnVtYmVyO1xuICAgIGNvbnN0IG5ld0FyciA9IGFyci5zbGljZSgpO1xuICAgIGZvciAobGV0IHJhbmRvbWl6ZSA9IDA7IHJhbmRvbWl6ZSA8IHRoaXMuc2h1ZmZsZTsgcmFuZG9taXplKyspIHtcbiAgICAgIHJhbmQxID0gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiB0aGlzLmdhbWVUeXBlKTtcbiAgICAgIGRvIHtcbiAgICAgICAgcmFuZDIgPSBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIHRoaXMuZ2FtZVR5cGUpO1xuICAgICAgfSB3aGlsZSAocmFuZDEgPT09IHJhbmQyKTsgLy8gYXMgbG9uZyBhcyByYW5kMSBlcXVhbHMgcmFuZDIgcmVjYWxjdWxhdGUgcmFuZDJcblxuICAgICAgZm9yIChsZXQgcG9zID0gMDsgcG9zIDwgbmV3QXJyLmxlbmd0aDsgcG9zKyspIHtcbiAgICAgICAgaWYgKG5ld0Fycltwb3NdID09PSByYW5kMSkge1xuICAgICAgICAgIG5ld0Fycltwb3NdID0gcmFuZDI7XG4gICAgICAgIH0gZWxzZSBpZiAobmV3QXJyW3Bvc10gPT09IHJhbmQyKSB7XG4gICAgICAgICAgbmV3QXJyW3Bvc10gPSByYW5kMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3QXJyO1xuICB9O1xuXG4gIC8qXG4gICAqIFJlcGxhY2VzIGNvbHVtbnMgZnJvbSByYW5kMS10by1yYW5kMiBhbmQgcmFuZDItdG8tcmFuZDFcbiAgICogYW5kIGNyZWF0ZXMgcmFuZG9tIGNvbWJvcyBvZiByYW5kMSBhbmQgcmFuZDIgdG8gc3dpdGNoIHBsYWNlc1xuICAgKi9cbiAgcHJpdmF0ZSBzaHVmZmxlQ29sdW1ucyA9IChhcnI6IG51bWJlcltdKSA9PiB7XG4gICAgbGV0IHJhbmQxOiBudW1iZXI7XG4gICAgbGV0IHJhbmQyOiBudW1iZXI7XG4gICAgbGV0IHBvczE6IG51bWJlcjtcbiAgICBsZXQgcG9zMjogbnVtYmVyO1xuICAgIGxldCBvcmlnaW5hbFZhbDogbnVtYmVyO1xuICAgIGNvbnN0IG5ld0FyciA9IGFyci5zbGljZSgpO1xuICAgIGZvciAobGV0IHJhbmRvbWl6ZSA9IDA7IHJhbmRvbWl6ZSA8IHRoaXMuc2h1ZmZsZTsgcmFuZG9taXplKyspIHtcbiAgICAgIHJhbmQxID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5yYXRpbyk7XG4gICAgICBkbyB7XG4gICAgICAgIHJhbmQyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5yYXRpbyk7XG4gICAgICB9IHdoaWxlIChyYW5kMSA9PT0gcmFuZDIpOyAvLyBhcyBsb25nIGFzIHJhbmQxIGVxdWFscyByYW5kMiByZWNhbGN1bGF0ZSByYW5kMlxuXG4gICAgICBmb3IgKGxldCBwb3MgPSAwOyBwb3MgPCB0aGlzLmdhbWVUeXBlOyBwb3MrKykge1xuICAgICAgICAvKipcbiAgICAgICAgICogcG9zICogdGhpcy5nYW1lVHlwZSA9IHBvcyBvZiB2YWx1ZSBpbiBjb2wsIGl0ZXJhdGVzIHRocm91Z2ggY29sdW1uXG4gICAgICAgICAqIHJhbmQxICogdGhpcy5yYXRpbyA9IHBpY2tzIGZpcnN0IGNvbHVtbiBmcm9tIHJhbmRvbSBncmlkXG4gICAgICAgICAqIHJhbmRvbWl6ZSAlIHRoaXMucmF0aW8gPSBhZGRzIHRvIHBpY2tlZCBjb2x1bW4gYnkgaXRlcmF0aW5nIHRocm91Z2ggZGl2aXNpYmxlcyBvZiByYXRpb1xuICAgICAgICAgKi9cbiAgICAgICAgcG9zMSA9XG4gICAgICAgICAgcG9zICogdGhpcy5nYW1lVHlwZSArIChyYW5kMSAqIHRoaXMucmF0aW8gKyAocmFuZG9taXplICUgdGhpcy5yYXRpbykpO1xuICAgICAgICBwb3MyID1cbiAgICAgICAgICBwb3MgKiB0aGlzLmdhbWVUeXBlICsgKHJhbmQyICogdGhpcy5yYXRpbyArIChyYW5kb21pemUgJSB0aGlzLnJhdGlvKSk7XG4gICAgICAgIG9yaWdpbmFsVmFsID0gbmV3QXJyW3BvczFdO1xuICAgICAgICBuZXdBcnJbcG9zMV0gPSBuZXdBcnJbcG9zMl07XG4gICAgICAgIG5ld0Fycltwb3MyXSA9IG9yaWdpbmFsVmFsO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3QXJyO1xuICB9O1xuXG4gIC8qXG4gICAqIFJlcGxhY2VzIGNvbHVtbnMgaW5zaWRlIGdyaWRzIGZyb20gcmFuZDEtdG8tcmFuZDIgYW5kIHJhbmQyLXRvLXJhbmQxXG4gICAqIGFuZCBjcmVhdGVzIHJhbmRvbSBjb21ib3Mgb2YgcmFuZDEgYW5kIHJhbmQyIHRvIHN3aXRjaCBwbGFjZXNcbiAgICovXG4gIHByaXZhdGUgc2h1ZmZsZUNvbHVtbnNJbkdyaWQgPSAoYXJyOiBudW1iZXJbXSkgPT4ge1xuICAgIGxldCByYW5kMTogbnVtYmVyO1xuICAgIGxldCByYW5kMjogbnVtYmVyO1xuICAgIGxldCBwb3MxOiBudW1iZXI7XG4gICAgbGV0IHBvczI6IG51bWJlcjtcbiAgICBsZXQgb3JpZ2luYWxWYWw6IG51bWJlcjtcbiAgICBjb25zdCBuZXdBcnIgPSBhcnIuc2xpY2UoKTtcbiAgICBmb3IgKGxldCByYW5kb21pemUgPSAwOyByYW5kb21pemUgPCB0aGlzLnNodWZmbGU7IHJhbmRvbWl6ZSsrKSB7XG4gICAgICByYW5kMSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMucmF0aW8pO1xuICAgICAgZG8ge1xuICAgICAgICByYW5kMiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMucmF0aW8pO1xuICAgICAgfSB3aGlsZSAocmFuZDEgPT09IHJhbmQyKTsgLy8gYXMgbG9uZyBhcyByYW5kMSBlcXVhbHMgcmFuZDIgcmVjYWxjdWxhdGUgcmFuZDJcblxuICAgICAgZm9yIChsZXQgcG9zID0gMDsgcG9zIDwgdGhpcy5nYW1lVHlwZTsgcG9zKyspIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHBvcyAqIHRoaXMuZ2FtZVR5cGUgPSBwb3Mgb2YgdmFsdWUgaW4gY29sLCBpdGVyYXRlcyB0aHJvdWdoIGNvbHVtblxuICAgICAgICAgKiByYW5kb21pemUgJSB0aGlzLnJhdGlvICogdGhpcy5yYXRpbyA9IGl0ZXJhdGVzIGZpcnN0IGNvbHVtbiBvZiBlYWNoIGdyaWRcbiAgICAgICAgICogcmFuZDEgPSBwaWNrcyB3aGljaCBjb2x1bW4gaW4gZ3JpZCB0byBzaHVmZmxlXG4gICAgICAgICAqL1xuICAgICAgICBwb3MxID1cbiAgICAgICAgICBwb3MgKiB0aGlzLmdhbWVUeXBlICsgKChyYW5kb21pemUgJSB0aGlzLnJhdGlvKSAqIHRoaXMucmF0aW8gKyByYW5kMSk7XG4gICAgICAgIHBvczIgPVxuICAgICAgICAgIHBvcyAqIHRoaXMuZ2FtZVR5cGUgKyAoKHJhbmRvbWl6ZSAlIHRoaXMucmF0aW8pICogdGhpcy5yYXRpbyArIHJhbmQyKTtcbiAgICAgICAgb3JpZ2luYWxWYWwgPSBuZXdBcnJbcG9zMV07XG4gICAgICAgIG5ld0Fycltwb3MxXSA9IG5ld0Fycltwb3MyXTtcbiAgICAgICAgbmV3QXJyW3BvczJdID0gb3JpZ2luYWxWYWw7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXdBcnI7XG4gIH07XG5cbiAgcHJpdmF0ZSBzaHVmZmxlUm93c0luR3JpZCA9IChhcnI6IG51bWJlcltdKSA9PiB7XG4gICAgbGV0IHJhbmQxOiBudW1iZXI7XG4gICAgbGV0IHJhbmQyOiBudW1iZXI7XG4gICAgbGV0IHBvczE6IG51bWJlcjtcbiAgICBsZXQgcG9zMjogbnVtYmVyO1xuICAgIGxldCBvcmlnaW5hbFZhbDogbnVtYmVyO1xuICAgIGNvbnN0IG5ld0FyciA9IGFyci5zbGljZSgpO1xuICAgIGZvciAobGV0IHJhbmRvbWl6ZSA9IDA7IHJhbmRvbWl6ZSA8IHRoaXMuc2h1ZmZsZTsgcmFuZG9taXplKyspIHtcbiAgICAgIHJhbmQxID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5yYXRpbyk7XG4gICAgICBkbyB7XG4gICAgICAgIHJhbmQyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5yYXRpbyk7XG4gICAgICB9IHdoaWxlIChyYW5kMSA9PT0gcmFuZDIpOyAvLyBhcyBsb25nIGFzIHJhbmQxIGVxdWFscyByYW5kMiByZWNhbGN1bGF0ZSByYW5kMlxuXG4gICAgICBmb3IgKGxldCBwb3MgPSAwOyBwb3MgPCB0aGlzLmdhbWVUeXBlOyBwb3MrKykge1xuICAgICAgICAvKipcbiAgICAgICAgICogcG9zID0gcG9zIG9mIHZhbHVlIGluIGZpcnN0IHJvdywgaXRlcmF0ZXMgdGhyb3VnaCByb3dcbiAgICAgICAgICogdGhpcy5nYW1lVHlwZSA9IG1vdmVzIHBvcyB0byBmaXJzdCB2YWx1ZSBpbiBwaWNrZWQgcm93XG4gICAgICAgICAqIHJhbmRvbWl6ZSAlIHRoaXMucmF0aW8gKiB0aGlzLnJhdGlvID0gcGlja3MgZmlyc3Qgcm93IGZyb20gcmFuZG9tIGdyaWRcbiAgICAgICAgICogcmFuZDEgPSBhZGRzIHRvIHBpY2tlZCByb3cgYnkgaXRlcmF0aW5nIHRocm91Z2ggZGl2aXNpYmxlcyBvZiByYXRpb1xuICAgICAgICAgKi9cbiAgICAgICAgcG9zMSA9XG4gICAgICAgICAgcG9zICsgdGhpcy5nYW1lVHlwZSAqICgocmFuZG9taXplICUgdGhpcy5yYXRpbykgKiB0aGlzLnJhdGlvICsgcmFuZDEpO1xuICAgICAgICBwb3MyID1cbiAgICAgICAgICBwb3MgKyB0aGlzLmdhbWVUeXBlICogKChyYW5kb21pemUgJSB0aGlzLnJhdGlvKSAqIHRoaXMucmF0aW8gKyByYW5kMik7XG4gICAgICAgIG9yaWdpbmFsVmFsID0gbmV3QXJyW3BvczFdO1xuICAgICAgICBuZXdBcnJbcG9zMV0gPSBuZXdBcnJbcG9zMl07XG4gICAgICAgIG5ld0Fycltwb3MyXSA9IG9yaWdpbmFsVmFsO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3QXJyO1xuICB9O1xuXG4gIHByaXZhdGUgbWFza0dhbWUgPSAobWF0cml4OiBudW1iZXJbXSkgPT4ge1xuICAgIGNvbnN0IGFyciA9IG1hdHJpeC5zbGljZSgpO1xuXG4gICAgZm9yIChsZXQgZ3JpZCA9IDA7IGdyaWQgPCB0aGlzLmdhbWVUeXBlOyBncmlkKyspIHtcbiAgICAgIC8vIGNyZWF0ZXMgYXJyYXkgd2l0aCBwb3NpdGlvbiBvZiBncmlkIGNlbGxzIHRvIG1hc2tcbiAgICAgIGNvbnN0IG1hc2tQb3NpdGlvbnM6IG51bWJlcltdID0gW107XG4gICAgICBsZXQgcmFuZDogbnVtYmVyO1xuICAgICAgZm9yIChsZXQgZGlmID0gMDsgZGlmIDwgdGhpcy5kaWZmaWN1bHR5OyBkaWYrKykge1xuICAgICAgICBkbyB7XG4gICAgICAgICAgcmFuZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuZ2FtZVR5cGUpO1xuICAgICAgICB9IHdoaWxlIChtYXNrUG9zaXRpb25zLmluY2x1ZGVzKHJhbmQpKTtcbiAgICAgICAgbWFza1Bvc2l0aW9ucy5wdXNoKHJhbmQpO1xuICAgICAgfVxuICAgICAgLy8gbWFza3MgY2VsbHMgaW4gZ3JpZFxuICAgICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgdGhpcy5nYW1lVHlwZTsgY29sKyspIHtcbiAgICAgICAgaWYgKG1hc2tQb3NpdGlvbnMuaW5jbHVkZXMoY29sKSkge1xuICAgICAgICAgIGNvbnN0IHBvcyA9XG4gICAgICAgICAgICAvLyBjZWxsIGl0ZXJhdG9yXG4gICAgICAgICAgICBjb2wgK1xuICAgICAgICAgICAgKHRoaXMuZ2FtZVR5cGUgLSB0aGlzLnJhdGlvKSAqIE1hdGguZmxvb3IoY29sIC8gdGhpcy5yYXRpbykgK1xuICAgICAgICAgICAgLy8gZ3JpZCBpdGVyYXRvclxuICAgICAgICAgICAgZ3JpZCAqIHRoaXMucmF0aW8gK1xuICAgICAgICAgICAgLy8gcm93cyBvZiBncmlkcyBpdGVyYXRvclxuICAgICAgICAgICAgTWF0aC5mbG9vcihncmlkIC8gdGhpcy5yYXRpbykgKiB0aGlzLmdhbWVUeXBlICogKHRoaXMucmF0aW8gLSAxKTtcbiAgICAgICAgICBhcnJbcG9zXSA9IDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGFycjtcbiAgfTtcblxuICBwcml2YXRlIGdlbmVyYXRlID0gKCkgPT4ge1xuICAgIGNvbnN0IG1hdHJpeDogbnVtYmVyW10gPSBjb21wb3NlKFxuICAgICAgdGhpcy5zaHVmZmxlUm93c0luR3JpZCxcbiAgICAgIHRoaXMuc2h1ZmZsZUNvbHVtbnNJbkdyaWQsXG4gICAgICB0aGlzLnNodWZmbGVDb2x1bW5zLFxuICAgICAgdGhpcy5zaHVmZmxlUGFpcnNcbiAgICApKHRoaXMuY3JlYXRlVGVtcGxhdGUoKSk7XG4gICAgY29uc3QgbWFzayA9IHRoaXMubWFza0dhbWUobWF0cml4KTtcblxuICAgIHJldHVybiB7IG1hdHJpeCwgbWFzayB9O1xuICB9O1xufVxuIiwiLyoqXG4gKiBIeXBlcnRleHQgVHJhbnNmZXIgUHJvdG9jb2wgKEhUVFApIHJlc3BvbnNlIHN0YXR1cyBjb2Rlcy5cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpc3Rfb2ZfSFRUUF9zdGF0dXNfY29kZXN9XG4gKi9cbmV4cG9ydCBlbnVtIEhUVFBTdGF0dXNDb2RlIHtcbiAgLyoqXG4gICAqIFRoZSBzZXJ2ZXIgaGFzIHJlY2VpdmVkIHRoZSByZXF1ZXN0IGhlYWRlcnMgYW5kIHRoZSBjbGllbnQgc2hvdWxkIHByb2NlZWQgdG8gc2VuZCB0aGUgcmVxdWVzdCBib2R5XG4gICAqIChpbiB0aGUgY2FzZSBvZiBhIHJlcXVlc3QgZm9yIHdoaWNoIGEgYm9keSBuZWVkcyB0byBiZSBzZW50OyBmb3IgZXhhbXBsZSwgYSBQT1NUIHJlcXVlc3QpLlxuICAgKiBTZW5kaW5nIGEgbGFyZ2UgcmVxdWVzdCBib2R5IHRvIGEgc2VydmVyIGFmdGVyIGEgcmVxdWVzdCBoYXMgYmVlbiByZWplY3RlZCBmb3IgaW5hcHByb3ByaWF0ZSBoZWFkZXJzIHdvdWxkIGJlIGluZWZmaWNpZW50LlxuICAgKiBUbyBoYXZlIGEgc2VydmVyIGNoZWNrIHRoZSByZXF1ZXN0J3MgaGVhZGVycywgYSBjbGllbnQgbXVzdCBzZW5kIEV4cGVjdDogMTAwLWNvbnRpbnVlIGFzIGEgaGVhZGVyIGluIGl0cyBpbml0aWFsIHJlcXVlc3RcbiAgICogYW5kIHJlY2VpdmUgYSAxMDAgQ29udGludWUgc3RhdHVzIGNvZGUgaW4gcmVzcG9uc2UgYmVmb3JlIHNlbmRpbmcgdGhlIGJvZHkuIFRoZSByZXNwb25zZSA0MTcgRXhwZWN0YXRpb24gRmFpbGVkIGluZGljYXRlcyB0aGUgcmVxdWVzdCBzaG91bGQgbm90IGJlIGNvbnRpbnVlZC5cbiAgICovXG4gIENPTlRJTlVFID0gMTAwLFxuXG4gIC8qKlxuICAgKiBUaGUgcmVxdWVzdGVyIGhhcyBhc2tlZCB0aGUgc2VydmVyIHRvIHN3aXRjaCBwcm90b2NvbHMgYW5kIHRoZSBzZXJ2ZXIgaGFzIGFncmVlZCB0byBkbyBzby5cbiAgICovXG4gIFNXSVRDSElOR19QUk9UT0NPTFMgPSAxMDEsXG5cbiAgLyoqXG4gICAqIEEgV2ViREFWIHJlcXVlc3QgbWF5IGNvbnRhaW4gbWFueSBzdWItcmVxdWVzdHMgaW52b2x2aW5nIGZpbGUgb3BlcmF0aW9ucywgcmVxdWlyaW5nIGEgbG9uZyB0aW1lIHRvIGNvbXBsZXRlIHRoZSByZXF1ZXN0LlxuICAgKiBUaGlzIGNvZGUgaW5kaWNhdGVzIHRoYXQgdGhlIHNlcnZlciBoYXMgcmVjZWl2ZWQgYW5kIGlzIHByb2Nlc3NpbmcgdGhlIHJlcXVlc3QsIGJ1dCBubyByZXNwb25zZSBpcyBhdmFpbGFibGUgeWV0LlxuICAgKiBUaGlzIHByZXZlbnRzIHRoZSBjbGllbnQgZnJvbSB0aW1pbmcgb3V0IGFuZCBhc3N1bWluZyB0aGUgcmVxdWVzdCB3YXMgbG9zdC5cbiAgICovXG4gIFBST0NFU1NJTkcgPSAxMDIsXG5cbiAgLyoqXG4gICAqIFN0YW5kYXJkIHJlc3BvbnNlIGZvciBzdWNjZXNzZnVsIEhUVFAgcmVxdWVzdHMuXG4gICAqIFRoZSBhY3R1YWwgcmVzcG9uc2Ugd2lsbCBkZXBlbmQgb24gdGhlIHJlcXVlc3QgbWV0aG9kIHVzZWQuXG4gICAqIEluIGEgR0VUIHJlcXVlc3QsIHRoZSByZXNwb25zZSB3aWxsIGNvbnRhaW4gYW4gZW50aXR5IGNvcnJlc3BvbmRpbmcgdG8gdGhlIHJlcXVlc3RlZCByZXNvdXJjZS5cbiAgICogSW4gYSBQT1NUIHJlcXVlc3QsIHRoZSByZXNwb25zZSB3aWxsIGNvbnRhaW4gYW4gZW50aXR5IGRlc2NyaWJpbmcgb3IgY29udGFpbmluZyB0aGUgcmVzdWx0IG9mIHRoZSBhY3Rpb24uXG4gICAqL1xuICBPSyA9IDIwMCxcblxuICAvKipcbiAgICogVGhlIHJlcXVlc3QgaGFzIGJlZW4gZnVsZmlsbGVkLCByZXN1bHRpbmcgaW4gdGhlIGNyZWF0aW9uIG9mIGEgbmV3IHJlc291cmNlLlxuICAgKi9cbiAgQ1JFQVRFRCA9IDIwMSxcblxuICAvKipcbiAgICogVGhlIHJlcXVlc3QgaGFzIGJlZW4gYWNjZXB0ZWQgZm9yIHByb2Nlc3NpbmcsIGJ1dCB0aGUgcHJvY2Vzc2luZyBoYXMgbm90IGJlZW4gY29tcGxldGVkLlxuICAgKiBUaGUgcmVxdWVzdCBtaWdodCBvciBtaWdodCBub3QgYmUgZXZlbnR1YWxseSBhY3RlZCB1cG9uLCBhbmQgbWF5IGJlIGRpc2FsbG93ZWQgd2hlbiBwcm9jZXNzaW5nIG9jY3Vycy5cbiAgICovXG4gIEFDQ0VQVEVEID0gMjAyLFxuXG4gIC8qKlxuICAgKiBTSU5DRSBIVFRQLzEuMVxuICAgKiBUaGUgc2VydmVyIGlzIGEgdHJhbnNmb3JtaW5nIHByb3h5IHRoYXQgcmVjZWl2ZWQgYSAyMDAgT0sgZnJvbSBpdHMgb3JpZ2luLFxuICAgKiBidXQgaXMgcmV0dXJuaW5nIGEgbW9kaWZpZWQgdmVyc2lvbiBvZiB0aGUgb3JpZ2luJ3MgcmVzcG9uc2UuXG4gICAqL1xuICBOT05fQVVUSE9SSVRBVElWRV9JTkZPUk1BVElPTiA9IDIwMyxcblxuICAvKipcbiAgICogVGhlIHNlcnZlciBzdWNjZXNzZnVsbHkgcHJvY2Vzc2VkIHRoZSByZXF1ZXN0IGFuZCBpcyBub3QgcmV0dXJuaW5nIGFueSBjb250ZW50LlxuICAgKi9cbiAgTk9fQ09OVEVOVCA9IDIwNCxcblxuICAvKipcbiAgICogVGhlIHNlcnZlciBzdWNjZXNzZnVsbHkgcHJvY2Vzc2VkIHRoZSByZXF1ZXN0LCBidXQgaXMgbm90IHJldHVybmluZyBhbnkgY29udGVudC5cbiAgICogVW5saWtlIGEgMjA0IHJlc3BvbnNlLCB0aGlzIHJlc3BvbnNlIHJlcXVpcmVzIHRoYXQgdGhlIHJlcXVlc3RlciByZXNldCB0aGUgZG9jdW1lbnQgdmlldy5cbiAgICovXG4gIFJFU0VUX0NPTlRFTlQgPSAyMDUsXG5cbiAgLyoqXG4gICAqIFRoZSBzZXJ2ZXIgaXMgZGVsaXZlcmluZyBvbmx5IHBhcnQgb2YgdGhlIHJlc291cmNlIChieXRlIHNlcnZpbmcpIGR1ZSB0byBhIHJhbmdlIGhlYWRlciBzZW50IGJ5IHRoZSBjbGllbnQuXG4gICAqIFRoZSByYW5nZSBoZWFkZXIgaXMgdXNlZCBieSBIVFRQIGNsaWVudHMgdG8gZW5hYmxlIHJlc3VtaW5nIG9mIGludGVycnVwdGVkIGRvd25sb2FkcyxcbiAgICogb3Igc3BsaXQgYSBkb3dubG9hZCBpbnRvIG11bHRpcGxlIHNpbXVsdGFuZW91cyBzdHJlYW1zLlxuICAgKi9cbiAgUEFSVElBTF9DT05URU5UID0gMjA2LFxuXG4gIC8qKlxuICAgKiBUaGUgbWVzc2FnZSBib2R5IHRoYXQgZm9sbG93cyBpcyBhbiBYTUwgbWVzc2FnZSBhbmQgY2FuIGNvbnRhaW4gYSBudW1iZXIgb2Ygc2VwYXJhdGUgcmVzcG9uc2UgY29kZXMsXG4gICAqIGRlcGVuZGluZyBvbiBob3cgbWFueSBzdWItcmVxdWVzdHMgd2VyZSBtYWRlLlxuICAgKi9cbiAgTVVMVElfU1RBVFVTID0gMjA3LFxuXG4gIC8qKlxuICAgKiBUaGUgbWVtYmVycyBvZiBhIERBViBiaW5kaW5nIGhhdmUgYWxyZWFkeSBiZWVuIGVudW1lcmF0ZWQgaW4gYSBwcmVjZWRpbmcgcGFydCBvZiB0aGUgKG11bHRpc3RhdHVzKSByZXNwb25zZSxcbiAgICogYW5kIGFyZSBub3QgYmVpbmcgaW5jbHVkZWQgYWdhaW4uXG4gICAqL1xuICBBTFJFQURZX1JFUE9SVEVEID0gMjA4LFxuXG4gIC8qKlxuICAgKiBUaGUgc2VydmVyIGhhcyBmdWxmaWxsZWQgYSByZXF1ZXN0IGZvciB0aGUgcmVzb3VyY2UsXG4gICAqIGFuZCB0aGUgcmVzcG9uc2UgaXMgYSByZXByZXNlbnRhdGlvbiBvZiB0aGUgcmVzdWx0IG9mIG9uZSBvciBtb3JlIGluc3RhbmNlLW1hbmlwdWxhdGlvbnMgYXBwbGllZCB0byB0aGUgY3VycmVudCBpbnN0YW5jZS5cbiAgICovXG4gIElNX1VTRUQgPSAyMjYsXG5cbiAgLyoqXG4gICAqIEluZGljYXRlcyBtdWx0aXBsZSBvcHRpb25zIGZvciB0aGUgcmVzb3VyY2UgZnJvbSB3aGljaCB0aGUgY2xpZW50IG1heSBjaG9vc2UgKHZpYSBhZ2VudC1kcml2ZW4gY29udGVudCBuZWdvdGlhdGlvbikuXG4gICAqIEZvciBleGFtcGxlLCB0aGlzIGNvZGUgY291bGQgYmUgdXNlZCB0byBwcmVzZW50IG11bHRpcGxlIHZpZGVvIGZvcm1hdCBvcHRpb25zLFxuICAgKiB0byBsaXN0IGZpbGVzIHdpdGggZGlmZmVyZW50IGZpbGVuYW1lIGV4dGVuc2lvbnMsIG9yIHRvIHN1Z2dlc3Qgd29yZC1zZW5zZSBkaXNhbWJpZ3VhdGlvbi5cbiAgICovXG4gIE1VTFRJUExFX0NIT0lDRVMgPSAzMDAsXG5cbiAgLyoqXG4gICAqIFRoaXMgYW5kIGFsbCBmdXR1cmUgcmVxdWVzdHMgc2hvdWxkIGJlIGRpcmVjdGVkIHRvIHRoZSBnaXZlbiBVUkkuXG4gICAqL1xuICBNT1ZFRF9QRVJNQU5FTlRMWSA9IDMwMSxcblxuICAvKipcbiAgICogVGhpcyBpcyBhbiBleGFtcGxlIG9mIGluZHVzdHJ5IHByYWN0aWNlIGNvbnRyYWRpY3RpbmcgdGhlIHN0YW5kYXJkLlxuICAgKiBUaGUgSFRUUC8xLjAgc3BlY2lmaWNhdGlvbiAoUkZDIDE5NDUpIHJlcXVpcmVkIHRoZSBjbGllbnQgdG8gcGVyZm9ybSBhIHRlbXBvcmFyeSByZWRpcmVjdFxuICAgKiAodGhlIG9yaWdpbmFsIGRlc2NyaWJpbmcgcGhyYXNlIHdhcyBcIk1vdmVkIFRlbXBvcmFyaWx5XCIpLCBidXQgcG9wdWxhciBicm93c2VycyBpbXBsZW1lbnRlZCAzMDJcbiAgICogd2l0aCB0aGUgZnVuY3Rpb25hbGl0eSBvZiBhIDMwMyBTZWUgT3RoZXIuIFRoZXJlZm9yZSwgSFRUUC8xLjEgYWRkZWQgc3RhdHVzIGNvZGVzIDMwMyBhbmQgMzA3XG4gICAqIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gdGhlIHR3byBiZWhhdmlvdXJzLiBIb3dldmVyLCBzb21lIFdlYiBhcHBsaWNhdGlvbnMgYW5kIGZyYW1ld29ya3NcbiAgICogdXNlIHRoZSAzMDIgc3RhdHVzIGNvZGUgYXMgaWYgaXQgd2VyZSB0aGUgMzAzLlxuICAgKi9cbiAgRk9VTkQgPSAzMDIsXG5cbiAgLyoqXG4gICAqIFNJTkNFIEhUVFAvMS4xXG4gICAqIFRoZSByZXNwb25zZSB0byB0aGUgcmVxdWVzdCBjYW4gYmUgZm91bmQgdW5kZXIgYW5vdGhlciBVUkkgdXNpbmcgYSBHRVQgbWV0aG9kLlxuICAgKiBXaGVuIHJlY2VpdmVkIGluIHJlc3BvbnNlIHRvIGEgUE9TVCAob3IgUFVUL0RFTEVURSksIHRoZSBjbGllbnQgc2hvdWxkIHByZXN1bWUgdGhhdFxuICAgKiB0aGUgc2VydmVyIGhhcyByZWNlaXZlZCB0aGUgZGF0YSBhbmQgc2hvdWxkIGlzc3VlIGEgcmVkaXJlY3Qgd2l0aCBhIHNlcGFyYXRlIEdFVCBtZXNzYWdlLlxuICAgKi9cbiAgU0VFX09USEVSID0gMzAzLFxuXG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgcmVzb3VyY2UgaGFzIG5vdCBiZWVuIG1vZGlmaWVkIHNpbmNlIHRoZSB2ZXJzaW9uIHNwZWNpZmllZCBieSB0aGUgcmVxdWVzdCBoZWFkZXJzIElmLU1vZGlmaWVkLVNpbmNlIG9yIElmLU5vbmUtTWF0Y2guXG4gICAqIEluIHN1Y2ggY2FzZSwgdGhlcmUgaXMgbm8gbmVlZCB0byByZXRyYW5zbWl0IHRoZSByZXNvdXJjZSBzaW5jZSB0aGUgY2xpZW50IHN0aWxsIGhhcyBhIHByZXZpb3VzbHktZG93bmxvYWRlZCBjb3B5LlxuICAgKi9cbiAgTk9UX01PRElGSUVEID0gMzA0LFxuXG4gIC8qKlxuICAgKiBTSU5DRSBIVFRQLzEuMVxuICAgKiBUaGUgcmVxdWVzdGVkIHJlc291cmNlIGlzIGF2YWlsYWJsZSBvbmx5IHRocm91Z2ggYSBwcm94eSwgdGhlIGFkZHJlc3MgZm9yIHdoaWNoIGlzIHByb3ZpZGVkIGluIHRoZSByZXNwb25zZS5cbiAgICogTWFueSBIVFRQIGNsaWVudHMgKHN1Y2ggYXMgTW96aWxsYSBhbmQgSW50ZXJuZXQgRXhwbG9yZXIpIGRvIG5vdCBjb3JyZWN0bHkgaGFuZGxlIHJlc3BvbnNlcyB3aXRoIHRoaXMgc3RhdHVzIGNvZGUsIHByaW1hcmlseSBmb3Igc2VjdXJpdHkgcmVhc29ucy5cbiAgICovXG4gIFVTRV9QUk9YWSA9IDMwNSxcblxuICAvKipcbiAgICogTm8gbG9uZ2VyIHVzZWQuIE9yaWdpbmFsbHkgbWVhbnQgXCJTdWJzZXF1ZW50IHJlcXVlc3RzIHNob3VsZCB1c2UgdGhlIHNwZWNpZmllZCBwcm94eS5cIlxuICAgKi9cbiAgU1dJVENIX1BST1hZID0gMzA2LFxuXG4gIC8qKlxuICAgKiBTSU5DRSBIVFRQLzEuMVxuICAgKiBJbiB0aGlzIGNhc2UsIHRoZSByZXF1ZXN0IHNob3VsZCBiZSByZXBlYXRlZCB3aXRoIGFub3RoZXIgVVJJOyBob3dldmVyLCBmdXR1cmUgcmVxdWVzdHMgc2hvdWxkIHN0aWxsIHVzZSB0aGUgb3JpZ2luYWwgVVJJLlxuICAgKiBJbiBjb250cmFzdCB0byBob3cgMzAyIHdhcyBoaXN0b3JpY2FsbHkgaW1wbGVtZW50ZWQsIHRoZSByZXF1ZXN0IG1ldGhvZCBpcyBub3QgYWxsb3dlZCB0byBiZSBjaGFuZ2VkIHdoZW4gcmVpc3N1aW5nIHRoZSBvcmlnaW5hbCByZXF1ZXN0LlxuICAgKiBGb3IgZXhhbXBsZSwgYSBQT1NUIHJlcXVlc3Qgc2hvdWxkIGJlIHJlcGVhdGVkIHVzaW5nIGFub3RoZXIgUE9TVCByZXF1ZXN0LlxuICAgKi9cbiAgVEVNUE9SQVJZX1JFRElSRUNUID0gMzA3LFxuXG4gIC8qKlxuICAgKiBUaGUgcmVxdWVzdCBhbmQgYWxsIGZ1dHVyZSByZXF1ZXN0cyBzaG91bGQgYmUgcmVwZWF0ZWQgdXNpbmcgYW5vdGhlciBVUkkuXG4gICAqIDMwNyBhbmQgMzA4IHBhcmFsbGVsIHRoZSBiZWhhdmlvcnMgb2YgMzAyIGFuZCAzMDEsIGJ1dCBkbyBub3QgYWxsb3cgdGhlIEhUVFAgbWV0aG9kIHRvIGNoYW5nZS5cbiAgICogU28sIGZvciBleGFtcGxlLCBzdWJtaXR0aW5nIGEgZm9ybSB0byBhIHBlcm1hbmVudGx5IHJlZGlyZWN0ZWQgcmVzb3VyY2UgbWF5IGNvbnRpbnVlIHNtb290aGx5LlxuICAgKi9cbiAgUEVSTUFORU5UX1JFRElSRUNUID0gMzA4LFxuXG4gIC8qKlxuICAgKiBUaGUgc2VydmVyIGNhbm5vdCBvciB3aWxsIG5vdCBwcm9jZXNzIHRoZSByZXF1ZXN0IGR1ZSB0byBhbiBhcHBhcmVudCBjbGllbnQgZXJyb3JcbiAgICogKGUuZy4sIG1hbGZvcm1lZCByZXF1ZXN0IHN5bnRheCwgdG9vIGxhcmdlIHNpemUsIGludmFsaWQgcmVxdWVzdCBtZXNzYWdlIGZyYW1pbmcsIG9yIGRlY2VwdGl2ZSByZXF1ZXN0IHJvdXRpbmcpLlxuICAgKi9cbiAgQkFEX1JFUVVFU1QgPSA0MDAsXG5cbiAgLyoqXG4gICAqIFNpbWlsYXIgdG8gNDAzIEZvcmJpZGRlbiwgYnV0IHNwZWNpZmljYWxseSBmb3IgdXNlIHdoZW4gYXV0aGVudGljYXRpb24gaXMgcmVxdWlyZWQgYW5kIGhhcyBmYWlsZWQgb3IgaGFzIG5vdCB5ZXRcbiAgICogYmVlbiBwcm92aWRlZC4gVGhlIHJlc3BvbnNlIG11c3QgaW5jbHVkZSBhIFdXVy1BdXRoZW50aWNhdGUgaGVhZGVyIGZpZWxkIGNvbnRhaW5pbmcgYSBjaGFsbGVuZ2UgYXBwbGljYWJsZSB0byB0aGVcbiAgICogcmVxdWVzdGVkIHJlc291cmNlLiBTZWUgQmFzaWMgYWNjZXNzIGF1dGhlbnRpY2F0aW9uIGFuZCBEaWdlc3QgYWNjZXNzIGF1dGhlbnRpY2F0aW9uLiA0MDEgc2VtYW50aWNhbGx5IG1lYW5zXG4gICAqIFwidW5hdXRoZW50aWNhdGVkXCIsaS5lLiB0aGUgdXNlciBkb2VzIG5vdCBoYXZlIHRoZSBuZWNlc3NhcnkgY3JlZGVudGlhbHMuXG4gICAqL1xuICBVTkFVVEhPUklaRUQgPSA0MDEsXG5cbiAgLyoqXG4gICAqIFJlc2VydmVkIGZvciBmdXR1cmUgdXNlLiBUaGUgb3JpZ2luYWwgaW50ZW50aW9uIHdhcyB0aGF0IHRoaXMgY29kZSBtaWdodCBiZSB1c2VkIGFzIHBhcnQgb2Ygc29tZSBmb3JtIG9mIGRpZ2l0YWxcbiAgICogY2FzaCBvciBtaWNybyBwYXltZW50IHNjaGVtZSwgYnV0IHRoYXQgaGFzIG5vdCBoYXBwZW5lZCwgYW5kIHRoaXMgY29kZSBpcyBub3QgdXN1YWxseSB1c2VkLlxuICAgKiBHb29nbGUgRGV2ZWxvcGVycyBBUEkgdXNlcyB0aGlzIHN0YXR1cyBpZiBhIHBhcnRpY3VsYXIgZGV2ZWxvcGVyIGhhcyBleGNlZWRlZCB0aGUgZGFpbHkgbGltaXQgb24gcmVxdWVzdHMuXG4gICAqL1xuICBQQVlNRU5UX1JFUVVJUkVEID0gNDAyLFxuXG4gIC8qKlxuICAgKiBUaGUgcmVxdWVzdCB3YXMgdmFsaWQsIGJ1dCB0aGUgc2VydmVyIGlzIHJlZnVzaW5nIGFjdGlvbi5cbiAgICogVGhlIHVzZXIgbWlnaHQgbm90IGhhdmUgdGhlIG5lY2Vzc2FyeSBwZXJtaXNzaW9ucyBmb3IgYSByZXNvdXJjZS5cbiAgICovXG4gIEZPUkJJRERFTiA9IDQwMyxcblxuICAvKipcbiAgICogVGhlIHJlcXVlc3RlZCByZXNvdXJjZSBjb3VsZCBub3QgYmUgZm91bmQgYnV0IG1heSBiZSBhdmFpbGFibGUgaW4gdGhlIGZ1dHVyZS5cbiAgICogU3Vic2VxdWVudCByZXF1ZXN0cyBieSB0aGUgY2xpZW50IGFyZSBwZXJtaXNzaWJsZS5cbiAgICovXG4gIE5PVF9GT1VORCA9IDQwNCxcblxuICAvKipcbiAgICogQSByZXF1ZXN0IG1ldGhvZCBpcyBub3Qgc3VwcG9ydGVkIGZvciB0aGUgcmVxdWVzdGVkIHJlc291cmNlO1xuICAgKiBmb3IgZXhhbXBsZSwgYSBHRVQgcmVxdWVzdCBvbiBhIGZvcm0gdGhhdCByZXF1aXJlcyBkYXRhIHRvIGJlIHByZXNlbnRlZCB2aWEgUE9TVCwgb3IgYSBQVVQgcmVxdWVzdCBvbiBhIHJlYWQtb25seSByZXNvdXJjZS5cbiAgICovXG4gIE1FVEhPRF9OT1RfQUxMT1dFRCA9IDQwNSxcblxuICAvKipcbiAgICogVGhlIHJlcXVlc3RlZCByZXNvdXJjZSBpcyBjYXBhYmxlIG9mIGdlbmVyYXRpbmcgb25seSBjb250ZW50IG5vdCBhY2NlcHRhYmxlIGFjY29yZGluZyB0byB0aGUgQWNjZXB0IGhlYWRlcnMgc2VudCBpbiB0aGUgcmVxdWVzdC5cbiAgICovXG4gIE5PVF9BQ0NFUFRBQkxFID0gNDA2LFxuXG4gIC8qKlxuICAgKiBUaGUgY2xpZW50IG11c3QgZmlyc3QgYXV0aGVudGljYXRlIGl0c2VsZiB3aXRoIHRoZSBwcm94eS5cbiAgICovXG4gIFBST1hZX0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEID0gNDA3LFxuXG4gIC8qKlxuICAgKiBUaGUgc2VydmVyIHRpbWVkIG91dCB3YWl0aW5nIGZvciB0aGUgcmVxdWVzdC5cbiAgICogQWNjb3JkaW5nIHRvIEhUVFAgc3BlY2lmaWNhdGlvbnM6XG4gICAqIFwiVGhlIGNsaWVudCBkaWQgbm90IHByb2R1Y2UgYSByZXF1ZXN0IHdpdGhpbiB0aGUgdGltZSB0aGF0IHRoZSBzZXJ2ZXIgd2FzIHByZXBhcmVkIHRvIHdhaXQuIFRoZSBjbGllbnQgTUFZIHJlcGVhdCB0aGUgcmVxdWVzdCB3aXRob3V0IG1vZGlmaWNhdGlvbnMgYXQgYW55IGxhdGVyIHRpbWUuXCJcbiAgICovXG4gIFJFUVVFU1RfVElNRU9VVCA9IDQwOCxcblxuICAvKipcbiAgICogSW5kaWNhdGVzIHRoYXQgdGhlIHJlcXVlc3QgY291bGQgbm90IGJlIHByb2Nlc3NlZCBiZWNhdXNlIG9mIGNvbmZsaWN0IGluIHRoZSByZXF1ZXN0LFxuICAgKiBzdWNoIGFzIGFuIGVkaXQgY29uZmxpY3QgYmV0d2VlbiBtdWx0aXBsZSBzaW11bHRhbmVvdXMgdXBkYXRlcy5cbiAgICovXG4gIENPTkZMSUNUID0gNDA5LFxuXG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgcmVzb3VyY2UgcmVxdWVzdGVkIGlzIG5vIGxvbmdlciBhdmFpbGFibGUgYW5kIHdpbGwgbm90IGJlIGF2YWlsYWJsZSBhZ2Fpbi5cbiAgICogVGhpcyBzaG91bGQgYmUgdXNlZCB3aGVuIGEgcmVzb3VyY2UgaGFzIGJlZW4gaW50ZW50aW9uYWxseSByZW1vdmVkIGFuZCB0aGUgcmVzb3VyY2Ugc2hvdWxkIGJlIHB1cmdlZC5cbiAgICogVXBvbiByZWNlaXZpbmcgYSA0MTAgc3RhdHVzIGNvZGUsIHRoZSBjbGllbnQgc2hvdWxkIG5vdCByZXF1ZXN0IHRoZSByZXNvdXJjZSBpbiB0aGUgZnV0dXJlLlxuICAgKiBDbGllbnRzIHN1Y2ggYXMgc2VhcmNoIGVuZ2luZXMgc2hvdWxkIHJlbW92ZSB0aGUgcmVzb3VyY2UgZnJvbSB0aGVpciBpbmRpY2VzLlxuICAgKiBNb3N0IHVzZSBjYXNlcyBkbyBub3QgcmVxdWlyZSBjbGllbnRzIGFuZCBzZWFyY2ggZW5naW5lcyB0byBwdXJnZSB0aGUgcmVzb3VyY2UsIGFuZCBhIFwiNDA0IE5vdCBGb3VuZFwiIG1heSBiZSB1c2VkIGluc3RlYWQuXG4gICAqL1xuICBHT05FID0gNDEwLFxuXG4gIC8qKlxuICAgKiBUaGUgcmVxdWVzdCBkaWQgbm90IHNwZWNpZnkgdGhlIGxlbmd0aCBvZiBpdHMgY29udGVudCwgd2hpY2ggaXMgcmVxdWlyZWQgYnkgdGhlIHJlcXVlc3RlZCByZXNvdXJjZS5cbiAgICovXG4gIExFTkdUSF9SRVFVSVJFRCA9IDQxMSxcblxuICAvKipcbiAgICogVGhlIHNlcnZlciBkb2VzIG5vdCBtZWV0IG9uZSBvZiB0aGUgcHJlY29uZGl0aW9ucyB0aGF0IHRoZSByZXF1ZXN0ZXIgcHV0IG9uIHRoZSByZXF1ZXN0LlxuICAgKi9cbiAgUFJFQ09ORElUSU9OX0ZBSUxFRCA9IDQxMixcblxuICAvKipcbiAgICogVGhlIHJlcXVlc3QgaXMgbGFyZ2VyIHRoYW4gdGhlIHNlcnZlciBpcyB3aWxsaW5nIG9yIGFibGUgdG8gcHJvY2Vzcy4gUHJldmlvdXNseSBjYWxsZWQgXCJSZXF1ZXN0IEVudGl0eSBUb28gTGFyZ2VcIi5cbiAgICovXG4gIFBBWUxPQURfVE9PX0xBUkdFID0gNDEzLFxuXG4gIC8qKlxuICAgKiBUaGUgVVJJIHByb3ZpZGVkIHdhcyB0b28gbG9uZyBmb3IgdGhlIHNlcnZlciB0byBwcm9jZXNzLiBPZnRlbiB0aGUgcmVzdWx0IG9mIHRvbyBtdWNoIGRhdGEgYmVpbmcgZW5jb2RlZCBhcyBhIHF1ZXJ5LXN0cmluZyBvZiBhIEdFVCByZXF1ZXN0LFxuICAgKiBpbiB3aGljaCBjYXNlIGl0IHNob3VsZCBiZSBjb252ZXJ0ZWQgdG8gYSBQT1NUIHJlcXVlc3QuXG4gICAqIENhbGxlZCBcIlJlcXVlc3QtVVJJIFRvbyBMb25nXCIgcHJldmlvdXNseS5cbiAgICovXG4gIFVSSV9UT09fTE9ORyA9IDQxNCxcblxuICAvKipcbiAgICogVGhlIHJlcXVlc3QgZW50aXR5IGhhcyBhIG1lZGlhIHR5cGUgd2hpY2ggdGhlIHNlcnZlciBvciByZXNvdXJjZSBkb2VzIG5vdCBzdXBwb3J0LlxuICAgKiBGb3IgZXhhbXBsZSwgdGhlIGNsaWVudCB1cGxvYWRzIGFuIGltYWdlIGFzIGltYWdlL3N2Zyt4bWwsIGJ1dCB0aGUgc2VydmVyIHJlcXVpcmVzIHRoYXQgaW1hZ2VzIHVzZSBhIGRpZmZlcmVudCBmb3JtYXQuXG4gICAqL1xuICBVTlNVUFBPUlRFRF9NRURJQV9UWVBFID0gNDE1LFxuXG4gIC8qKlxuICAgKiBUaGUgY2xpZW50IGhhcyBhc2tlZCBmb3IgYSBwb3J0aW9uIG9mIHRoZSBmaWxlIChieXRlIHNlcnZpbmcpLCBidXQgdGhlIHNlcnZlciBjYW5ub3Qgc3VwcGx5IHRoYXQgcG9ydGlvbi5cbiAgICogRm9yIGV4YW1wbGUsIGlmIHRoZSBjbGllbnQgYXNrZWQgZm9yIGEgcGFydCBvZiB0aGUgZmlsZSB0aGF0IGxpZXMgYmV5b25kIHRoZSBlbmQgb2YgdGhlIGZpbGUuXG4gICAqIENhbGxlZCBcIlJlcXVlc3RlZCBSYW5nZSBOb3QgU2F0aXNmaWFibGVcIiBwcmV2aW91c2x5LlxuICAgKi9cbiAgUkFOR0VfTk9UX1NBVElTRklBQkxFID0gNDE2LFxuXG4gIC8qKlxuICAgKiBUaGUgc2VydmVyIGNhbm5vdCBtZWV0IHRoZSByZXF1aXJlbWVudHMgb2YgdGhlIEV4cGVjdCByZXF1ZXN0LWhlYWRlciBmaWVsZC5cbiAgICovXG4gIEVYUEVDVEFUSU9OX0ZBSUxFRCA9IDQxNyxcblxuICAvKipcbiAgICogVGhpcyBjb2RlIHdhcyBkZWZpbmVkIGluIDE5OTggYXMgb25lIG9mIHRoZSB0cmFkaXRpb25hbCBJRVRGIEFwcmlsIEZvb2xzJyBqb2tlcywgaW4gUkZDIDIzMjQsIEh5cGVyIFRleHQgQ29mZmVlIFBvdCBDb250cm9sIFByb3RvY29sLFxuICAgKiBhbmQgaXMgbm90IGV4cGVjdGVkIHRvIGJlIGltcGxlbWVudGVkIGJ5IGFjdHVhbCBIVFRQIHNlcnZlcnMuIFRoZSBSRkMgc3BlY2lmaWVzIHRoaXMgY29kZSBzaG91bGQgYmUgcmV0dXJuZWQgYnlcbiAgICogdGVhcG90cyByZXF1ZXN0ZWQgdG8gYnJldyBjb2ZmZWUuIFRoaXMgSFRUUCBzdGF0dXMgaXMgdXNlZCBhcyBhbiBFYXN0ZXIgZWdnIGluIHNvbWUgd2Vic2l0ZXMsIGluY2x1ZGluZyBHb29nbGUuY29tLlxuICAgKi9cbiAgSV9BTV9BX1RFQVBPVCA9IDQxOCxcblxuICAvKipcbiAgICogVGhlIHJlcXVlc3Qgd2FzIGRpcmVjdGVkIGF0IGEgc2VydmVyIHRoYXQgaXMgbm90IGFibGUgdG8gcHJvZHVjZSBhIHJlc3BvbnNlIChmb3IgZXhhbXBsZSBiZWNhdXNlIGEgY29ubmVjdGlvbiByZXVzZSkuXG4gICAqL1xuICBNSVNESVJFQ1RFRF9SRVFVRVNUID0gNDIxLFxuXG4gIC8qKlxuICAgKiBUaGUgcmVxdWVzdCB3YXMgd2VsbC1mb3JtZWQgYnV0IHdhcyB1bmFibGUgdG8gYmUgZm9sbG93ZWQgZHVlIHRvIHNlbWFudGljIGVycm9ycy5cbiAgICovXG4gIFVOUFJPQ0VTU0FCTEVfRU5USVRZID0gNDIyLFxuXG4gIC8qKlxuICAgKiBUaGUgcmVzb3VyY2UgdGhhdCBpcyBiZWluZyBhY2Nlc3NlZCBpcyBsb2NrZWQuXG4gICAqL1xuICBMT0NLRUQgPSA0MjMsXG5cbiAgLyoqXG4gICAqIFRoZSByZXF1ZXN0IGZhaWxlZCBkdWUgdG8gZmFpbHVyZSBvZiBhIHByZXZpb3VzIHJlcXVlc3QgKGUuZy4sIGEgUFJPUFBBVENIKS5cbiAgICovXG4gIEZBSUxFRF9ERVBFTkRFTkNZID0gNDI0LFxuXG4gIC8qKlxuICAgKiBUaGUgY2xpZW50IHNob3VsZCBzd2l0Y2ggdG8gYSBkaWZmZXJlbnQgcHJvdG9jb2wgc3VjaCBhcyBUTFMvMS4wLCBnaXZlbiBpbiB0aGUgVXBncmFkZSBoZWFkZXIgZmllbGQuXG4gICAqL1xuICBVUEdSQURFX1JFUVVJUkVEID0gNDI2LFxuXG4gIC8qKlxuICAgKiBUaGUgb3JpZ2luIHNlcnZlciByZXF1aXJlcyB0aGUgcmVxdWVzdCB0byBiZSBjb25kaXRpb25hbC5cbiAgICogSW50ZW5kZWQgdG8gcHJldmVudCBcInRoZSAnbG9zdCB1cGRhdGUnIHByb2JsZW0sIHdoZXJlIGEgY2xpZW50XG4gICAqIEdFVHMgYSByZXNvdXJjZSdzIHN0YXRlLCBtb2RpZmllcyBpdCwgYW5kIFBVVHMgaXQgYmFjayB0byB0aGUgc2VydmVyLFxuICAgKiB3aGVuIG1lYW53aGlsZSBhIHRoaXJkIHBhcnR5IGhhcyBtb2RpZmllZCB0aGUgc3RhdGUgb24gdGhlIHNlcnZlciwgbGVhZGluZyB0byBhIGNvbmZsaWN0LlwiXG4gICAqL1xuICBQUkVDT05ESVRJT05fUkVRVUlSRUQgPSA0MjgsXG5cbiAgLyoqXG4gICAqIFRoZSB1c2VyIGhhcyBzZW50IHRvbyBtYW55IHJlcXVlc3RzIGluIGEgZ2l2ZW4gYW1vdW50IG9mIHRpbWUuIEludGVuZGVkIGZvciB1c2Ugd2l0aCByYXRlLWxpbWl0aW5nIHNjaGVtZXMuXG4gICAqL1xuICBUT09fTUFOWV9SRVFVRVNUUyA9IDQyOSxcblxuICAvKipcbiAgICogVGhlIHNlcnZlciBpcyB1bndpbGxpbmcgdG8gcHJvY2VzcyB0aGUgcmVxdWVzdCBiZWNhdXNlIGVpdGhlciBhbiBpbmRpdmlkdWFsIGhlYWRlciBmaWVsZCxcbiAgICogb3IgYWxsIHRoZSBoZWFkZXIgZmllbGRzIGNvbGxlY3RpdmVseSwgYXJlIHRvbyBsYXJnZS5cbiAgICovXG4gIFJFUVVFU1RfSEVBREVSX0ZJRUxEU19UT09fTEFSR0UgPSA0MzEsXG5cbiAgLyoqXG4gICAqIEEgc2VydmVyIG9wZXJhdG9yIGhhcyByZWNlaXZlZCBhIGxlZ2FsIGRlbWFuZCB0byBkZW55IGFjY2VzcyB0byBhIHJlc291cmNlIG9yIHRvIGEgc2V0IG9mIHJlc291cmNlc1xuICAgKiB0aGF0IGluY2x1ZGVzIHRoZSByZXF1ZXN0ZWQgcmVzb3VyY2UuIFRoZSBjb2RlIDQ1MSB3YXMgY2hvc2VuIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBub3ZlbCBGYWhyZW5oZWl0IDQ1MS5cbiAgICovXG4gIFVOQVZBSUxBQkxFX0ZPUl9MRUdBTF9SRUFTT05TID0gNDUxLFxuXG4gIC8qKlxuICAgKiBBIGdlbmVyaWMgZXJyb3IgbWVzc2FnZSwgZ2l2ZW4gd2hlbiBhbiB1bmV4cGVjdGVkIGNvbmRpdGlvbiB3YXMgZW5jb3VudGVyZWQgYW5kIG5vIG1vcmUgc3BlY2lmaWMgbWVzc2FnZSBpcyBzdWl0YWJsZS5cbiAgICovXG4gIElOVEVSTkFMX1NFUlZFUl9FUlJPUiA9IDUwMCxcblxuICAvKipcbiAgICogVGhlIHNlcnZlciBlaXRoZXIgZG9lcyBub3QgcmVjb2duaXplIHRoZSByZXF1ZXN0IG1ldGhvZCwgb3IgaXQgbGFja3MgdGhlIGFiaWxpdHkgdG8gZnVsZmlsbCB0aGUgcmVxdWVzdC5cbiAgICogVXN1YWxseSB0aGlzIGltcGxpZXMgZnV0dXJlIGF2YWlsYWJpbGl0eSAoZS5nLiwgYSBuZXcgZmVhdHVyZSBvZiBhIHdlYi1zZXJ2aWNlIEFQSSkuXG4gICAqL1xuICBOT1RfSU1QTEVNRU5URUQgPSA1MDEsXG5cbiAgLyoqXG4gICAqIFRoZSBzZXJ2ZXIgd2FzIGFjdGluZyBhcyBhIGdhdGV3YXkgb3IgcHJveHkgYW5kIHJlY2VpdmVkIGFuIGludmFsaWQgcmVzcG9uc2UgZnJvbSB0aGUgdXBzdHJlYW0gc2VydmVyLlxuICAgKi9cbiAgQkFEX0dBVEVXQVkgPSA1MDIsXG5cbiAgLyoqXG4gICAqIFRoZSBzZXJ2ZXIgaXMgY3VycmVudGx5IHVuYXZhaWxhYmxlIChiZWNhdXNlIGl0IGlzIG92ZXJsb2FkZWQgb3IgZG93biBmb3IgbWFpbnRlbmFuY2UpLlxuICAgKiBHZW5lcmFsbHksIHRoaXMgaXMgYSB0ZW1wb3Jhcnkgc3RhdGUuXG4gICAqL1xuICBTRVJWSUNFX1VOQVZBSUxBQkxFID0gNTAzLFxuXG4gIC8qKlxuICAgKiBUaGUgc2VydmVyIHdhcyBhY3RpbmcgYXMgYSBnYXRld2F5IG9yIHByb3h5IGFuZCBkaWQgbm90IHJlY2VpdmUgYSB0aW1lbHkgcmVzcG9uc2UgZnJvbSB0aGUgdXBzdHJlYW0gc2VydmVyLlxuICAgKi9cbiAgR0FURVdBWV9USU1FT1VUID0gNTA0LFxuXG4gIC8qKlxuICAgKiBUaGUgc2VydmVyIGRvZXMgbm90IHN1cHBvcnQgdGhlIEhUVFAgcHJvdG9jb2wgdmVyc2lvbiB1c2VkIGluIHRoZSByZXF1ZXN0XG4gICAqL1xuICBIVFRQX1ZFUlNJT05fTk9UX1NVUFBPUlRFRCA9IDUwNSxcblxuICAvKipcbiAgICogVHJhbnNwYXJlbnQgY29udGVudCBuZWdvdGlhdGlvbiBmb3IgdGhlIHJlcXVlc3QgcmVzdWx0cyBpbiBhIGNpcmN1bGFyIHJlZmVyZW5jZS5cbiAgICovXG4gIFZBUklBTlRfQUxTT19ORUdPVElBVEVTID0gNTA2LFxuXG4gIC8qKlxuICAgKiBUaGUgc2VydmVyIGlzIHVuYWJsZSB0byBzdG9yZSB0aGUgcmVwcmVzZW50YXRpb24gbmVlZGVkIHRvIGNvbXBsZXRlIHRoZSByZXF1ZXN0LlxuICAgKi9cbiAgSU5TVUZGSUNJRU5UX1NUT1JBR0UgPSA1MDcsXG5cbiAgLyoqXG4gICAqIFRoZSBzZXJ2ZXIgZGV0ZWN0ZWQgYW4gaW5maW5pdGUgbG9vcCB3aGlsZSBwcm9jZXNzaW5nIHRoZSByZXF1ZXN0LlxuICAgKi9cbiAgTE9PUF9ERVRFQ1RFRCA9IDUwOCxcblxuICAvKipcbiAgICogRnVydGhlciBleHRlbnNpb25zIHRvIHRoZSByZXF1ZXN0IGFyZSByZXF1aXJlZCBmb3IgdGhlIHNlcnZlciB0byBmdWxmaWxsIGl0LlxuICAgKi9cbiAgTk9UX0VYVEVOREVEID0gNTEwLFxuXG4gIC8qKlxuICAgKiBUaGUgY2xpZW50IG5lZWRzIHRvIGF1dGhlbnRpY2F0ZSB0byBnYWluIG5ldHdvcmsgYWNjZXNzLlxuICAgKiBJbnRlbmRlZCBmb3IgdXNlIGJ5IGludGVyY2VwdGluZyBwcm94aWVzIHVzZWQgdG8gY29udHJvbCBhY2Nlc3MgdG8gdGhlIG5ldHdvcmsgKGUuZy4sIFwiY2FwdGl2ZSBwb3J0YWxzXCIgdXNlZFxuICAgKiB0byByZXF1aXJlIGFncmVlbWVudCB0byBUZXJtcyBvZiBTZXJ2aWNlIGJlZm9yZSBncmFudGluZyBmdWxsIEludGVybmV0IGFjY2VzcyB2aWEgYSBXaS1GaSBob3RzcG90KS5cbiAgICovXG4gIE5FVFdPUktfQVVUSEVOVElDQVRJT05fUkVRVUlSRUQgPSA1MTEsXG59XG4iLCJpbXBvcnQgYXhpb3MsIHsgQXhpb3NSZXF1ZXN0Q29uZmlnIH0gZnJvbSBcImF4aW9zXCI7XG5cbmNvbnN0IFNFUlZFUl9VUkwgPVxuICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCJcbiAgICA/IFwiaHR0cHM6Ly9kYW1wLXJlZnVnZS0xNTA5Mi5oZXJva3VhcHAuY29tXCJcbiAgICA6IFwiaHR0cDovL2xvY2FsaG9zdDo1MDAwXCI7XG5cbmV4cG9ydCBjb25zdCBSRVFVRVNUX1RJTUVPVVQgPSAxNTAwMDtcblxuZXhwb3J0IGNvbnN0IFVTRVJfRU5EUE9JTlQgPSBgJHtTRVJWRVJfVVJMfS91c2VyYDtcbmV4cG9ydCBjb25zdCBTQVZFX0dBTUVfRU5EUE9JTlQgPSBgJHtTRVJWRVJfVVJMfS9zYXZlR2FtZWA7XG5cbmNvbnN0IGNvbW1vbkhlYWRlcnMgPSB7XG4gIFwiQ2FjaGUtQ29udHJvbFwiOiBcIm5vLXN0b3JlLCBuby1jYWNoZVwiLFxufTtcblxuY29uc3QgY29tbW9uT3B0aW9uczogQXhpb3NSZXF1ZXN0Q29uZmlnID0ge1xuICBoZWFkZXJzOiBjb21tb25IZWFkZXJzLFxuICB0aW1lb3V0OiBSRVFVRVNUX1RJTUVPVVQsXG59O1xuXG5leHBvcnQgY29uc3QgaXNOZXR3b3JrRXJyb3IgPSAobWVzc2FnZTogc3RyaW5nKSA9PiBtZXNzYWdlID09PSBcIk5ldHdvcmsgRXJyb3JcIjtcblxuZXhwb3J0IGNvbnN0IHJlcXVlc3QgPSB7XG4gIGdldDogPFIgPSBhbnk+KHVybDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIGF4aW9zLmdldDxSPih1cmwsIGNvbW1vbk9wdGlvbnMpO1xuICB9LFxuICBwb3N0OiA8UiA9IGFueT4odXJsOiBzdHJpbmcsIGJvZHkgPSB7fSkgPT4ge1xuICAgIHJldHVybiBheGlvcy5wb3N0PFI+KHVybCwgYm9keSwgY29tbW9uT3B0aW9ucyk7XG4gIH0sXG4gIHB1dDogPFIgPSBhbnk+KHVybDogc3RyaW5nLCBib2R5ID0ge30pID0+IHtcbiAgICByZXR1cm4gYXhpb3MucHV0PFI+KHVybCwgYm9keSwgY29tbW9uT3B0aW9ucyk7XG4gIH0sXG4gIGRlbGV0ZTogPFIgPSBhbnk+KHVybDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIGF4aW9zLmRlbGV0ZTxSPih1cmwsIGNvbW1vbk9wdGlvbnMpO1xuICB9LFxufTtcbiIsImltcG9ydCB7XG4gIFVTRVJfRU5EUE9JTlQsXG4gIFNBVkVfR0FNRV9FTkRQT0lOVCxcbiAgcmVxdWVzdCxcbn0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3NlcnZlclwiO1xuaW1wb3J0IHsgVXNlckRhdGEgfSBmcm9tIFwiLi4vLi4vLi4vY29uc3RzXCI7XG5pbXBvcnQgeyBHYW1lIH0gZnJvbSBcIi4uLy4uLy4uL2dlbmVyYXRvci9nZW5lcmF0b3JcIjtcbmltcG9ydCB7IGdldFN0b3JhZ2VLZXksIFN0b3JhZ2VLZXlzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2xvY2FsU3RvcmFnZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVycm9yUmVzcG9uc2Uge1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIHN0YXR1czogbnVtYmVyO1xufVxuXG5leHBvcnQgY29uc3QgaXNFcnJvclJlc3BvbnNlID0gPEQ+KFxuICBkYXRhOiBEIHwgRXJyb3JSZXNwb25zZVxuKTogZGF0YSBpcyBFcnJvclJlc3BvbnNlID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gKGRhdGEgYXMgRXJyb3JSZXNwb25zZSkuc3RhdHVzICE9PSB1bmRlZmluZWQ7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyVXNlciA9ICgpID0+XG4gIHJlcXVlc3QucG9zdDxzdHJpbmcgfCBFcnJvclJlc3BvbnNlPihVU0VSX0VORFBPSU5UKTtcblxuZXhwb3J0IGNvbnN0IGdldFVzZXIgPSAoaWQ6IHN0cmluZykgPT5cbiAgcmVxdWVzdC5nZXQ8VXNlckRhdGEgfCBFcnJvclJlc3BvbnNlPihgJHtVU0VSX0VORFBPSU5UfS8ke2lkfWApO1xuXG5leHBvcnQgY29uc3Qgc2F2ZUdhbWUgPSAoY29uZmlnOiBPbWl0PEdhbWUsIFwic2h1ZmZsZVwiPiwgc3RhdGU6IHN0cmluZykgPT5cbiAgcmVxdWVzdC5wb3N0PG51bGwgfCBFcnJvclJlc3BvbnNlPihTQVZFX0dBTUVfRU5EUE9JTlQsIHtcbiAgICBjb25maWcsXG4gICAgc3RhdGUsXG4gICAgaWQ6IGdldFN0b3JhZ2VLZXkoU3RvcmFnZUtleXMuVXNlcklkKSxcbiAgfSk7XG4iLCJpbXBvcnQgeyBQYWdlLCBBY3Rpb25XaXRoUGF5bG9hZCwgQXBwVGh1bmssIEdhbWVDb25maWcgfSBmcm9tIFwiLi4vLi4vLi4vY29uc3RzXCI7XG5pbXBvcnQgeyBHYW1lIH0gZnJvbSBcIi4uLy4uLy4uL2dlbmVyYXRvci9nZW5lcmF0b3JcIjtcbmltcG9ydCB7IE1lbnVTZWN0aW9uIH0gZnJvbSBcIi4uLy4uL21lbnUtY29udGVudC90eXBlc1wiO1xuaW1wb3J0IHsgc2V0U3RvcmFnZUtleSwgU3RvcmFnZUtleXMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvbG9jYWxTdG9yYWdlXCI7XG5pbXBvcnQge1xuICByZWdpc3RlclVzZXIsXG4gIGlzRXJyb3JSZXNwb25zZSxcbiAgZ2V0VXNlcixcbiAgc2F2ZUdhbWUsXG4gIEVycm9yUmVzcG9uc2UsXG59IGZyb20gXCIuL3JlcXVlc3RzXCI7XG5pbXBvcnQgeyBIVFRQU3RhdHVzQ29kZSB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9lcnJvckNvZGVzXCI7XG5cbmV4cG9ydCBjb25zdCBTRVRfUEFHRSA9IFwiQGFwcC9TRVRfUEFHRVwiO1xuZXhwb3J0IGNvbnN0IFNFVF9DVVJSRU5UX0dBTUUgPSBcIkBhcHAvU0VUX0NVUlJFTlRfR0FNRVwiO1xuZXhwb3J0IGNvbnN0IFNFVF9MT0JCWV9JU19MT0FESU5HID0gXCJAYXBwL1NFVF9MT0JCWV9JU19MT0FESU5HXCI7XG5leHBvcnQgY29uc3QgU0VUX0xPQkJZX0hBU19FUlJPUiA9IFwiQGFwcC9TRVRfTE9CQllfSEFTX0VSUk9SXCI7XG5leHBvcnQgY29uc3QgU0VUX0xPQkJZX01FTlVfU0VDVElPTiA9IFwiQGFwcC9TRVRfTE9CQllfTUVOVV9TRUNUSU9OXCI7XG5leHBvcnQgY29uc3QgU0VUX0VSUk9SID0gXCJAYXBwL1NFVF9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IFJFTU9WRV9FUlJPUiA9IFwiQGFwcC9SRU1PVkVfRVJST1JcIjtcblxuZXhwb3J0IHR5cGUgU2V0UGFnZUFjdGlvbiA9IEFjdGlvbldpdGhQYXlsb2FkPHR5cGVvZiBTRVRfUEFHRSwgUGFnZT47XG5leHBvcnQgY29uc3Qgc2V0UGFnZSA9IChwYXlsb2FkOiBQYWdlKTogU2V0UGFnZUFjdGlvbiA9PiAoe1xuICB0eXBlOiBTRVRfUEFHRSxcbiAgcGF5bG9hZCxcbn0pO1xuXG5leHBvcnQgdHlwZSBTZXRDdXJyZW50R2FtZUFjdGlvbiA9IEFjdGlvbldpdGhQYXlsb2FkPFxuICB0eXBlb2YgU0VUX0NVUlJFTlRfR0FNRSxcbiAgR2FtZVxuPjtcbmV4cG9ydCBjb25zdCBzZXRDdXJyZW50R2FtZSA9IChwYXlsb2FkOiBHYW1lKTogU2V0Q3VycmVudEdhbWVBY3Rpb24gPT4gKHtcbiAgdHlwZTogU0VUX0NVUlJFTlRfR0FNRSxcbiAgcGF5bG9hZCxcbn0pO1xuXG5leHBvcnQgdHlwZSBTZXRMb2JieUlzTG9hZGluZ0FjdGlvbiA9IEFjdGlvbldpdGhQYXlsb2FkPFxuICB0eXBlb2YgU0VUX0xPQkJZX0lTX0xPQURJTkcsXG4gIGJvb2xlYW5cbj47XG5leHBvcnQgY29uc3Qgc2V0TG9iYnlJc0xvYWRpbmcgPSAoXG4gIHBheWxvYWQ6IGJvb2xlYW5cbik6IFNldExvYmJ5SXNMb2FkaW5nQWN0aW9uID0+ICh7XG4gIHR5cGU6IFNFVF9MT0JCWV9JU19MT0FESU5HLFxuICBwYXlsb2FkLFxufSk7XG5cbmV4cG9ydCB0eXBlIFNldExvYmJ5SGFzRXJyb3JBY3Rpb24gPSBBY3Rpb25XaXRoUGF5bG9hZDxcbiAgdHlwZW9mIFNFVF9MT0JCWV9IQVNfRVJST1IsXG4gIGJvb2xlYW5cbj47XG5leHBvcnQgY29uc3Qgc2V0TG9iYnlIYXNFcnJvciA9IChwYXlsb2FkOiBib29sZWFuKTogU2V0TG9iYnlIYXNFcnJvckFjdGlvbiA9PiAoe1xuICB0eXBlOiBTRVRfTE9CQllfSEFTX0VSUk9SLFxuICBwYXlsb2FkLFxufSk7XG5cbmV4cG9ydCB0eXBlIFNldExvYmJ5TWVudVNlY3Rpb25BY3Rpb24gPSBBY3Rpb25XaXRoUGF5bG9hZDxcbiAgdHlwZW9mIFNFVF9MT0JCWV9NRU5VX1NFQ1RJT04sXG4gIE1lbnVTZWN0aW9uIHwgdW5kZWZpbmVkXG4+O1xuZXhwb3J0IGNvbnN0IHNldExvYmJ5TWVudVNlY3Rpb24gPSAoXG4gIHBheWxvYWQ/OiBNZW51U2VjdGlvblxuKTogU2V0TG9iYnlNZW51U2VjdGlvbkFjdGlvbiA9PiAoe1xuICB0eXBlOiBTRVRfTE9CQllfTUVOVV9TRUNUSU9OLFxuICBwYXlsb2FkLFxufSk7XG5cbmV4cG9ydCB0eXBlIFNldEVycm9yQWN0aW9uID0gQWN0aW9uV2l0aFBheWxvYWQ8dHlwZW9mIFNFVF9FUlJPUiwgRXJyb3JSZXNwb25zZT47XG5leHBvcnQgY29uc3Qgc2V0RXJyb3IgPSAocGF5bG9hZDogRXJyb3IgfCBFcnJvclJlc3BvbnNlKTogU2V0RXJyb3JBY3Rpb24gPT4ge1xuICBjb25zdCBlcnJvciA9IHtcbiAgICBtZXNzYWdlOiBwYXlsb2FkLm1lc3NhZ2UgfHwgXCJVbmtub3duIGVycm9yIG9jY3VyZWQhXCIsXG4gICAgc3RhdHVzOlxuICAgICAgKHBheWxvYWQgYXMgRXJyb3JSZXNwb25zZSkuc3RhdHVzIHx8IEhUVFBTdGF0dXNDb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUixcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBTRVRfRVJST1IsXG4gICAgcGF5bG9hZDogZXJyb3IsXG4gIH07XG59O1xuXG5leHBvcnQgdHlwZSBSZW1vdmVFcnJvckFjdGlvbiA9IEFjdGlvbldpdGhQYXlsb2FkPFxuICB0eXBlb2YgUkVNT1ZFX0VSUk9SLFxuICBQaWNrPEVycm9yUmVzcG9uc2UsIFwibWVzc2FnZVwiPlxuPjtcbmV4cG9ydCBjb25zdCByZW1vdmVFcnJvciA9IChcbiAgcGF5bG9hZDogUGljazxFcnJvclJlc3BvbnNlLCBcIm1lc3NhZ2VcIj5cbik6IFJlbW92ZUVycm9yQWN0aW9uID0+ICh7XG4gIHR5cGU6IFJFTU9WRV9FUlJPUixcbiAgcGF5bG9hZCxcbn0pO1xuXG4vLyBUSFVOS1NcbmV4cG9ydCBjb25zdCBoYW5kbGVOZXdVc2VyID0gKCk6IEFwcFRodW5rID0+IGFzeW5jIGRpc3BhdGNoID0+IHtcbiAgZGlzcGF0Y2goc2V0TG9iYnlJc0xvYWRpbmcodHJ1ZSkpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCByZWdpc3RlclVzZXIoKTtcbiAgICBpZiAoaXNFcnJvclJlc3BvbnNlKGRhdGEpKSB7XG4gICAgICB0aHJvdyBkYXRhO1xuICAgIH1cbiAgICBkaXNwYXRjaChzZXRMb2JieUlzTG9hZGluZyhmYWxzZSkpO1xuICAgIHNldFN0b3JhZ2VLZXkoU3RvcmFnZUtleXMuVXNlcklkLCBkYXRhKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBkaXNwYXRjaChzZXRFcnJvcihlcnJvcikpO1xuICAgIGRpc3BhdGNoKHNldExvYmJ5SXNMb2FkaW5nKGZhbHNlKSk7XG4gICAgZGlzcGF0Y2goc2V0TG9iYnlIYXNFcnJvcih0cnVlKSk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVDdXJyZW50VXNlciA9IChpZDogc3RyaW5nKTogQXBwVGh1bmsgPT4gYXN5bmMgZGlzcGF0Y2ggPT4ge1xuICBkaXNwYXRjaChzZXRMb2JieUlzTG9hZGluZyh0cnVlKSk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGdldFVzZXIoaWQpO1xuICAgIGlmIChpc0Vycm9yUmVzcG9uc2UoZGF0YSkpIHtcbiAgICAgIHRocm93IGRhdGE7XG4gICAgfVxuICAgIGRpc3BhdGNoKHNldExvYmJ5SXNMb2FkaW5nKGZhbHNlKSk7XG4gICAgZGlzcGF0Y2goc2V0Q3VycmVudEdhbWUoZGF0YS5nYW1lLmNvbmZpZykpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGRpc3BhdGNoKHNldEVycm9yKGVycm9yKSk7XG4gICAgZGlzcGF0Y2goc2V0TG9iYnlJc0xvYWRpbmcoZmFsc2UpKTtcbiAgICBkaXNwYXRjaChzZXRMb2JieUhhc0Vycm9yKHRydWUpKTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IHN0YXJ0TmV3R2FtZSA9IChwcm9wczogR2FtZUNvbmZpZyk6IEFwcFRodW5rID0+IGFzeW5jIGRpc3BhdGNoID0+IHtcbiAgZGlzcGF0Y2goc2V0TG9iYnlJc0xvYWRpbmcodHJ1ZSkpO1xuICBjb25zdCBnYW1lID0gbmV3IEdhbWUocHJvcHMpO1xuICBjb25zdCB7IHNodWZmbGUsIC4uLmNvbmZpZyB9ID0gZ2FtZTtcblxuICB0cnkge1xuICAgIC8vIFRPRE86IEFsc28gcmVjb3JkIHN0YXRlXG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBzYXZlR2FtZShjb25maWcsIFwiaW5pdGlhbFN0YXRlXCIpO1xuICAgIGlmIChpc0Vycm9yUmVzcG9uc2UoZGF0YSkpIHtcbiAgICAgIHRocm93IGRhdGE7XG4gICAgfVxuXG4gICAgZGlzcGF0Y2goc2V0Q3VycmVudEdhbWUoZ2FtZSkpO1xuICAgIGRpc3BhdGNoKHNldExvYmJ5SXNMb2FkaW5nKGZhbHNlKSk7XG4gICAgZGlzcGF0Y2goc2V0UGFnZShQYWdlLkdhbWUpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBkaXNwYXRjaChzZXRFcnJvcihlcnJvcikpO1xuICAgIGRpc3BhdGNoKHNldExvYmJ5SXNMb2FkaW5nKGZhbHNlKSk7XG4gICAgZGlzcGF0Y2goc2V0TG9iYnlIYXNFcnJvcih0cnVlKSk7XG4gIH1cbn07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9idXR0b24ubGVzc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1lbnVCdXR0b25Qcm9wcyB7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIHJldmVyc2VkPzogYm9vbGVhbjtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBpbmRleD86IG51bWJlcjtcbn1cblxuZXhwb3J0IGNvbnN0IE1lbnVCdXR0b24gPSAocHJvcHM6IE1lbnVCdXR0b25Qcm9wcykgPT4gKFxuICA8YnV0dG9uXG4gICAgY2xhc3NOYW1lPXtbXG4gICAgICBcIm1lbnUtYnV0dG9uXCIsXG4gICAgICBwcm9wcy5yZXZlcnNlZCA/IFwicmV2ZXJzZWRcIiA6IG51bGwsXG4gICAgICBwcm9wcy5kaXNhYmxlZCA/IFwiZGlzYWJsZWRcIiA6IG51bGwsXG4gICAgXS5qb2luKFwiIFwiKX1cbiAgICBvbkNsaWNrPXtwcm9wcy5vbkNsaWNrfVxuICAgIGtleT17cHJvcHMuaW5kZXh9XG4gID5cbiAgICB7cHJvcHMudmFsdWV9XG4gIDwvYnV0dG9uPlxuKTtcblxuZXhwb3J0IGNvbnN0IG1hcFByb3BzVG9NZW51QnV0dG9ucyA9IChidXR0b25zOiBNZW51QnV0dG9uUHJvcHNbXSkgPT4ge1xuICByZXR1cm4gYnV0dG9ucy5tYXAoKHByb3BzLCBpbmRleCkgPT4gPE1lbnVCdXR0b24gey4uLnByb3BzfSBrZXk9e2luZGV4fSAvPik7XG59O1xuXG5leHBvcnQgZW51bSBHYW1lQnV0dG9uU2l6ZSB7XG4gIERlZmF1bHQsXG4gIFNtYWxsLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdhbWVCdXR0b25Qcm9wcyB7XG4gIHZhbHVlPzogc3RyaW5nO1xuICBvbkNsaWNrOiAoKSA9PiB2b2lkO1xuICBzaXplPzogR2FtZUJ1dHRvblNpemU7XG4gIHNlbGVjdGVkPzogYm9vbGVhbjtcbiAgaWNvbj86IEpTWC5FbGVtZW50O1xufVxuXG5leHBvcnQgY29uc3QgR2FtZUJ1dHRvbiA9ICh7XG4gIHZhbHVlLFxuICBpY29uLFxuICBvbkNsaWNrLFxuICBzaXplID0gR2FtZUJ1dHRvblNpemUuRGVmYXVsdCxcbiAgc2VsZWN0ZWQgPSBmYWxzZSxcbn06IEdhbWVCdXR0b25Qcm9wcykgPT4gKFxuICA8YnV0dG9uXG4gICAgY2xhc3NOYW1lPXtbXG4gICAgICBcImdhbWUtYnV0dG9uXCIsXG4gICAgICBzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IG51bGwsXG4gICAgICBzaXplID09PSBHYW1lQnV0dG9uU2l6ZS5TbWFsbCA/IFwic21hbGxcIiA6IG51bGwsXG4gICAgXS5qb2luKFwiIFwiKX1cbiAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICA+XG4gICAge3ZhbHVlfVxuICAgIHtpY29ufVxuICA8L2J1dHRvbj5cbik7XG5cbmV4cG9ydCBjb25zdCBtYXBQcm9wc1RvR2FtZUJ1dHRvbnMgPSAoYnV0dG9uczogR2FtZUJ1dHRvblByb3BzW10pID0+IHtcbiAgcmV0dXJuIGJ1dHRvbnMubWFwKChwcm9wcywgaW5kZXgpID0+IDxHYW1lQnV0dG9uIHsuLi5wcm9wc30ga2V5PXtpbmRleH0gLz4pO1xufTtcbiIsImltcG9ydCB7IFJlZHVjZXIgfSBmcm9tIFwicmVkdXhcIjtcbmltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi4vLi4vLi4vZ2VuZXJhdG9yL2dlbmVyYXRvclwiO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb25zdHNcIjtcbmltcG9ydCB7XG4gIFNldFBhZ2VBY3Rpb24sXG4gIFNldEN1cnJlbnRHYW1lQWN0aW9uLFxuICBTZXRMb2JieUhhc0Vycm9yQWN0aW9uLFxuICBTZXRMb2JieUlzTG9hZGluZ0FjdGlvbixcbiAgU2V0TG9iYnlNZW51U2VjdGlvbkFjdGlvbixcbiAgU0VUX0NVUlJFTlRfR0FNRSxcbiAgU0VUX1BBR0UsXG4gIFNFVF9MT0JCWV9JU19MT0FESU5HLFxuICBTRVRfTE9CQllfSEFTX0VSUk9SLFxuICBTRVRfTE9CQllfTUVOVV9TRUNUSU9OLFxuICBTZXRFcnJvckFjdGlvbixcbiAgUmVtb3ZlRXJyb3JBY3Rpb24sXG4gIFNFVF9FUlJPUixcbiAgUkVNT1ZFX0VSUk9SLFxufSBmcm9tIFwiLi9hY3Rpb25zXCI7XG5pbXBvcnQgeyBNZW51U2VjdGlvbiB9IGZyb20gXCIuLi8uLi9tZW51LWNvbnRlbnQvdHlwZXNcIjtcbmltcG9ydCB7IEVycm9yUmVzcG9uc2UgfSBmcm9tIFwiLi9yZXF1ZXN0c1wiO1xuXG5pbnRlcmZhY2UgU3RhdGUge1xuICBwYWdlOiBQYWdlO1xuICBjdXJyZW50R2FtZTogR2FtZSB8IHVuZGVmaW5lZDtcbiAgbG9iYnlJc0xvYWRpbmc6IGJvb2xlYW47XG4gIGxvYmJ5SGFzRXJyb3I6IGJvb2xlYW47XG4gIGxvYmJ5TWVudVNlY3Rpb246IE1lbnVTZWN0aW9uIHwgdW5kZWZpbmVkO1xuICBlcnJvcnM6IEVycm9yUmVzcG9uc2VbXTtcbn1cblxudHlwZSBBY3Rpb25zID1cbiAgfCBTZXRQYWdlQWN0aW9uXG4gIHwgU2V0Q3VycmVudEdhbWVBY3Rpb25cbiAgfCBTZXRMb2JieUhhc0Vycm9yQWN0aW9uXG4gIHwgU2V0TG9iYnlJc0xvYWRpbmdBY3Rpb25cbiAgfCBTZXRMb2JieU1lbnVTZWN0aW9uQWN0aW9uXG4gIHwgU2V0RXJyb3JBY3Rpb25cbiAgfCBSZW1vdmVFcnJvckFjdGlvbjtcblxuY29uc3QgaW5pdGlhbFN0YXRlOiBTdGF0ZSA9IHtcbiAgcGFnZTogUGFnZS5NZW51LFxuICBjdXJyZW50R2FtZTogdW5kZWZpbmVkLFxuICBsb2JieUlzTG9hZGluZzogdHJ1ZSxcbiAgbG9iYnlIYXNFcnJvcjogZmFsc2UsXG4gIGxvYmJ5TWVudVNlY3Rpb246IHVuZGVmaW5lZCxcbiAgZXJyb3JzOiBbXSxcbn07XG5cbmV4cG9ydCBjb25zdCBhcHBSZWR1Y2VyOiBSZWR1Y2VyPFN0YXRlLCBBY3Rpb25zPiA9IChcbiAgc3RhdGUgPSBpbml0aWFsU3RhdGUsXG4gIGFjdGlvblxuKSA9PiB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIFNFVF9QQUdFOiB7XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgcGFnZTogYWN0aW9uLnBheWxvYWQgfTtcbiAgICB9XG4gICAgY2FzZSBTRVRfQ1VSUkVOVF9HQU1FOiB7XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgY3VycmVudEdhbWU6IGFjdGlvbi5wYXlsb2FkIH07XG4gICAgfVxuICAgIGNhc2UgU0VUX0xPQkJZX0hBU19FUlJPUjoge1xuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGxvYmJ5SGFzRXJyb3I6IGFjdGlvbi5wYXlsb2FkIH07XG4gICAgfVxuICAgIGNhc2UgU0VUX0xPQkJZX0lTX0xPQURJTkc6IHtcbiAgICAgIHJldHVybiB7IC4uLnN0YXRlLCBsb2JieUlzTG9hZGluZzogYWN0aW9uLnBheWxvYWQgfTtcbiAgICB9XG4gICAgY2FzZSBTRVRfTE9CQllfTUVOVV9TRUNUSU9OOiB7XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgbG9iYnlNZW51U2VjdGlvbjogYWN0aW9uLnBheWxvYWQgfTtcbiAgICB9XG4gICAgY2FzZSBTRVRfRVJST1I6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBlcnJvcnM6IFtcbiAgICAgICAgICBhY3Rpb24ucGF5bG9hZCxcbiAgICAgICAgICAuLi5zdGF0ZS5lcnJvcnMuZmlsdGVyKFxuICAgICAgICAgICAgZXJyb3IgPT4gZXJyb3IubWVzc2FnZSAhPT0gYWN0aW9uLnBheWxvYWQubWVzc2FnZVxuICAgICAgICAgICksXG4gICAgICAgIF0sXG4gICAgICB9O1xuICAgIH1cbiAgICBjYXNlIFJFTU9WRV9FUlJPUjoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGVycm9yczogc3RhdGUuZXJyb3JzLmZpbHRlcihcbiAgICAgICAgICBlcnJvciA9PiBlcnJvci5tZXNzYWdlICE9PSBhY3Rpb24ucGF5bG9hZC5tZXNzYWdlXG4gICAgICAgICksXG4gICAgICB9O1xuICAgIH1cbiAgICBkZWZhdWx0OiB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9XG59O1xuIiwiaW1wb3J0IHsgR2FtZVR5cGUgfSBmcm9tIFwiLi4vY29uc3RzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUm93VmFsdWVzPEFycmF5VHlwZT4ge1xuICByb3c6IG51bWJlcjtcbiAgcG9zOiBudW1iZXI7XG4gIGFycjogQXJyYXlUeXBlW11bXTtcbn1cblxuLyoqXG4gKiBJdGVyYXRlcyB0aHJvdWdoIGVhY2ggY2VsbCByb3ctd2lzZSBhbmQgY2FsbHMgY2FsbGJhY2sgZnVuY3Rpb24gZm9yIGVhY2ggY2VsbC5cbiAqIFJldHVybnMgYXJyYXkgZnJvbSBjYWxsYmFjay5cbiAqL1xuZXhwb3J0IGNvbnN0IHNvcnRCeVJvd3MgPSA8QXJyYXlUeXBlID0gbnVtYmVyPihcbiAgZ2FtZVR5cGU6IEdhbWVUeXBlLFxuICBjYWxsYmFjazogKHZhbHVlczogUm93VmFsdWVzPEFycmF5VHlwZT4pID0+IHZvaWRcbikgPT4ge1xuICBsZXQgcG9zOiBudW1iZXI7XG4gIGxldCB2YWx1ZXM6IFJvd1ZhbHVlczxBcnJheVR5cGU+O1xuICBjb25zdCBhcnI6IEFycmF5VHlwZVtdW10gPSBbXTtcbiAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgZ2FtZVR5cGU7IHJvdysrKSB7XG4gICAgYXJyLnB1c2goW10pO1xuICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGdhbWVUeXBlOyBjb2wrKykge1xuICAgICAgcG9zID0gcm93ICogZ2FtZVR5cGUgKyBjb2w7XG4gICAgICB2YWx1ZXMgPSB7IHJvdywgcG9zLCBhcnIgfTtcbiAgICAgIGNhbGxiYWNrKHZhbHVlcyk7XG4gICAgfVxuICB9XG4gIHJldHVybiBhcnI7XG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbHVtblZhbHVlczxBcnJheVR5cGU+IHtcbiAgY29sOiBudW1iZXI7XG4gIHBvczogbnVtYmVyO1xuICBhcnI6IEFycmF5VHlwZVtdW107XG59XG5cbi8qKlxuICogSXRlcmF0ZXMgdGhyb3VnaCBlYWNoIGNlbGwgY29sdW1uLXdpc2UgYW5kIGNhbGxzIGNhbGxiYWNrIGZ1bmN0aW9uIGZvciBlYWNoIGNlbGwuXG4gKiBSZXR1cm5zIGFycmF5IGZyb20gY2FsbGJhY2suXG4gKi9cbmV4cG9ydCBjb25zdCBzb3J0QnlDb2xzID0gPEFycmF5VHlwZSA9IG51bWJlcj4oXG4gIGdhbWVUeXBlOiBHYW1lVHlwZSxcbiAgY2FsbGJhY2s6ICh2YWx1ZXM6IENvbHVtblZhbHVlczxBcnJheVR5cGU+KSA9PiB2b2lkXG4pID0+IHtcbiAgbGV0IHBvczogbnVtYmVyO1xuICBsZXQgdmFsdWVzOiBDb2x1bW5WYWx1ZXM8QXJyYXlUeXBlPjtcbiAgY29uc3QgYXJyOiBBcnJheVR5cGVbXVtdID0gW107XG4gIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGdhbWVUeXBlOyBjb2wrKykge1xuICAgIGFyci5wdXNoKFtdKTtcbiAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBnYW1lVHlwZTsgcm93KyspIHtcbiAgICAgIHBvcyA9IGNvbCArIGdhbWVUeXBlICogcm93O1xuICAgICAgdmFsdWVzID0geyBjb2wsIHBvcywgYXJyIH07XG4gICAgICBjYWxsYmFjayh2YWx1ZXMpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYXJyO1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBHcmlkVmFsdWVzPEFycmF5VHlwZT4ge1xuICByb3c6IG51bWJlcjtcbiAgY29sOiBudW1iZXI7XG4gIGdyaWQ6IG51bWJlcjtcbiAgcG9zOiBudW1iZXI7XG4gIGFycjogQXJyYXlUeXBlW11bXTtcbn1cblxuLyoqXG4gKiBJdGVyYXRlcyB0aHJvdWdoIGVhY2ggY2VsbCBncmlkLXdpc2UgYW5kIGNhbGxzIGNhbGxiYWNrIGZ1bmN0aW9uIGZvciBlYWNoIGNlbGwuXG4gKiBSZXR1cm5zIGFycmF5IGZyb20gY2FsbGJhY2suXG4gKiBUT0RPIGltcHJvdmUgZnVuY3Rpb24gd2l0aCBvbmUgZnJvbSBnZW5lcmF0b3JcbiAqL1xuZXhwb3J0IGNvbnN0IHNvcnRCeUdyaWRzID0gPEFycmF5VHlwZSA9IG51bWJlcj4oXG4gIGdhbWVUeXBlOiBHYW1lVHlwZSxcbiAgZ2FtZVJhdGlvOiBudW1iZXIsXG4gIGNhbGxiYWNrOiAodmFsdWVzOiBHcmlkVmFsdWVzPEFycmF5VHlwZT4pID0+IHZvaWRcbikgPT4ge1xuICBsZXQgZ3JpZDogbnVtYmVyO1xuICBsZXQgcm93UG9zOiBudW1iZXI7XG4gIGxldCBjb2xQb3M6IG51bWJlcjtcbiAgbGV0IHBvczogbnVtYmVyO1xuICBsZXQgdmFsdWVzOiBHcmlkVmFsdWVzPEFycmF5VHlwZT47XG4gIGNvbnN0IGFycjogQXJyYXlUeXBlW11bXSA9IFtdO1xuICAvLyByb3dzIG9mIGdyaWRzIGluIHRhYmxlXG4gIGZvciAobGV0IHJvd0dyaWQgPSAwOyByb3dHcmlkIDwgZ2FtZVJhdGlvOyByb3dHcmlkKyspIHtcbiAgICAvLyBjb2x1bW5zIG9mIGdyaWRzIGluIHRhYmxlXG4gICAgZm9yIChsZXQgY29sR3JpZCA9IDA7IGNvbEdyaWQgPCBnYW1lUmF0aW87IGNvbEdyaWQrKykge1xuICAgICAgLy8gZ3JpZCBudW1iZXIgaG9yaXpvbnRhbGx5XG4gICAgICBncmlkID0gcm93R3JpZCAqIGdhbWVSYXRpbyArIGNvbEdyaWQ7XG4gICAgICBhcnIucHVzaChbXSk7XG4gICAgICAvLyByb3cgcGVyIGdyaWRcbiAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IGdhbWVSYXRpbzsgcm93KyspIHtcbiAgICAgICAgLy8gcG9zaXRpb24gb2YgZmlyc3QgY29sdW1uIGluIGVhY2ggZ3JpZFxuICAgICAgICByb3dQb3MgPSAocm93ICsgcm93R3JpZCAqIGdhbWVSYXRpbykgKiBnYW1lVHlwZTtcbiAgICAgICAgLy8gY29sdW1uIHBlciBncmlkXG4gICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGdhbWVSYXRpbzsgY29sKyspIHtcbiAgICAgICAgICAvLyBpbmNyZW1lbnQgb2YgY29sdW1uIHBlciBncmlkIGFuZCByb3dzIG9mIGdyaWRzXG4gICAgICAgICAgY29sUG9zID0gY29sICsgY29sR3JpZCAqIGdhbWVSYXRpbztcbiAgICAgICAgICAvLyBmaW5hbCBwb3NpdGlvblxuICAgICAgICAgIHBvcyA9IHJvd1BvcyArIGNvbFBvcztcbiAgICAgICAgICB2YWx1ZXMgPSB7IHJvdywgY29sLCBncmlkLCBwb3MsIGFyciB9O1xuICAgICAgICAgIGNhbGxiYWNrKHZhbHVlcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGFycjtcbn07XG4iLCJpbXBvcnQgeyByZW1vdmVEdXBsaWNhdGVzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2dlbmVyYWxVdGlsc1wiO1xuaW1wb3J0IHsgc29ydEJ5Um93cywgc29ydEJ5Q29scywgc29ydEJ5R3JpZHMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvYXJyYXlVdGlsc1wiO1xuaW1wb3J0IHsgQ2VsbE1vZGUsIFRhYmxlQ2VsbHNNYXAsIEdhbWVUeXBlIH0gZnJvbSBcIi4uLy4uLy4uL2NvbnN0c1wiO1xuXG4vKipcbiAqIEZpbmRzIHBlbmNpbCBtb2RlIGNlbGwgZHVwbGljYXRlcyBmcm9tIHJvd3MsIGNvbHMgYW5kIGdyaWRzXG4gKi9cbmV4cG9ydCBjb25zdCBnZXREdXBsaWNhdGVzID0gKFxuICBjZWxsUHJvcHM6IFRhYmxlQ2VsbHNNYXAsXG4gIGdhbWVUeXBlOiBHYW1lVHlwZSxcbiAgZ2FtZVJhdGlvOiBudW1iZXJcbikgPT4ge1xuICBjb25zdCBwZW5jaWxDZWxsc1Jvd3MgPSBzb3J0QnlSb3dzKGdhbWVUeXBlLCAoeyBhcnIsIHJvdywgcG9zIH0pID0+IHtcbiAgICBpZiAoY2VsbFByb3BzW3Bvc10ubW9kZSAhPT0gQ2VsbE1vZGUuTm90ZXMgJiYgY2VsbFByb3BzW3Bvc10udmFsdWUpIHtcbiAgICAgIGFycltyb3ddLnB1c2gocG9zKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBwZW5jaWxDZWxsc0NvbHMgPSBzb3J0QnlDb2xzKGdhbWVUeXBlLCAoeyBhcnIsIGNvbCwgcG9zIH0pID0+IHtcbiAgICBpZiAoY2VsbFByb3BzW3Bvc10ubW9kZSAhPT0gQ2VsbE1vZGUuTm90ZXMgJiYgY2VsbFByb3BzW3Bvc10udmFsdWUpIHtcbiAgICAgIGFycltjb2xdLnB1c2gocG9zKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBwZW5jaWxDZWxsc0dyaWRzID0gc29ydEJ5R3JpZHMoXG4gICAgZ2FtZVR5cGUsXG4gICAgZ2FtZVJhdGlvLFxuICAgICh7IGFyciwgZ3JpZCwgcG9zIH0pID0+IHtcbiAgICAgIGlmIChjZWxsUHJvcHNbcG9zXS5tb2RlICE9PSBDZWxsTW9kZS5Ob3RlcyAmJiBjZWxsUHJvcHNbcG9zXS52YWx1ZSkge1xuICAgICAgICBhcnJbZ3JpZF0ucHVzaChwb3MpO1xuICAgICAgfVxuICAgIH1cbiAgKTtcbiAgY29uc3QgZHVwbGljYXRlcyA9IHJlbW92ZUR1cGxpY2F0ZXMoXG4gICAgZmluZER1cGxpY2F0ZXMoXG4gICAgICBwZW5jaWxDZWxsc1Jvd3MsXG4gICAgICBwZW5jaWxDZWxsc0NvbHMsXG4gICAgICBwZW5jaWxDZWxsc0dyaWRzLFxuICAgICAgY2VsbFByb3BzXG4gICAgKVxuICApO1xuXG4gIHJldHVybiBkdXBsaWNhdGVzO1xufTtcblxuLyoqXG4gKiBGaW5kcyBhbGwgb2NjdXJpbmcgZHVwbGljYXRlcyBhbmQgcmV0dXJucyBhcnJheSBvZiB0aGVpciBjZWxsIHBvc2l0aW9uc1xuICovXG5jb25zdCBmaW5kRHVwbGljYXRlcyA9IChcbiAgcm93czogbnVtYmVyW11bXSxcbiAgY29sczogbnVtYmVyW11bXSxcbiAgZ3JpZHM6IG51bWJlcltdW10sXG4gIGNlbGxQcm9wczogVGFibGVDZWxsc01hcFxuKSA9PiB7XG4gIGNvbnN0IGFycjogbnVtYmVyW11bXSA9IFsuLi5yb3dzLCAuLi5jb2xzLCAuLi5ncmlkc107XG4gIGNvbnN0IGR1cGxpY2F0ZXM6IG51bWJlcltdID0gW107XG4gIGZvciAobGV0IG91dGVyID0gMDsgb3V0ZXIgPCBhcnIubGVuZ3RoOyBvdXRlcisrKSB7XG4gICAgZm9yIChsZXQgaW5uZXIgPSAwOyBpbm5lciA8IGFycltvdXRlcl0ubGVuZ3RoOyBpbm5lcisrKSB7XG4gICAgICBmb3IgKGxldCBwb3MgPSAxOyBwb3MgPCBhcnJbb3V0ZXJdLmxlbmd0aCAtIGlubmVyOyBwb3MrKykge1xuICAgICAgICBjb25zdCBjdXJyZW50UG9zID0gYXJyW291dGVyXVtpbm5lcl07XG4gICAgICAgIGNvbnN0IG5leHRQb3MgPSBhcnJbb3V0ZXJdW2lubmVyICsgcG9zXTtcbiAgICAgICAgaWYgKGNlbGxQcm9wc1tjdXJyZW50UG9zXS52YWx1ZSA9PT0gY2VsbFByb3BzW25leHRQb3NdLnZhbHVlKSB7XG4gICAgICAgICAgZHVwbGljYXRlcy5wdXNoKGN1cnJlbnRQb3MpO1xuICAgICAgICAgIGR1cGxpY2F0ZXMucHVzaChuZXh0UG9zKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZHVwbGljYXRlcztcbn07XG4iLCJpbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vZHVja3Mvc3RvcmVcIjtcblxuZXhwb3J0IGNvbnN0IGdldFBhZ2UgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUuYXBwLnBhZ2U7XG5leHBvcnQgY29uc3QgZ2V0Q3VycmVudEdhbWUgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUuYXBwLmN1cnJlbnRHYW1lO1xuZXhwb3J0IGNvbnN0IGdldEhhc0N1cnJlbnRHYW1lID0gKHN0YXRlOiBSb290U3RhdGUpID0+ICEhc3RhdGUuYXBwLmN1cnJlbnRHYW1lO1xuZXhwb3J0IGNvbnN0IGdldExvYmJ5SXNMb2FkaW5nID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmFwcC5sb2JieUlzTG9hZGluZztcbmV4cG9ydCBjb25zdCBnZXRMb2JieUhhc0Vycm9yID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmFwcC5sb2JieUhhc0Vycm9yO1xuZXhwb3J0IGNvbnN0IGdldExvYmJ5TWVudVNlY3Rpb24gPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT5cbiAgc3RhdGUuYXBwLmxvYmJ5TWVudVNlY3Rpb247XG5leHBvcnQgY29uc3QgZ2V0RXJyb3JzID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmFwcC5lcnJvcnM7XG4iLCJpbXBvcnQgeyBUYWJsZUNlbGxzTWFwLCBDZWxsTW9kZSwgQ2VsbFByb3BzIH0gZnJvbSBcIi4uLy4uLy4uL2NvbnN0c1wiO1xuaW1wb3J0IHsgZ2V0U3RvcmFnZUtleSwgU3RvcmFnZUtleXMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvbG9jYWxTdG9yYWdlXCI7XG5cbi8qKlxuICogQXNzaWducyBuZXcgZ2FtZSB2YWx1ZXMgdG8gY29ycmVzcG9uZGluZyBjZWxscy5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldE5ld0NlbGxQcm9wcyA9ICh2YWx1ZXM6IG51bWJlcltdKSA9PiB7XG4gIGNvbnN0IGNlbGxQcm9wczogVGFibGVDZWxsc01hcCA9IHt9O1xuICB2YWx1ZXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgIGNvbnN0IGlzUmVhZE9ubHlDZWxsID0gdmFsdWUgIT09IDA7XG5cbiAgICBjZWxsUHJvcHNba2V5XSA9IHtcbiAgICAgIHZhbHVlLFxuICAgICAgd2l0aEhpZ2hsaWdodDogZmFsc2UsXG4gICAgICB3aXRoRXJyb3I6IGZhbHNlLFxuICAgICAgbW9kZTogaXNSZWFkT25seUNlbGwgPyBDZWxsTW9kZS5SZWFkT25seSA6IENlbGxNb2RlLlBlbmNpbCxcbiAgICB9O1xuICB9KTtcbiAgcmV0dXJuIGNlbGxQcm9wcztcbn07XG5cbi8qKlxuICogQXNzaWducyBlbmQgZ2FtZSB2YWx1ZXMgdG8gY29ycmVzcG9uZGluZyBjZWxscy5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldEVuZGdhbWVDZWxsUHJvcHMgPSAoXG4gIHZhbHVlczogbnVtYmVyW10sXG4gIGN1cnJlbnRDZWxsUHJvcHM6IFRhYmxlQ2VsbHNNYXBcbikgPT4ge1xuICBjb25zdCBjZWxsUHJvcHM6IFRhYmxlQ2VsbHNNYXAgPSB7fTtcbiAgdmFsdWVzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICBjb25zdCBpc1JlYWRPbmx5Q2VsbCA9XG4gICAgICBjdXJyZW50Q2VsbFByb3BzW2tleV0gJiYgY3VycmVudENlbGxQcm9wc1trZXldLm1vZGUgPT09IENlbGxNb2RlLlJlYWRPbmx5O1xuXG4gICAgY2VsbFByb3BzW2tleV0gPSB7XG4gICAgICB2YWx1ZSxcbiAgICAgIHdpdGhIaWdobGlnaHQ6IGZhbHNlLFxuICAgICAgd2l0aEVycm9yOiBmYWxzZSxcbiAgICAgIG1vZGU6IGlzUmVhZE9ubHlDZWxsID8gQ2VsbE1vZGUuUmVhZE9ubHkgOiBDZWxsTW9kZS5QZW5jaWwsXG4gICAgfTtcbiAgfSk7XG4gIHJldHVybiBjZWxsUHJvcHM7XG59O1xuXG4vKipcbiAqIFJlc2V0cyBoaWdobGlnaHRzIGFuZCB1cGRhdGVzIGVycm9ycyBpZiBlbmFibGVkIGluIHNldHRpbmdzXG4gKi9cbmV4cG9ydCBjb25zdCByZXNldENlbGxTdGF0dXMgPSAoXG4gIGNlbGxQcm9wczogVGFibGVDZWxsc01hcCxcbiAgZHVwbGljYXRlczogbnVtYmVyW11cbikgPT4ge1xuICBjb25zdCBuZXdDZWxsUHJvcHM6IFRhYmxlQ2VsbHNNYXAgPSB7fTtcbiAgY29uc3QgZGlzYWJsZUluR2FtZUVycm9yID0gZ2V0U3RvcmFnZUtleShTdG9yYWdlS2V5cy5EaXNhYmxlSW5HYW1lRXJyb3IpO1xuICBjb25zdCBkaXNhYmxlSGlnaGxpZ2h0aW5nID0gZ2V0U3RvcmFnZUtleShTdG9yYWdlS2V5cy5EaXNhYmxlSGlnaGxpZ2h0aW5nKTtcblxuICBpZiAoZGlzYWJsZUhpZ2hsaWdodGluZyAmJiBkaXNhYmxlSW5HYW1lRXJyb3IpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgZm9yIChjb25zdCBrZXkgaW4gY2VsbFByb3BzKSB7XG4gICAgaWYgKGNlbGxQcm9wcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBjb25zdCBwb3MgPSAra2V5O1xuICAgICAgbmV3Q2VsbFByb3BzW3Bvc10gPSB7XG4gICAgICAgIC4uLmNlbGxQcm9wc1twb3NdLFxuICAgICAgICB3aXRoSGlnaGxpZ2h0OiBmYWxzZSxcbiAgICAgICAgd2l0aEVycm9yOiBkaXNhYmxlSW5HYW1lRXJyb3IgPyBmYWxzZSA6IGR1cGxpY2F0ZXMuaW5jbHVkZXMocG9zKSxcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld0NlbGxQcm9wcztcbn07XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVDZWxsc0NlbGxNb2RlID0gKFxuICBjZWxsUHJvcHM6IFRhYmxlQ2VsbHNNYXAsXG4gIGNlbGxNb2RlOiBDZWxsTW9kZVxuKSA9PiB7XG4gIGNvbnN0IG5ld0NlbGxQcm9wczogVGFibGVDZWxsc01hcCA9IHt9O1xuICBmb3IgKGNvbnN0IGtleSBpbiBjZWxsUHJvcHMpIHtcbiAgICBpZiAoY2VsbFByb3BzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIGNvbnN0IHByb3BzID0gY2VsbFByb3BzW2tleV07XG4gICAgICBuZXdDZWxsUHJvcHNba2V5XSA9IHByb3BzLnZhbHVlID8gcHJvcHMgOiB7IC4uLnByb3BzLCBtb2RlOiBjZWxsTW9kZSB9O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXdDZWxsUHJvcHM7XG59O1xuXG4vKipcbiAqIENoZWNrcyBpZiB0aGVyZSBhcmUgZW1wdHkgY2VsbHMgb3IgaW4gbm90ZXMgbW9kZVxuICovXG5leHBvcnQgY29uc3QgaGFzSW52YWxpZEVuZGdhbWVDZWxscyA9IChjZWxsUHJvcHM6IFRhYmxlQ2VsbHNNYXApID0+IHtcbiAgZm9yIChjb25zdCBrZXkgaW4gY2VsbFByb3BzKSB7XG4gICAgaWYgKFxuICAgICAgKGNlbGxQcm9wcy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmXG4gICAgICAgIGNlbGxQcm9wc1trZXldLm1vZGUgPT09IENlbGxNb2RlLk5vdGVzKSB8fFxuICAgICAgIWNlbGxQcm9wc1trZXldLnZhbHVlXG4gICAgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuZXhwb3J0IGNvbnN0IGlzQ2VsbEhpZ2hsaWdodGFibGUgPSAoY2VsbDogQ2VsbFByb3BzKSA9PiB7XG4gIHJldHVybiAhIWNlbGwudmFsdWUgJiYgY2VsbC5tb2RlICE9PSBDZWxsTW9kZS5Ob3Rlcztcbn07XG5cbmV4cG9ydCBjb25zdCBjYW5BdXRvbWF0aWNhbGx5VXBkYXRlTm90ZXNDZWxscyA9ICh7XG4gIGNlbGxNb2RlLFxuICBzZWxlY3RlZENlbGwsXG59OiB7XG4gIGNlbGxNb2RlOiBDZWxsTW9kZTtcbiAgc2VsZWN0ZWRDZWxsOiBDZWxsUHJvcHM7XG59KSA9PiB7XG4gIGNvbnN0IGRpc2FibGVBdXRvTm90ZXNSZW1vdmFsID0gZ2V0U3RvcmFnZUtleShcbiAgICBTdG9yYWdlS2V5cy5EaXNhYmxlQXV0b05vdGVzUmVtb3ZhbFxuICApO1xuICByZXR1cm4gKFxuICAgIGNlbGxNb2RlID09PSBDZWxsTW9kZS5QZW5jaWwgJiZcbiAgICBzZWxlY3RlZENlbGwubW9kZSA9PT0gQ2VsbE1vZGUuUGVuY2lsICYmXG4gICAgc2VsZWN0ZWRDZWxsLnZhbHVlICYmXG4gICAgIWRpc2FibGVBdXRvTm90ZXNSZW1vdmFsXG4gICk7XG59O1xuXG4vKipcbiAqIEhpZ2hsaWdodHMgcGVuY2lsIGNlbGxzIHRoYXQgaGF2ZSBzYW1lIHZhbHVlXG4gKi9cbmV4cG9ydCBjb25zdCB1cGRhdGVDZWxsc0hpZ2hsaWdodCA9IChcbiAgY2VsbFByb3BzOiBUYWJsZUNlbGxzTWFwLFxuICBzZWxlY3RlZENlbGw6IENlbGxQcm9wc1xuKSA9PiB7XG4gIGNvbnN0IG5ld0NlbGxQcm9wczogVGFibGVDZWxsc01hcCA9IHt9O1xuXG4gIGZvciAoY29uc3Qga2V5IGluIGNlbGxQcm9wcykge1xuICAgIGlmIChjZWxsUHJvcHMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgY29uc3QgbWF0Y2hlc1ZhbHVlID1cbiAgICAgICAgY2VsbFByb3BzW2tleV0ubW9kZSAhPT0gQ2VsbE1vZGUuTm90ZXMgJiZcbiAgICAgICAgc2VsZWN0ZWRDZWxsLnZhbHVlID09PSBjZWxsUHJvcHNba2V5XS52YWx1ZTtcbiAgICAgIG5ld0NlbGxQcm9wc1trZXldID0ge1xuICAgICAgICAuLi5jZWxsUHJvcHNba2V5XSxcbiAgICAgICAgd2l0aEhpZ2hsaWdodDogaXNDZWxsSGlnaGxpZ2h0YWJsZShzZWxlY3RlZENlbGwpICYmIG1hdGNoZXNWYWx1ZSxcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld0NlbGxQcm9wcztcbn07XG4iLCJpbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vZHVja3Mvc3RvcmVcIjtcbmltcG9ydCB7IEdhbWVTdGF0ZSB9IGZyb20gXCIuL3JlZHVjZXJcIjtcblxuZXhwb3J0IGNvbnN0IGdldENlbGxNb2RlID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmdhbWUuY2VsbE1vZGU7XG5leHBvcnQgY29uc3QgZ2V0Q2VsbFByb3BzID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmdhbWUuY2VsbFByb3BzO1xuZXhwb3J0IGNvbnN0IGdldEdhbWVTdGF0ZSA9IChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5nYW1lLmdhbWVTdGF0ZTtcbmV4cG9ydCBjb25zdCBhcmVDZWxsc0Rpc2FibGVkID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHtcbiAgcmV0dXJuIFtHYW1lU3RhdGUuV2luLCBHYW1lU3RhdGUuR2FtZU92ZXJdLmluY2x1ZGVzKGdldEdhbWVTdGF0ZShzdGF0ZSkpO1xufTtcbiIsImltcG9ydCB7IHJlbW92ZUR1cGxpY2F0ZXMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvZ2VuZXJhbFV0aWxzXCI7XG5pbXBvcnQgeyBzb3J0QnlSb3dzLCBzb3J0QnlDb2xzLCBzb3J0QnlHcmlkcyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9hcnJheVV0aWxzXCI7XG5pbXBvcnQge1xuICBDZWxsTW9kZSxcbiAgVGFibGVDZWxsc01hcCxcbiAgQ2VsbENvb3JkaW5hdGVzLFxuICBHYW1lVHlwZSxcbiAgQ2VsbFByb3BzLFxufSBmcm9tIFwiLi4vLi4vLi4vY29uc3RzXCI7XG5cbmNvbnN0IGdldER1cGxpY2F0ZU5vdGVzQ2VsbHMgPSAoXG4gIGdhbWVUeXBlOiBHYW1lVHlwZSxcbiAgZ2FtZVJhdGlvOiBudW1iZXIsXG4gIGNlbGxQcm9wczogVGFibGVDZWxsc01hcCxcbiAgY29vcjogQ2VsbENvb3JkaW5hdGVzXG4pID0+IHtcbiAgY29uc3Qgbm90ZXNDZWxsc1Jvd3MgPSBzb3J0QnlSb3dzKGdhbWVUeXBlLCAoeyBhcnIsIHJvdywgcG9zIH0pID0+IHtcbiAgICBpZiAoY2VsbFByb3BzW3Bvc10ubW9kZSA9PT0gQ2VsbE1vZGUuTm90ZXMgJiYgY2VsbFByb3BzW3Bvc10udmFsdWUpIHtcbiAgICAgIGFycltyb3ddLnB1c2gocG9zKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBub3Rlc0NlbGxzQ29scyA9IHNvcnRCeUNvbHMoZ2FtZVR5cGUsICh7IGFyciwgY29sLCBwb3MgfSkgPT4ge1xuICAgIGlmIChjZWxsUHJvcHNbcG9zXS5tb2RlID09PSBDZWxsTW9kZS5Ob3RlcyAmJiBjZWxsUHJvcHNbcG9zXS52YWx1ZSkge1xuICAgICAgYXJyW2NvbF0ucHVzaChwb3MpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IG5vdGVzQ2VsbHNHcmlkcyA9IHNvcnRCeUdyaWRzKFxuICAgIGdhbWVUeXBlLFxuICAgIGdhbWVSYXRpbyxcbiAgICAoeyBhcnIsIGdyaWQsIHBvcyB9KSA9PiB7XG4gICAgICBpZiAoY2VsbFByb3BzW3Bvc10ubW9kZSA9PT0gQ2VsbE1vZGUuTm90ZXMgJiYgY2VsbFByb3BzW3Bvc10udmFsdWUpIHtcbiAgICAgICAgYXJyW2dyaWRdLnB1c2gocG9zKTtcbiAgICAgIH1cbiAgICB9XG4gICk7XG4gIHJldHVybiByZW1vdmVEdXBsaWNhdGVzKFtcbiAgICAuLi5ub3Rlc0NlbGxzUm93c1tjb29yLnhdLFxuICAgIC4uLm5vdGVzQ2VsbHNDb2xzW2Nvb3IueV0sXG4gICAgLi4ubm90ZXNDZWxsc0dyaWRzW2Nvb3IuZ3JpZF0sXG4gIF0pO1xufTtcblxuLyoqXG4gKiBSZW1vdmVzIHZhbHVlIGZyb20gbm90ZXMgdGhhdCBtYXRjaCBuZXcgcGVuY2lsIHZhbHVlXG4gKi9cbmV4cG9ydCBjb25zdCByZW1vdmVEdXBsaWNhdGVOb3Rlc0NlbGxzID0gKFxuICBnYW1lVHlwZTogR2FtZVR5cGUsXG4gIGdhbWVSYXRpbzogbnVtYmVyLFxuICBjZWxsUHJvcHM6IFRhYmxlQ2VsbHNNYXAsXG4gIHNlbGVjdGVkQ2VsbDogQ2VsbFByb3BzLFxuICBjb29yOiBDZWxsQ29vcmRpbmF0ZXNcbikgPT4ge1xuICBjb25zdCBkdXBsaWNhdGVzID0gZ2V0RHVwbGljYXRlTm90ZXNDZWxscyhcbiAgICBnYW1lVHlwZSxcbiAgICBnYW1lUmF0aW8sXG4gICAgY2VsbFByb3BzLFxuICAgIGNvb3JcbiAgKTtcbiAgaWYgKCFkdXBsaWNhdGVzLmxlbmd0aCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvLyBSZW1vdmVzIG51bWJlcnMgZnJvbSBub3RlcyB0aGF0IGFyZSByZWxhdGVkIHRvIHNlbGVjdGVkIGNlbGxcbiAgY29uc3QgbmV3Q2VsbFByb3BzOiBUYWJsZUNlbGxzTWFwID0ge307XG5cbiAgZm9yIChjb25zdCBrZXkgaW4gY2VsbFByb3BzKSB7XG4gICAgaWYgKGNlbGxQcm9wcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBjb25zdCBwcm9wcyA9IGNlbGxQcm9wc1trZXldO1xuICAgICAgbGV0IHZhbHVlID0gcHJvcHMudmFsdWU7XG5cbiAgICAgIGlmIChkdXBsaWNhdGVzLmluY2x1ZGVzKCtrZXkpKSB7XG4gICAgICAgIGNvbnN0IG5vdGVzID0gYCR7dmFsdWV9YFxuICAgICAgICAgIC5zcGxpdChcIlwiKVxuICAgICAgICAgIC5maWx0ZXIodmFsID0+IGAke3NlbGVjdGVkQ2VsbC52YWx1ZX1gICE9PSB2YWwpXG4gICAgICAgICAgLmpvaW4oXCJcIik7XG4gICAgICAgIHZhbHVlID0gK25vdGVzIHx8IDA7XG4gICAgICB9XG5cbiAgICAgIG5ld0NlbGxQcm9wc1trZXldID0ge1xuICAgICAgICAuLi5wcm9wcyxcbiAgICAgICAgdmFsdWUsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXdDZWxsUHJvcHM7XG59O1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgY3ggZnJvbSBcImNsYXNzbmFtZXNcIjtcblxuaW1wb3J0IFwiLi9wb3B1cC5sZXNzXCI7XG5cbmltcG9ydCB7IEdhbWVCdXR0b25Qcm9wcywgbWFwUHJvcHNUb0dhbWVCdXR0b25zIH0gZnJvbSBcIi4uL2J1dHRvbnMvQnV0dG9uXCI7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHsgZ2V0UG9wdXBQcm9wcyB9IGZyb20gXCIuL2R1Y2tzL3NlbGVjdG9yc1wiO1xuXG5leHBvcnQgZW51bSBQb3B1cFRleHQge1xuICBTb2x2ZSA9IFwiU29sdmVcIixcbiAgUmVzZXQgPSBcIlJlc2V0XCIsXG4gIFdpbiA9IFwiV2luXCIsXG4gIER1cGxpY2F0ZXMgPSBcIkR1cGxpY2F0ZXNcIixcbiAgQ2hlY2sgPSBcIkNoZWNrXCIsXG4gIE5ldHdvcmtFcnJvciA9IFwiTmV0d29ya0Vycm9yXCIsXG59XG5cbmNvbnN0IFBvcHVwVGV4dE1hcDogeyBba2V5IGluIFBvcHVwVGV4dF06IEpTWC5FbGVtZW50IH0gPSB7XG4gIFtQb3B1cFRleHQuU29sdmVdOiA8c3Bhbj5BcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gc29sdmU/PC9zcGFuPixcbiAgW1BvcHVwVGV4dC5SZXNldF06IDxzcGFuPkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byByZXNldD88L3NwYW4+LFxuICBbUG9wdXBUZXh0Lldpbl06IChcbiAgICA8PlxuICAgICAgPHNwYW4+Q29ycmVjdCE8L3NwYW4+XG4gICAgICA8YnIgLz5cbiAgICAgIDxzcGFuPllvdSBoYXZlIHdvbiB0aGUgZ2FtZSE8L3NwYW4+XG4gICAgPC8+XG4gICksXG4gIFtQb3B1cFRleHQuRHVwbGljYXRlc106IDxzcGFuPlNvbWUgY2VsbCB2YWx1ZXMgYXJlIGluY29ycmVjdC48L3NwYW4+LFxuICBbUG9wdXBUZXh0LkNoZWNrXTogPHNwYW4+Q29ycmVjdCBzbyBmYXIhPC9zcGFuPixcbiAgW1BvcHVwVGV4dC5OZXR3b3JrRXJyb3JdOiAoXG4gICAgPHNwYW4+XG4gICAgICBZb3VyIG5ldHdvcmsgY29ubmVjdGlvbiBpcyBkb3duLiBQbGVhc2UgY2hlY2sgeW91ciBuZXR3b3JrIGFuZCB0cnkgbGF0ZXIuXG4gICAgPC9zcGFuPlxuICApLFxufTtcblxuZXhwb3J0IGludGVyZmFjZSBQb3B1cFByb3BzIHtcbiAgdGV4dD86IFBvcHVwVGV4dDtcbiAgaGlkZGVuOiBib29sZWFuO1xuICBidXR0b25zPzogR2FtZUJ1dHRvblByb3BzW107XG59XG5cbmV4cG9ydCBjb25zdCBQb3B1cDogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgdGV4dCwgaGlkZGVuLCBidXR0b25zIH0gPSB1c2VTZWxlY3RvcihnZXRQb3B1cFByb3BzKTtcbiAgY29uc3QgaXNIaWRkZW4gPSBoaWRkZW4gfHwgIXRleHQgfHwgIWJ1dHRvbnM7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y3goXCJtZXNzYWdlLXBvcHVwXCIsIGlzSGlkZGVuICYmIFwiaGlkZGVuXCIpfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZVwiPnt0ZXh0ICYmIFBvcHVwVGV4dE1hcFt0ZXh0XX08L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9uc1wiPntidXR0b25zICYmIG1hcFByb3BzVG9HYW1lQnV0dG9ucyhidXR0b25zKX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iLCJpbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vZHVja3Mvc3RvcmVcIjtcblxuZXhwb3J0IGNvbnN0IGdldFBvcHVwUHJvcHMgPSAoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUucG9wdXA7XG4iLCJpbXBvcnQgeyBSZWR1Y2VyIH0gZnJvbSBcInJlZHV4XCI7XG5pbXBvcnQgeyBDZWxsTW9kZSwgVGFibGVDZWxsc01hcCB9IGZyb20gXCIuLi8uLi8uLi9jb25zdHNcIjtcbmltcG9ydCB7XG4gIFRvZ2dsZUNlbGxNb2RlQWN0aW9uLFxuICBTZXRDZWxsUHJvcHNBY3Rpb24sXG4gIFRPR0dMRV9DRUxMX01PREUsXG4gIFNFVF9DRUxMX1BST1BTLFxuICBSZXNldEdhbWVUb29sc0FjdGlvbixcbiAgUkVTRVRfR0FNRV9UT09MUyxcbiAgU2V0R2FtZVN0YXRlQWN0aW9uLFxuICBTRVRfR0FNRV9TVEFURSxcbiAgSGlnaExpZ2h0Q2VsbHNBY3Rpb24sXG4gIEhJR0hMSUdIVF9DRUxMUyxcbiAgU2V0Q2VsbFZhbHVlQWN0aW9uLFxuICBTRVRfQ0VMTF9WQUxVRSxcbn0gZnJvbSBcIi4vYWN0aW9uc1wiO1xuaW1wb3J0IHtcbiAgU0VUX0NVUlJFTlRfR0FNRSxcbiAgU2V0Q3VycmVudEdhbWVBY3Rpb24sXG59IGZyb20gXCIuLi8uLi9hcHAvZHVja3MvYWN0aW9uc1wiO1xuaW1wb3J0IHsgdXBkYXRlQ2VsbHNDZWxsTW9kZSwgdXBkYXRlQ2VsbHNIaWdobGlnaHQgfSBmcm9tIFwiLi4vaGVscGVycy9oZWxwZXJzXCI7XG5pbXBvcnQgeyBnZXRTdG9yYWdlS2V5LCBTdG9yYWdlS2V5cyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9sb2NhbFN0b3JhZ2VcIjtcblxuZXhwb3J0IGVudW0gR2FtZVN0YXRlIHtcbiAgTmV3LFxuICBQbGF5aW5nLFxuICBXaW4sXG4gIEdhbWVPdmVyLFxufVxuXG5pbnRlcmZhY2UgU3RhdGUge1xuICBjZWxsTW9kZTogQ2VsbE1vZGU7XG4gIGNlbGxQcm9wczogVGFibGVDZWxsc01hcDtcbiAgZ2FtZVN0YXRlOiBHYW1lU3RhdGU7XG59XG5cbnR5cGUgQWN0aW9ucyA9XG4gIHwgVG9nZ2xlQ2VsbE1vZGVBY3Rpb25cbiAgfCBTZXRDZWxsUHJvcHNBY3Rpb25cbiAgfCBTZXRDdXJyZW50R2FtZUFjdGlvblxuICB8IFJlc2V0R2FtZVRvb2xzQWN0aW9uXG4gIHwgSGlnaExpZ2h0Q2VsbHNBY3Rpb25cbiAgfCBTZXRHYW1lU3RhdGVBY3Rpb25cbiAgfCBTZXRDZWxsVmFsdWVBY3Rpb247XG5cbmNvbnN0IGluaXRpYWxTdGF0ZTogU3RhdGUgPSB7XG4gIGNlbGxNb2RlOiBDZWxsTW9kZS5QZW5jaWwsXG4gIGNlbGxQcm9wczoge30sXG4gIGdhbWVTdGF0ZTogR2FtZVN0YXRlLk5ldyxcbn07XG5cbmV4cG9ydCBjb25zdCBnYW1lUmVkdWNlcjogUmVkdWNlcjxTdGF0ZSwgQWN0aW9ucz4gPSAoXG4gIHN0YXRlID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb25cbikgPT4ge1xuICBjb25zdCB7IGNlbGxNb2RlLCBjZWxsUHJvcHMgfSA9IHN0YXRlO1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBUT0dHTEVfQ0VMTF9NT0RFOiB7XG4gICAgICBjb25zdCBuZXdDZWxsTW9kZSA9XG4gICAgICAgIGNlbGxNb2RlID09PSBDZWxsTW9kZS5QZW5jaWwgPyBDZWxsTW9kZS5Ob3RlcyA6IENlbGxNb2RlLlBlbmNpbDtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBjZWxsTW9kZTogbmV3Q2VsbE1vZGUsXG4gICAgICAgIGNlbGxQcm9wczogdXBkYXRlQ2VsbHNDZWxsTW9kZShjZWxsUHJvcHMsIG5ld0NlbGxNb2RlKSxcbiAgICAgIH07XG4gICAgfVxuICAgIGNhc2UgSElHSExJR0hUX0NFTExTOiB7XG4gICAgICBjb25zdCBkaXNhYmxlSGlnaGxpZ2h0aW5nID0gZ2V0U3RvcmFnZUtleShcbiAgICAgICAgU3RvcmFnZUtleXMuRGlzYWJsZUhpZ2hsaWdodGluZ1xuICAgICAgKTtcbiAgICAgIGlmIChkaXNhYmxlSGlnaGxpZ2h0aW5nKSB7XG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGNlbGxQcm9wczogdXBkYXRlQ2VsbHNIaWdobGlnaHQoY2VsbFByb3BzLCBhY3Rpb24ucGF5bG9hZCksXG4gICAgICB9O1xuICAgIH1cbiAgICBjYXNlIFNFVF9DRUxMX1ZBTFVFOiB7XG4gICAgICBjb25zdCB7IHBvcywgdmFsdWUgfSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgY29uc3QgcHJvcHMgPSBzdGF0ZS5jZWxsUHJvcHNbcG9zXTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGNlbGxQcm9wczoge1xuICAgICAgICAgIC4uLnN0YXRlLmNlbGxQcm9wcyxcbiAgICAgICAgICBbcG9zXToge1xuICAgICAgICAgICAgLi4ucHJvcHMsXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIG1vZGU6IHN0YXRlLmNlbGxNb2RlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH1cbiAgICBjYXNlIFNFVF9HQU1FX1NUQVRFOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgZ2FtZVN0YXRlOiBhY3Rpb24ucGF5bG9hZCxcbiAgICAgIH07XG4gICAgfVxuICAgIGNhc2UgU0VUX0NFTExfUFJPUFM6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBjZWxsUHJvcHM6IGFjdGlvbi5wYXlsb2FkLFxuICAgICAgfTtcbiAgICB9XG4gICAgY2FzZSBSRVNFVF9HQU1FX1RPT0xTOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgY2VsbE1vZGU6IENlbGxNb2RlLlBlbmNpbCxcbiAgICAgIH07XG4gICAgfVxuICAgIGNhc2UgU0VUX0NVUlJFTlRfR0FNRToge1xuICAgICAgcmV0dXJuIGluaXRpYWxTdGF0ZTtcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbiAgfVxufTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFwiLi9pY29ucy5sZXNzXCI7XG5cbmV4cG9ydCBjb25zdCBjcm9zc1N2ZyA9IChcbiAgPHN2ZyB2aWV3Qm94PVwiMCAwIDMwIDMwXCIgY2xhc3NOYW1lPVwiaWNvblwiPlxuICAgIDxwYXRoXG4gICAgICBkPXtgbTI5LjA4MjIwMiwyMy43MDI2NzFjMCwwIDAsMCAwLDBsLTguNzAyODIzLC04LjcwMjgyM2w4LjcwMjgyMywtOC43MDI4MjNjMCwwIDAsMCAwLFxuICAgICAgMGMwLjA5MzcxMiwtMC4wOTM3MTIgMC4xNjE2MDYsLTAuMjAzNjgxIDAuMjA0NjM3LC0wLjMxOTM4N2MwLjExODU3NSwtMC4zMTg0MzEgMC4wNTA2ODEsXG4gICAgICAtMC42OTEzNjggLTAuMjA1NTk0LC0wLjk0NzY0M2wtNC4xMTA5MTUsLTQuMTEwOTE1Yy0wLjI1NjI3NSwtMC4yNTYyNzUgLTAuNjI5MjEyLFxuICAgICAgLTAuMzI0MTY4IC0wLjk0NzY0MywtMC4yMDQ2MzdjLTAuMTE2NjYyLDAuMDQzMDMxIC0wLjIyNTY3NSwwLjExMDkyNSAtMC4zMjAzNDMsMC4yMDQ2MzdjMCxcbiAgICAgIDAgMCwwIDAsMGwtOC43MDI4MjMsOC43MDI4MjNsLTguNzAyODIzLC04LjcwMjgyM2MwLDAgMCwwIDAsMGMtMC4wOTM3MTIsLTAuMDkzNzEyIC0wLjIwMzY4MSxcbiAgICAgIC0wLjE2MTYwNiAtMC4zMTkzODcsLTAuMjA0NjM3Yy0wLjMxODQzMSwtMC4xMTg1NzUgLTAuNjkxMzY4LC0wLjA1MDY4MSAtMC45NDc2NDMsMC4yMDQ2MzdsLTQuMTEwOTE1LFxuICAgICAgNC4xMTA5MTVjLTAuMjU2Mjc1LDAuMjU2Mjc1IC0wLjMyNDE2OCwwLjYyOTIxMiAtMC4yMDU1OTQsMC45NDc2NDNjMC4wNDMwMzEsMC4xMTY2NjIgMC4xMTA5MjUsXG4gICAgICAwLjIyNTY3NSAwLjIwNDYzNywwLjMxOTM4N2MwLDAgMCwwIDAsMGw4LjcwMjgyMyw4LjcwMjgyM2wtOC43MDI4MjMsOC43MDI4MjNjMCwwIDAsMCAwLDBjLTAuMDkzNzEyLFxuICAgICAgMC4wOTM3MTIgLTAuMTYxNjA2LDAuMjAzNjgxIC0wLjIwNDYzNywwLjMxOTM4N2MtMC4xMTg1NzUsMC4zMTg0MzEgLTAuMDUwNjgxLDAuNjkxMzY4IDAuMjA1NTk0LFxuICAgICAgMC45NDc2NDNsNC4xMTA5MTUsNC4xMTA5MTVjMC4yNTYyNzUsMC4yNTYyNzUgMC42MjkyMTIsMC4zMjQxNjggMC45NDc2NDMsMC4yMDU1OTRjMC4xMTY2NjIsXG4gICAgICAtMC4wNDMwMzEgMC4yMjU2NzUsLTAuMTEwOTI1IDAuMzE5Mzg3LC0wLjIwNDYzN2MwLDAgMCwwIDAsMGw4LjcwMjgyMywtOC43MDI4MjNsOC43MDI4MjMsOC43MDI4MjNjMCxcbiAgICAgIDAgMCwwIDAsMGMwLjA5MzcxMiwwLjA5MzcxMiAwLjIwMzY4MSwwLjE2MTYwNiAwLjMxOTM4NywwLjIwNDYzN2MwLjMxODQzMSwwLjExODU3NSAwLjY5MTM2OCxcbiAgICAgIDAuMDUwNjgxIDAuOTQ3NjQzLC0wLjIwNTU5NGw0LjExMDkxNSwtNC4xMTA5MTVjMC4yNTYyNzUsLTAuMjU2Mjc1IDAuMzI0MTY4LC0wLjYyOTIxMiAwLjIwNTU5NCxcbiAgICAgIC0wLjk0NzY0M2MtMC4wNDMwMzEsLTAuMTE2NjYyIC0wLjExMDkyNSwtMC4yMjU2NzUgLTAuMjA0NjM3LC0wLjMxOTM4N2wwLjAwMDk1NiwwemB9XG4gICAgPjwvcGF0aD5cbiAgPC9zdmc+XG4pO1xuXG5leHBvcnQgY29uc3QgYXJyb3dTdmcgPSAoXG4gIDxzdmcgdmlld0JveD1cIjAgMCAzMCAzMFwiIGNsYXNzTmFtZT1cImljb25cIj5cbiAgICA8cGF0aCBkPVwibTI5LjUzMTUsMTVsLTE0LjA2MywtMTQuMDYzbDAsOC40MzhsLTE1LDBsMCwxMS4yNWwxNSwwbDAsOC40MzhsMTQuMDYzLC0xNC4wNjN6XCI+PC9wYXRoPlxuICA8L3N2Zz5cbik7XG5cbmV4cG9ydCBjb25zdCBjaGVja1N2ZyA9IChcbiAgPHN2ZyB2aWV3Qm94PVwiMCAwIDMwIDMwXCIgY2xhc3NOYW1lPVwiaWNvblwiPlxuICAgIDxwYXRoIGQ9XCJNMjUuMzEzIDMuNzVsLTE0LjA2MyAxNC4wNjMtNi41NjMtNi41NjMtNC42ODggNC42ODggMTEuMjUgMTEuMjUgMTguNzUtMTguNzV6XCI+PC9wYXRoPlxuICA8L3N2Zz5cbik7XG5cbmV4cG9ydCBjb25zdCBtZW51U3ZnID0gKFxuICA8c3ZnIHZpZXdCb3g9XCIwIDUgMzAgMzBcIiBjbGFzc05hbWU9XCJpY29uXCI+XG4gICAgPHBhdGggZD1cIk0xLjg3NSA1LjYyNWgyNi4yNXY1LjYyNWgtMjYuMjV6TTEuODc1IDEzLjEyNWgyNi4yNXY1LjYyNWgtMjYuMjV6TTEuODc1IDIwLjYyNWgyNi4yNXY1LjYyNWgtMjYuMjV6XCI+PC9wYXRoPlxuICA8L3N2Zz5cbik7XG5cbmV4cG9ydCBjb25zdCBzcGlubmVyU3ZnID0gKFxuICA8c3ZnIGNsYXNzTmFtZT1cImljb24gc3Bpbm5lclwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIj5cbiAgICA8cGF0aCBkPVwiTTE2IDkuNDcyYy0xLjAzMCAwLTEuODY1LTAuODM1LTEuODY1LTEuODY1di01LjU5NmMwLTEuMDMwIDAuODM1LTEuODY1IDEuODY1LTEuODY1czEuODY1IDAuODM1IDEuODY1IDEuODY1djUuNTk2YzAgMS4wMzAtMC44MzUgMS44NjUtMS44NjUgMS44NjV6XCI+PC9wYXRoPlxuICAgIDxwYXRoIGQ9XCJNMTYgMzEuMTU1Yy0wLjY0NCAwLTEuMTY2LTAuNTIyLTEuMTY2LTEuMTY2di01LjU5NmMwLTAuNjQ0IDAuNTIyLTEuMTY2IDEuMTY2LTEuMTY2czEuMTY2IDAuNTIyIDEuMTY2IDEuMTY2djUuNTk2YzAgMC42NDQtMC41MjIgMS4xNjYtMS4xNjYgMS4xNjZ6XCI+PC9wYXRoPlxuICAgIDxwYXRoIGQ9XCJNMTEuODA1IDEwLjQ4Yy0wLjYwNCAwLTEuMTkyLTAuMzE0LTEuNTE2LTAuODc1bC0yLjc5OC00Ljg0NmMtMC40ODMtMC44MzYtMC4xOTYtMS45MDYgMC42NC0yLjM4OXMxLjkwNi0wLjE5NiAyLjM4OSAwLjY0bDIuNzk4IDQuODQ2YzAuNDgzIDAuODM2IDAuMTk2IDEuOTA2LTAuNjQgMi4zODktMC4yNzUgMC4xNTktMC41NzYgMC4yMzUtMC44NzMgMC4yMzV6XCI+PC9wYXRoPlxuICAgIDxwYXRoIGQ9XCJNMjIuOTk1IDI5LjE2NGMtMC4zNjMgMC0wLjcxNS0wLjE4OC0wLjkxLTAuNTI1bC0yLjc5OC00Ljg0NmMtMC4yOS0wLjUwMi0wLjExOC0xLjE0MyAwLjM4NC0xLjQzM3MxLjE0My0wLjExOCAxLjQzMyAwLjM4NGwyLjc5OCA0Ljg0NmMwLjI5IDAuNTAyIDAuMTE4IDEuMTQzLTAuMzg0IDEuNDMzLTAuMTY1IDAuMDk1LTAuMzQ2IDAuMTQxLTAuNTI0IDAuMTQxelwiPjwvcGF0aD5cbiAgICA8cGF0aCBkPVwiTTguNzI5IDEzLjQzNmMtMC4yNzcgMC0wLjU1Ny0wLjA3MC0wLjgxNC0wLjIxOWwtNC44NDYtMi43OThjLTAuNzgxLTAuNDUxLTEuMDQ4LTEuNDQ5LTAuNTk3LTIuMjI5czEuNDQ5LTEuMDQ4IDIuMjI5LTAuNTk3bDQuODQ2IDIuNzk4YzAuNzgxIDAuNDUxIDEuMDQ4IDEuNDQ5IDAuNTk3IDIuMjI5LTAuMzAyIDAuNTI0LTAuODUxIDAuODE2LTEuNDE1IDAuODE2elwiPjwvcGF0aD5cbiAgICA8cGF0aCBkPVwiTTI4LjExNCAyMy45MjdjLTAuMTU4IDAtMC4zMTktMC4wNDAtMC40NjUtMC4xMjVsLTQuODQ2LTIuNzk4Yy0wLjQ0Ni0wLjI1OC0wLjU5OS0wLjgyOC0wLjM0MS0xLjI3NHMwLjgyOC0wLjU5OSAxLjI3NC0wLjM0MWw0Ljg0NiAyLjc5OGMwLjQ0NiAwLjI1OCAwLjU5OSAwLjgyOCAwLjM0MSAxLjI3NC0wLjE3MyAwLjI5OS0wLjQ4NiAwLjQ2Ni0wLjgwOSAwLjQ2NnpcIj48L3BhdGg+XG4gICAgPHBhdGggZD1cIk03LjYwNyAxNy41MTVoLTUuNTk2Yy0wLjgzNyAwLTEuNTE2LTAuNjc4LTEuNTE2LTEuNTE1czAuNjc4LTEuNTE1IDEuNTE2LTEuNTE1aDUuNTk2YzAuODM3IDAgMS41MTYgMC42NzggMS41MTYgMS41MTVzLTAuNjc4IDEuNTE1LTEuNTE2IDEuNTE1elwiPjwvcGF0aD5cbiAgICA8cGF0aCBkPVwiTTI5Ljk4OSAxNi45MzNjLTAgMCAwIDAgMCAwaC01LjU5NmMtMC41MTUtMC0wLjkzMy0wLjQxOC0wLjkzMy0wLjkzM3MwLjQxOC0wLjkzMyAwLjkzMy0wLjkzM2MwIDAgMCAwIDAgMGg1LjU5NmMwLjUxNSAwIDAuOTMzIDAuNDE4IDAuOTMzIDAuOTMzcy0wLjQxOCAwLjkzMy0wLjkzMyAwLjkzM3pcIj48L3BhdGg+XG4gICAgPHBhdGggZD1cIk0zLjg4NiAyNC4zOTRjLTAuNDgzIDAtMC45NTQtMC4yNTEtMS4yMTMtMC43LTAuMzg2LTAuNjY5LTAuMTU3LTEuNTI1IDAuNTEyLTEuOTExbDQuODQ2LTIuNzk4YzAuNjY5LTAuMzg3IDEuNTI1LTAuMTU3IDEuOTExIDAuNTEyczAuMTU3IDEuNTI1LTAuNTEyIDEuOTExbC00Ljg0NiAyLjc5OGMtMC4yMiAwLjEyNy0wLjQ2MSAwLjE4OC0wLjY5OCAwLjE4OHpcIj48L3BhdGg+XG4gICAgPHBhdGggZD1cIk0yMy4yNyAxMi43MzZjLTAuMzIyIDAtMC42MzYtMC4xNjctMC44MDktMC40NjYtMC4yNTgtMC40NDYtMC4xMDUtMS4wMTYgMC4zNDEtMS4yNzRsNC44NDYtMi43OThjMC40NDYtMC4yNTcgMS4wMTYtMC4xMDUgMS4yNzQgMC4zNDFzMC4xMDUgMS4wMTYtMC4zNDEgMS4yNzRsLTQuODQ2IDIuNzk4Yy0wLjE0NyAwLjA4NS0wLjMwNyAwLjEyNS0wLjQ2NSAwLjEyNXpcIj48L3BhdGg+XG4gICAgPHBhdGggZD1cIk05LjAwNCAyOS4zOTdjLTAuMjE4IDAtMC40MzgtMC4wNTUtMC42NC0wLjE3Mi0wLjYxMy0wLjM1NC0wLjgyMy0xLjEzOC0wLjQ2OS0xLjc1MmwyLjc5OC00Ljg0NmMwLjM1NC0wLjYxMyAxLjEzOC0wLjgyMyAxLjc1Mi0wLjQ2OXMwLjgyMyAxLjEzOCAwLjQ2OSAxLjc1MmwtMi43OTggNC44NDZjLTAuMjM3IDAuNDExLTAuNjY4IDAuNjQxLTEuMTEyIDAuNjQxelwiPjwvcGF0aD5cbiAgICA8cGF0aCBkPVwiTTIwLjE5NiA5LjY2NGMtMC4xNTggMC0wLjMxOS0wLjA0MC0wLjQ2NS0wLjEyNS0wLjQ0Ni0wLjI1OC0wLjU5OS0wLjgyOC0wLjM0MS0xLjI3NGwyLjc5OC00Ljg0NmMwLjI1OC0wLjQ0NiAwLjgyOC0wLjU5OSAxLjI3NC0wLjM0MXMwLjU5OSAwLjgyOCAwLjM0MSAxLjI3NGwtMi43OTggNC44NDZjLTAuMTczIDAuMjk5LTAuNDg2IDAuNDY2LTAuODA5IDAuNDY2elwiPjwvcGF0aD5cbiAgPC9zdmc+XG4pO1xuIiwiaW1wb3J0IHsgQWN0aW9uV2l0aFBheWxvYWQgfSBmcm9tIFwiLi4vLi4vLi4vY29uc3RzXCI7XG5pbXBvcnQgeyBQb3B1cFByb3BzLCBQb3B1cFRleHQgfSBmcm9tIFwiLi4vLi4vcG9wdXAvUG9wdXBcIjtcbmltcG9ydCB7IEFjdGlvbiwgRGlzcGF0Y2ggfSBmcm9tIFwicmVkdXhcIjtcbmltcG9ydCB7IEdhbWVCdXR0b25TaXplIH0gZnJvbSBcIi4uLy4uL2J1dHRvbnMvQnV0dG9uXCI7XG5pbXBvcnQgeyBjaGVja1N2ZyB9IGZyb20gXCIuLi8uLi9zdmcvSWNvbnNcIjtcbmltcG9ydCB7IHVwZGF0ZUdhbWVTdGF0ZSB9IGZyb20gXCIuLi8uLi9nYW1lLXBhZ2UvZHVja3MvYWN0aW9uc1wiO1xuaW1wb3J0IHsgR2FtZVN0YXRlIH0gZnJvbSBcIi4uLy4uL2dhbWUtcGFnZS9kdWNrcy9yZWR1Y2VyXCI7XG5pbXBvcnQgeyB0b2dnbGVTaWRlTWVudSB9IGZyb20gXCIuLi8uLi9zaWRlLW1lbnUvZHVja3MvYWN0aW9uc1wiO1xuXG5leHBvcnQgY29uc3QgU0hPV19QT1BVUCA9IFwiQHBvcHVwL1NIT1dfUE9QVVBcIjtcbmV4cG9ydCBjb25zdCBISURFX1BPUFVQID0gXCJAcG9wdXAvSElERV9QT1BVUFwiO1xuXG5leHBvcnQgdHlwZSBTaG93UG9wdXBBY3Rpb24gPSBBY3Rpb25XaXRoUGF5bG9hZDxcbiAgdHlwZW9mIFNIT1dfUE9QVVAsXG4gIE9taXQ8UG9wdXBQcm9wcywgXCJoaWRkZW5cIj5cbj47XG5leHBvcnQgY29uc3Qgc2hvd1BvcHVwID0gKFxuICBwYXlsb2FkOiBPbWl0PFBvcHVwUHJvcHMsIFwiaGlkZGVuXCI+XG4pOiBTaG93UG9wdXBBY3Rpb24gPT4gKHtcbiAgdHlwZTogU0hPV19QT1BVUCxcbiAgcGF5bG9hZCxcbn0pO1xuXG5leHBvcnQgdHlwZSBIaWRlUG9wdXBBY3Rpb24gPSBBY3Rpb248dHlwZW9mIEhJREVfUE9QVVA+O1xuZXhwb3J0IGNvbnN0IGhpZGVQb3B1cCA9ICgpOiBIaWRlUG9wdXBBY3Rpb24gPT4gKHtcbiAgdHlwZTogSElERV9QT1BVUCxcbn0pO1xuXG5leHBvcnQgY29uc3Qgc2hvd1dpblBvcHVwID0gKGRpc3BhdGNoOiBEaXNwYXRjaCkgPT4ge1xuICBkaXNwYXRjaChcbiAgICBzaG93UG9wdXAoe1xuICAgICAgdGV4dDogUG9wdXBUZXh0LldpbixcbiAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHNpemU6IEdhbWVCdXR0b25TaXplLlNtYWxsLFxuICAgICAgICAgIGljb246IGNoZWNrU3ZnLFxuICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGRpc3BhdGNoKGhpZGVQb3B1cCgpKSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSlcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzaG93Q2hlY2tQb3B1cCA9IChkaXNwYXRjaDogRGlzcGF0Y2gsIGhhc0R1cGxpY2F0ZXM6IGJvb2xlYW4pID0+IHtcbiAgZGlzcGF0Y2goXG4gICAgc2hvd1BvcHVwKHtcbiAgICAgIHRleHQ6IGhhc0R1cGxpY2F0ZXMgPyBQb3B1cFRleHQuRHVwbGljYXRlcyA6IFBvcHVwVGV4dC5DaGVjayxcbiAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHNpemU6IEdhbWVCdXR0b25TaXplLlNtYWxsLFxuICAgICAgICAgIGljb246IGNoZWNrU3ZnLFxuICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGRpc3BhdGNoKGhpZGVQb3B1cCgpKSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSlcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzaG93UmVzZXRQb3B1cCA9IChkaXNwYXRjaDogRGlzcGF0Y2g8YW55PikgPT4ge1xuICBkaXNwYXRjaCh0b2dnbGVTaWRlTWVudSgpKTtcbiAgZGlzcGF0Y2goXG4gICAgc2hvd1BvcHVwKHtcbiAgICAgIHRleHQ6IFBvcHVwVGV4dC5SZXNldCxcbiAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHNpemU6IEdhbWVCdXR0b25TaXplLlNtYWxsLFxuICAgICAgICAgIHZhbHVlOiBcIlllc1wiLFxuICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGRpc3BhdGNoKHVwZGF0ZUdhbWVTdGF0ZShHYW1lU3RhdGUuTmV3KSksXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBzaXplOiBHYW1lQnV0dG9uU2l6ZS5TbWFsbCxcbiAgICAgICAgICB2YWx1ZTogXCJOb1wiLFxuICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGRpc3BhdGNoKGhpZGVQb3B1cCgpKSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSlcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzaG93U29sdmVQb3B1cCA9IChkaXNwYXRjaDogRGlzcGF0Y2g8YW55PikgPT4ge1xuICBkaXNwYXRjaCh0b2dnbGVTaWRlTWVudSgpKTtcbiAgZGlzcGF0Y2goXG4gICAgc2hvd1BvcHVwKHtcbiAgICAgIHRleHQ6IFBvcHVwVGV4dC5Tb2x2ZSxcbiAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHNpemU6IEdhbWVCdXR0b25TaXplLlNtYWxsLFxuICAgICAgICAgIHZhbHVlOiBcIlllc1wiLFxuICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGRpc3BhdGNoKHVwZGF0ZUdhbWVTdGF0ZShHYW1lU3RhdGUuR2FtZU92ZXIpKSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHNpemU6IEdhbWVCdXR0b25TaXplLlNtYWxsLFxuICAgICAgICAgIHZhbHVlOiBcIk5vXCIsXG4gICAgICAgICAgb25DbGljazogKCkgPT4gZGlzcGF0Y2goaGlkZVBvcHVwKCkpLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9KVxuICApO1xufTtcbiIsImltcG9ydCB7XG4gIEFjdGlvbldpdGhQYXlsb2FkLFxuICBUYWJsZUNlbGxzTWFwLFxuICBBcHBUaHVuayxcbiAgQ2VsbENvb3JkaW5hdGVzLFxuICBDZWxsTW9kZSxcbiAgQ2VsbFByb3BzLFxufSBmcm9tIFwiLi4vLi4vLi4vY29uc3RzXCI7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tIFwicmVkdXhcIjtcbmltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi4vLi4vLi4vZ2VuZXJhdG9yL2dlbmVyYXRvclwiO1xuaW1wb3J0IHsgZ2V0RHVwbGljYXRlcyB9IGZyb20gXCIuLi9oZWxwZXJzL2dhbWVUYWJsZVwiO1xuaW1wb3J0IHsgZ2V0Q3VycmVudEdhbWUgfSBmcm9tIFwiLi4vLi4vYXBwL2R1Y2tzL3NlbGVjdG9yc1wiO1xuaW1wb3J0IHtcbiAgaGFzSW52YWxpZEVuZGdhbWVDZWxscyxcbiAgZ2V0TmV3Q2VsbFByb3BzLFxuICBnZXRFbmRnYW1lQ2VsbFByb3BzLFxuICBjYW5BdXRvbWF0aWNhbGx5VXBkYXRlTm90ZXNDZWxscyxcbiAgcmVzZXRDZWxsU3RhdHVzLFxufSBmcm9tIFwiLi4vaGVscGVycy9oZWxwZXJzXCI7XG5pbXBvcnQgeyBHYW1lU3RhdGUgfSBmcm9tIFwiLi9yZWR1Y2VyXCI7XG5pbXBvcnQgeyBnZXRDZWxsUHJvcHMsIGdldENlbGxNb2RlIH0gZnJvbSBcIi4vc2VsZWN0b3JzXCI7XG5pbXBvcnQgeyByZW1vdmVEdXBsaWNhdGVOb3Rlc0NlbGxzIH0gZnJvbSBcIi4uL2hlbHBlcnMvZ2FtZU5vdGVzQ2VsbHNcIjtcbmltcG9ydCB7IHJlbW92ZUR1cGxpY2F0ZXMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvZ2VuZXJhbFV0aWxzXCI7XG5pbXBvcnQgeyBzaG93V2luUG9wdXAsIHNob3dDaGVja1BvcHVwIH0gZnJvbSBcIi4uLy4uL3BvcHVwL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IHRvZ2dsZVNpZGVNZW51IH0gZnJvbSBcIi4uLy4uL3NpZGUtbWVudS9kdWNrcy9hY3Rpb25zXCI7XG5cbmV4cG9ydCBjb25zdCBUT0dHTEVfQ0VMTF9NT0RFID0gXCJAZ2FtZS9UT0dHTEVfQ0VMTF9NT0RFXCI7XG5leHBvcnQgY29uc3QgU0VUX0NFTExfUFJPUFMgPSBcIkBnYW1lL1NFVF9DRUxMX1BST1BTXCI7XG5leHBvcnQgY29uc3QgUkVTRVRfR0FNRV9UT09MUyA9IFwiQGdhbWUvUkVTRVRfR0FNRV9UT09MU1wiO1xuZXhwb3J0IGNvbnN0IEhJR0hMSUdIVF9DRUxMUyA9IFwiQGdhbWUvSElHSExJR0hUX0NFTExTXCI7XG5leHBvcnQgY29uc3QgU0VUX0dBTUVfU1RBVEUgPSBcIkBnYW1lL1NFVF9HQU1FX1NUQVRFXCI7XG5leHBvcnQgY29uc3QgU0VUX0NFTExfVkFMVUUgPSBcIkBnYW1lL1NFVF9DRUxMX1ZBTFVFXCI7XG5cbmV4cG9ydCB0eXBlIFRvZ2dsZUNlbGxNb2RlQWN0aW9uID0gQWN0aW9uPHR5cGVvZiBUT0dHTEVfQ0VMTF9NT0RFPjtcbmV4cG9ydCBjb25zdCB0b2dnbGVDZWxsTW9kZSA9ICgpOiBUb2dnbGVDZWxsTW9kZUFjdGlvbiA9PiAoe1xuICB0eXBlOiBUT0dHTEVfQ0VMTF9NT0RFLFxufSk7XG5cbmV4cG9ydCB0eXBlIFNldENlbGxQcm9wc0FjdGlvbiA9IEFjdGlvbldpdGhQYXlsb2FkPFxuICB0eXBlb2YgU0VUX0NFTExfUFJPUFMsXG4gIFRhYmxlQ2VsbHNNYXBcbj47XG5leHBvcnQgY29uc3Qgc2V0Q2VsbFByb3BzID0gKHBheWxvYWQ6IFRhYmxlQ2VsbHNNYXApOiBTZXRDZWxsUHJvcHNBY3Rpb24gPT4gKHtcbiAgdHlwZTogU0VUX0NFTExfUFJPUFMsXG4gIHBheWxvYWQsXG59KTtcblxuZXhwb3J0IHR5cGUgUmVzZXRHYW1lVG9vbHNBY3Rpb24gPSBBY3Rpb248dHlwZW9mIFJFU0VUX0dBTUVfVE9PTFM+O1xuZXhwb3J0IGNvbnN0IHJlc2V0R2FtZVRvb2xzID0gKCk6IFJlc2V0R2FtZVRvb2xzQWN0aW9uID0+ICh7XG4gIHR5cGU6IFJFU0VUX0dBTUVfVE9PTFMsXG59KTtcblxuZXhwb3J0IHR5cGUgSGlnaExpZ2h0Q2VsbHNBY3Rpb24gPSBBY3Rpb25XaXRoUGF5bG9hZDxcbiAgdHlwZW9mIEhJR0hMSUdIVF9DRUxMUyxcbiAgQ2VsbFByb3BzXG4+O1xuZXhwb3J0IGNvbnN0IGhpZ2hMaWdodENlbGxzID0gKHBheWxvYWQ6IENlbGxQcm9wcyk6IEhpZ2hMaWdodENlbGxzQWN0aW9uID0+ICh7XG4gIHR5cGU6IEhJR0hMSUdIVF9DRUxMUyxcbiAgcGF5bG9hZCxcbn0pO1xuXG5leHBvcnQgdHlwZSBTZXRHYW1lU3RhdGVBY3Rpb24gPSBBY3Rpb25XaXRoUGF5bG9hZDxcbiAgdHlwZW9mIFNFVF9HQU1FX1NUQVRFLFxuICBHYW1lU3RhdGVcbj47XG5leHBvcnQgY29uc3Qgc2V0R2FtZVN0YXRlID0gKHBheWxvYWQ6IEdhbWVTdGF0ZSk6IFNldEdhbWVTdGF0ZUFjdGlvbiA9PiAoe1xuICB0eXBlOiBTRVRfR0FNRV9TVEFURSxcbiAgcGF5bG9hZCxcbn0pO1xuXG5leHBvcnQgdHlwZSBTZXRDZWxsVmFsdWVBY3Rpb24gPSBBY3Rpb25XaXRoUGF5bG9hZDxcbiAgdHlwZW9mIFNFVF9DRUxMX1ZBTFVFLFxuICB7IHBvczogbnVtYmVyOyB2YWx1ZTogbnVtYmVyIH1cbj47XG5leHBvcnQgY29uc3Qgc2V0Q2VsbFZhbHVlID0gKHBheWxvYWQ6IHtcbiAgcG9zOiBudW1iZXI7XG4gIHZhbHVlOiBudW1iZXI7XG59KTogU2V0Q2VsbFZhbHVlQWN0aW9uID0+ICh7XG4gIHR5cGU6IFNFVF9DRUxMX1ZBTFVFLFxuICBwYXlsb2FkLFxufSk7XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVHYW1lU3RhdGUgPSAoZ2FtZVN0YXRlOiBHYW1lU3RhdGUpOiBBcHBUaHVuayA9PiAoXG4gIGRpc3BhdGNoLFxuICBnZXRTdGF0ZVxuKSA9PiB7XG4gIGNvbnN0IGdhbWUgPSBnZXRDdXJyZW50R2FtZShnZXRTdGF0ZSgpKTtcbiAgY29uc3QgY2VsbFByb3BzID0gZ2V0Q2VsbFByb3BzKGdldFN0YXRlKCkpO1xuXG4gIGlmIChnYW1lU3RhdGUgPT09IEdhbWVTdGF0ZS5OZXcgJiYgZ2FtZSkge1xuICAgIGRpc3BhdGNoKHNldENlbGxQcm9wcyhnZXROZXdDZWxsUHJvcHMoZ2FtZS5tYXNrKSkpO1xuICAgIGRpc3BhdGNoKHJlc2V0R2FtZVRvb2xzKCkpO1xuICB9IGVsc2UgaWYgKGdhbWVTdGF0ZSA9PT0gR2FtZVN0YXRlLkdhbWVPdmVyICYmIGdhbWUpIHtcbiAgICBkaXNwYXRjaChzZXRDZWxsUHJvcHMoZ2V0RW5kZ2FtZUNlbGxQcm9wcyhnYW1lLm1hdHJpeCwgY2VsbFByb3BzKSkpO1xuICAgIGRpc3BhdGNoKHJlc2V0R2FtZVRvb2xzKCkpO1xuICB9IGVsc2UgaWYgKGdhbWVTdGF0ZSA9PT0gR2FtZVN0YXRlLldpbikge1xuICAgIGRpc3BhdGNoKHJlc2V0R2FtZVRvb2xzKCkpO1xuICAgIHNob3dXaW5Qb3B1cChkaXNwYXRjaCk7XG4gIH1cblxuICBkaXNwYXRjaChzZXRHYW1lU3RhdGUoZ2FtZVN0YXRlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgY2hlY2tGb3JXaW4gPSAoKTogQXBwVGh1bmsgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICBjb25zdCBnYW1lID0gZ2V0Q3VycmVudEdhbWUoZ2V0U3RhdGUoKSkgYXMgR2FtZTtcbiAgY29uc3QgY2VsbFByb3BzID0gZ2V0Q2VsbFByb3BzKGdldFN0YXRlKCkpO1xuXG4gIC8vIEZpbmRzIHBlbmNpbCBtb2RlIGNlbGwgZHVwbGljYXRlcyBmcm9tIHJvd3MsIGNvbHMgYW5kIGdyaWRzXG4gIGNvbnN0IGR1cGxpY2F0ZXMgPSBnZXREdXBsaWNhdGVzKGNlbGxQcm9wcywgZ2FtZS5nYW1lVHlwZSwgZ2FtZS5yYXRpbyk7XG5cbiAgY29uc3QgaGFzSW52YWxpZENlbGxzID0gaGFzSW52YWxpZEVuZGdhbWVDZWxscyhjZWxsUHJvcHMpO1xuXG4gIC8vIGRpc3BsYXlzIHdpbiBtZXNzYWdlIGlmIGNvbmRpdGlvbnMgYXJlIG1ldFxuICBpZiAoZHVwbGljYXRlcy5sZW5ndGggPT09IDAgJiYgIWhhc0ludmFsaWRDZWxscykge1xuICAgIGRpc3BhdGNoKHVwZGF0ZUdhbWVTdGF0ZShHYW1lU3RhdGUuV2luKSk7XG4gIH0gZWxzZSB7XG4gICAgZGlzcGF0Y2godG9nZ2xlU2lkZU1lbnUoKSk7XG4gICAgc2hvd0NoZWNrUG9wdXAoZGlzcGF0Y2gsICEhZHVwbGljYXRlcy5sZW5ndGgpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlUGVuY2lsQ2VsbHMgPSAoKTogQXBwVGh1bmsgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICBjb25zdCBnYW1lID0gZ2V0Q3VycmVudEdhbWUoZ2V0U3RhdGUoKSkgYXMgR2FtZTtcbiAgY29uc3QgY2VsbFByb3BzID0gZ2V0Q2VsbFByb3BzKGdldFN0YXRlKCkpO1xuXG4gIC8vIEZpbmRzIHBlbmNpbCBtb2RlIGNlbGwgZHVwbGljYXRlcyBmcm9tIHJvd3MsIGNvbHMgYW5kIGdyaWRzXG4gIGNvbnN0IGR1cGxpY2F0ZXMgPSBnZXREdXBsaWNhdGVzKGNlbGxQcm9wcywgZ2FtZS5nYW1lVHlwZSwgZ2FtZS5yYXRpbyk7XG5cbiAgLy8gUmVzZXRzIGhpZ2hsaWdodHMgYW5kIHVwZGF0ZXMgZXJyb3JzIGlmIGVuYWJsZWQgaW4gc2V0dGluZ3NcbiAgY29uc3QgbmV3Q2VsbFByb3BzID0gcmVzZXRDZWxsU3RhdHVzKGNlbGxQcm9wcywgZHVwbGljYXRlcyk7XG4gIGlmIChuZXdDZWxsUHJvcHMpIHtcbiAgICBkaXNwYXRjaChzZXRDZWxsUHJvcHMobmV3Q2VsbFByb3BzKSk7XG4gIH1cblxuICBjb25zdCBoYXNJbnZhbGlkQ2VsbHMgPSBoYXNJbnZhbGlkRW5kZ2FtZUNlbGxzKGNlbGxQcm9wcyk7XG5cbiAgLy8gZGlzcGxheXMgd2luIG1lc3NhZ2UgaWYgY29uZGl0aW9ucyBhcmUgbWV0XG4gIGlmIChkdXBsaWNhdGVzLmxlbmd0aCA9PT0gMCAmJiAhaGFzSW52YWxpZENlbGxzKSB7XG4gICAgZGlzcGF0Y2godXBkYXRlR2FtZVN0YXRlKEdhbWVTdGF0ZS5XaW4pKTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZU5vdGVzQ2VsbHMgPSAoY29vcjogQ2VsbENvb3JkaW5hdGVzKTogQXBwVGh1bmsgPT4gKFxuICBkaXNwYXRjaCxcbiAgZ2V0U3RhdGVcbikgPT4ge1xuICBjb25zdCBzdGF0ZSA9IGdldFN0YXRlKCk7XG4gIGNvbnN0IGdhbWUgPSBnZXRDdXJyZW50R2FtZShzdGF0ZSkgYXMgR2FtZTtcbiAgY29uc3QgY2VsbFByb3BzID0gZ2V0Q2VsbFByb3BzKHN0YXRlKTtcbiAgY29uc3QgY2VsbE1vZGUgPSBnZXRDZWxsTW9kZShzdGF0ZSk7XG5cbiAgY29uc3QgcG9zID0gY29vci54ICogZ2FtZS5nYW1lVHlwZSArIGNvb3IueTtcbiAgY29uc3QgcHJvcHMgPSBjZWxsUHJvcHNbcG9zXTtcblxuICBpZiAoIWNhbkF1dG9tYXRpY2FsbHlVcGRhdGVOb3Rlc0NlbGxzKHsgY2VsbE1vZGUsIHNlbGVjdGVkQ2VsbDogcHJvcHMgfSkpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBuZXdDZWxsUHJvcHMgPSByZW1vdmVEdXBsaWNhdGVOb3Rlc0NlbGxzKFxuICAgIGdhbWUuZ2FtZVR5cGUsXG4gICAgZ2FtZS5yYXRpbyxcbiAgICBjZWxsUHJvcHMsXG4gICAgcHJvcHMsXG4gICAgY29vclxuICApO1xuXG4gIGlmICghbmV3Q2VsbFByb3BzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZGlzcGF0Y2goc2V0Q2VsbFByb3BzKG5ld0NlbGxQcm9wcykpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUNlbGxWYWx1ZSA9IChwb3M6IG51bWJlciwgdmFsdWU6IHN0cmluZyk6IEFwcFRodW5rID0+IChcbiAgZGlzcGF0Y2gsXG4gIGdldFN0YXRlXG4pID0+IHtcbiAgaWYgKHZhbHVlID09PSBcIlwiKSB7XG4gICAgZGlzcGF0Y2goc2V0Q2VsbFZhbHVlKHsgcG9zLCB2YWx1ZTogMCB9KSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHZhbHVlLm1hdGNoKC9eWzEtOV0rJC9nKSkge1xuICAgIGNvbnN0IGNlbGxNb2RlID0gZ2V0Q2VsbE1vZGUoZ2V0U3RhdGUoKSk7XG4gICAgbGV0IG5ld1ZhbHVlOiBudW1iZXI7XG5cbiAgICBpZiAoY2VsbE1vZGUgPT09IENlbGxNb2RlLlBlbmNpbCkge1xuICAgICAgbmV3VmFsdWUgPSArdmFsdWUgfHwgMDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgbm90ZXMgPSByZW1vdmVEdXBsaWNhdGVzKFxuICAgICAgICB2YWx1ZVxuICAgICAgICAgIC5zcGxpdChcIlwiKVxuICAgICAgICAgIC5tYXAodmFsID0+ICt2YWwpXG4gICAgICAgICAgLnNvcnQoKVxuICAgICAgKS5qb2luKFwiXCIpO1xuICAgICAgbmV3VmFsdWUgPSArbm90ZXMgfHwgMDtcbiAgICB9XG5cbiAgICBkaXNwYXRjaChzZXRDZWxsVmFsdWUoeyBwb3MsIHZhbHVlOiBuZXdWYWx1ZSB9KSk7XG4gICAgcmV0dXJuO1xuICB9XG59O1xuIiwiaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcInJlZHV4XCI7XG5cbmV4cG9ydCBjb25zdCBUT0dHTEVfU0lERV9NRU5VID0gXCJAc2lkZU1lbnUvVE9HR0xFX1NJREVfTUVOVVwiO1xuXG5leHBvcnQgdHlwZSBUb2dnbGVTaWRlTWVudUFjdGlvbiA9IEFjdGlvbjx0eXBlb2YgVE9HR0xFX1NJREVfTUVOVT47XG5leHBvcnQgY29uc3QgdG9nZ2xlU2lkZU1lbnUgPSAoKTogVG9nZ2xlU2lkZU1lbnVBY3Rpb24gPT4gKHtcbiAgdHlwZTogVE9HR0xFX1NJREVfTUVOVSxcbn0pO1xuIiwiaW1wb3J0IHsgTWVudUNvbnRlbnRTZWN0aW9uUHJvcHMgfSBmcm9tIFwiLi9NZW51Q29udGVudFNlY3Rpb25cIjtcblxuZXhwb3J0IGVudW0gTWVudVNlY3Rpb24ge1xuICBTdGF0cyA9IFwiU3RhdHNcIixcbiAgU2V0dGluZ3MgPSBcIlNldHRpbmdzXCIsXG4gIFJ1bGVzID0gXCJSdWxlc1wiLFxuICBBYm91dCA9IFwiQWJvdXRcIixcbiAgQ29udGFjdHMgPSBcIkNvbnRhY3RzXCIsXG59XG5cbmV4cG9ydCB0eXBlIFNoYXJlZFNlY3Rpb25Qcm9wcyA9IFBpY2s8XG4gIE1lbnVDb250ZW50U2VjdGlvblByb3BzLFxuICBcImNyb3NzT25DbGlja1wiIHwgXCJhcnJvd09uQ2xpY2tcIlxuPjtcbiIsImltcG9ydCB7IFJlZHVjZXIgfSBmcm9tIFwicmVkdXhcIjtcbmltcG9ydCB7XG4gIFNob3dQb3B1cEFjdGlvbixcbiAgU0hPV19QT1BVUCxcbiAgSElERV9QT1BVUCxcbiAgSGlkZVBvcHVwQWN0aW9uLFxufSBmcm9tIFwiLi9hY3Rpb25zXCI7XG5pbXBvcnQgeyBQb3B1cFByb3BzIH0gZnJvbSBcIi4uLy4uL3BvcHVwL1BvcHVwXCI7XG5pbXBvcnQge1xuICBTRVRfQ1VSUkVOVF9HQU1FLFxuICBTZXRDdXJyZW50R2FtZUFjdGlvbixcbn0gZnJvbSBcIi4uLy4uL2FwcC9kdWNrcy9hY3Rpb25zXCI7XG5pbXBvcnQge1xuICBSZXNldEdhbWVUb29sc0FjdGlvbixcbiAgUkVTRVRfR0FNRV9UT09MUyxcbn0gZnJvbSBcIi4uLy4uL2dhbWUtcGFnZS9kdWNrcy9hY3Rpb25zXCI7XG5cbnR5cGUgU3RhdGUgPSBQb3B1cFByb3BzO1xuXG50eXBlIEFjdGlvbnMgPVxuICB8IFNob3dQb3B1cEFjdGlvblxuICB8IEhpZGVQb3B1cEFjdGlvblxuICB8IFNldEN1cnJlbnRHYW1lQWN0aW9uXG4gIHwgUmVzZXRHYW1lVG9vbHNBY3Rpb247XG5cbmNvbnN0IGluaXRpYWxTdGF0ZTogU3RhdGUgPSB7XG4gIGhpZGRlbjogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBwb3B1cFJlZHVjZXI6IFJlZHVjZXI8U3RhdGUsIEFjdGlvbnM+ID0gKFxuICBzdGF0ZSA9IGluaXRpYWxTdGF0ZSxcbiAgYWN0aW9uXG4pID0+IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgU0hPV19QT1BVUDpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmFjdGlvbi5wYXlsb2FkLFxuICAgICAgICBoaWRkZW46IGZhbHNlLFxuICAgICAgfTtcbiAgICBjYXNlIEhJREVfUE9QVVA6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgfTtcbiAgICBjYXNlIFJFU0VUX0dBTUVfVE9PTFM6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgfTtcbiAgICBjYXNlIFNFVF9DVVJSRU5UX0dBTUU6XG4gICAgICByZXR1cm4gaW5pdGlhbFN0YXRlO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn07XG4iLCJpbXBvcnQgeyBSZWR1Y2VyIH0gZnJvbSBcInJlZHV4XCI7XG5pbXBvcnQge1xuICBUb2dnbGVTaWRlTWVudUFjdGlvbixcbiAgVE9HR0xFX1NJREVfTUVOVSxcbn0gZnJvbSBcIi4vYWN0aW9uc1wiO1xuaW1wb3J0IHsgU0VUX0NVUlJFTlRfR0FNRSwgU2V0Q3VycmVudEdhbWVBY3Rpb24gfSBmcm9tIFwiLi4vLi4vYXBwL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IFJlc2V0R2FtZVRvb2xzQWN0aW9uLCBSRVNFVF9HQU1FX1RPT0xTIH0gZnJvbSBcIi4uLy4uL2dhbWUtcGFnZS9kdWNrcy9hY3Rpb25zXCI7XG5cbmludGVyZmFjZSBTdGF0ZSB7XG4gIGlzT3BlbjogYm9vbGVhbjtcbn1cblxudHlwZSBBY3Rpb25zID0gKFxuICB8IFRvZ2dsZVNpZGVNZW51QWN0aW9uXG4gIHwgU2V0Q3VycmVudEdhbWVBY3Rpb25cbiAgfCBSZXNldEdhbWVUb29sc0FjdGlvblxuKTtcblxuY29uc3QgaW5pdGlhbFN0YXRlOiBTdGF0ZSA9IHtcbiAgaXNPcGVuOiBmYWxzZSxcbn07XG5cbmV4cG9ydCBjb25zdCBzaWRlTWVudVJlZHVjZXI6IFJlZHVjZXI8U3RhdGUsIEFjdGlvbnM+ID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgVE9HR0xFX1NJREVfTUVOVTpcbiAgICAgIHJldHVybiB7IC4uLnN0YXRlLCBpc09wZW46ICFzdGF0ZS5pc09wZW4gfTtcbiAgICBjYXNlIFJFU0VUX0dBTUVfVE9PTFM6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgaXNPcGVuOiBmYWxzZSxcbiAgICAgIH07XG4gICAgY2FzZSBTRVRfQ1VSUkVOVF9HQU1FOlxuICAgICAgcmV0dXJuIGluaXRpYWxTdGF0ZTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59O1xuIiwiaW1wb3J0IHsgY3JlYXRlU3RvcmUsIGNvbWJpbmVSZWR1Y2VycywgYXBwbHlNaWRkbGV3YXJlIH0gZnJvbSBcInJlZHV4XCI7XG5pbXBvcnQgdGh1bmsgZnJvbSBcInJlZHV4LXRodW5rXCI7XG5pbXBvcnQgeyBhcHBSZWR1Y2VyIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvYXBwL2R1Y2tzL3JlZHVjZXJcIjtcbmltcG9ydCB7IGdhbWVSZWR1Y2VyIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvZ2FtZS1wYWdlL2R1Y2tzL3JlZHVjZXJcIjtcbmltcG9ydCB7IHBvcHVwUmVkdWNlciB9IGZyb20gXCIuLi9jb21wb25lbnRzL3BvcHVwL2R1Y2tzL3JlZHVjZXJcIjtcbmltcG9ydCB7IHNpZGVNZW51UmVkdWNlciB9IGZyb20gXCIuLi9jb21wb25lbnRzL3NpZGUtbWVudS9kdWNrcy9yZWR1Y2VyXCI7XG5pbXBvcnQgeyBuZXR3b3JrIH0gZnJvbSBcIi4vbWlkZGxld2FyZXMvbmV0d29ya1wiO1xuXG5leHBvcnQgY29uc3Qgcm9vdFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMoe1xuICBhcHA6IGFwcFJlZHVjZXIsXG4gIGdhbWU6IGdhbWVSZWR1Y2VyLFxuICBwb3B1cDogcG9wdXBSZWR1Y2VyLFxuICBzaWRlTWVudTogc2lkZU1lbnVSZWR1Y2VyLFxufSk7XG5cbmV4cG9ydCB0eXBlIFJvb3RTdGF0ZSA9IFJldHVyblR5cGU8dHlwZW9mIHJvb3RSZWR1Y2VyPjtcblxuZXhwb3J0IGNvbnN0IHN0b3JlID0gY3JlYXRlU3RvcmUocm9vdFJlZHVjZXIsIGFwcGx5TWlkZGxld2FyZSh0aHVuaywgbmV0d29yaykpO1xuIiwiaW1wb3J0IHsgQXBwTWlkZGxld2FyZSB9IGZyb20gXCIuLi8uLi9jb25zdHNcIjtcbmltcG9ydCB7IGlzTmV0d29ya0Vycm9yIH0gZnJvbSBcIi4uLy4uL3V0aWxzL3NlcnZlclwiO1xuaW1wb3J0IHsgc2hvd1BvcHVwLCBoaWRlUG9wdXAgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9wb3B1cC9kdWNrcy9hY3Rpb25zXCI7XG5pbXBvcnQgeyByZW1vdmVFcnJvciwgU0VUX0VSUk9SIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvYXBwL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IFBvcHVwVGV4dCB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3BvcHVwL1BvcHVwXCI7XG5pbXBvcnQgeyBHYW1lQnV0dG9uU2l6ZSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2J1dHRvbnMvQnV0dG9uXCI7XG5pbXBvcnQgeyBjaGVja1N2ZyB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3N2Zy9JY29uc1wiO1xuXG5leHBvcnQgY29uc3QgbmV0d29yazogQXBwTWlkZGxld2FyZSA9ICh7IGRpc3BhdGNoIH0pID0+IG5leHQgPT4gYWN0aW9uID0+IHtcbiAgaWYgKGFjdGlvbi50eXBlID09PSBTRVRfRVJST1IgJiYgaXNOZXR3b3JrRXJyb3IoYWN0aW9uLnBheWxvYWQubWVzc2FnZSkpIHtcbiAgICBkaXNwYXRjaChcbiAgICAgIHNob3dQb3B1cCh7XG4gICAgICAgIHRleHQ6IFBvcHVwVGV4dC5OZXR3b3JrRXJyb3IsXG4gICAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzaXplOiBHYW1lQnV0dG9uU2l6ZS5TbWFsbCxcbiAgICAgICAgICAgIGljb246IGNoZWNrU3ZnLFxuICAgICAgICAgICAgb25DbGljazogKCkgPT4ge1xuICAgICAgICAgICAgICBkaXNwYXRjaChoaWRlUG9wdXAoKSk7XG4gICAgICAgICAgICAgIGRpc3BhdGNoKHJlbW92ZUVycm9yKHsgbWVzc2FnZTogYWN0aW9uLnBheWxvYWQubWVzc2FnZSB9KSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICByZXR1cm4gbmV4dChhY3Rpb24pO1xufTtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5cbmltcG9ydCBcIi4vbWFpbk1lbnUubGVzc1wiO1xuXG5pbXBvcnQgeyBzcGlubmVyU3ZnIH0gZnJvbSBcIi4uL3N2Zy9JY29uc1wiO1xuaW1wb3J0IHsgbWFwUHJvcHNUb01lbnVCdXR0b25zLCBNZW51QnV0dG9uUHJvcHMgfSBmcm9tIFwiLi4vYnV0dG9ucy9CdXR0b25cIjtcbmltcG9ydCB7XG4gIGdldExvYmJ5SXNMb2FkaW5nLFxuICBnZXRMb2JieUhhc0Vycm9yLFxuICBnZXRIYXNDdXJyZW50R2FtZSxcbn0gZnJvbSBcIi4uL2FwcC9kdWNrcy9zZWxlY3RvcnNcIjtcbmltcG9ydCB7IEdhbWVDb25maWcsIFBhZ2UsIEdhbWVEaWZmaWN1bHR5IH0gZnJvbSBcIi4uLy4uL2NvbnN0c1wiO1xuaW1wb3J0IHtcbiAgc2V0UGFnZSxcbiAgc2V0TG9iYnlNZW51U2VjdGlvbixcbiAgc3RhcnROZXdHYW1lLFxufSBmcm9tIFwiLi4vYXBwL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IE1lbnVTZWN0aW9uIH0gZnJvbSBcIi4uL21lbnUtY29udGVudC90eXBlc1wiO1xuXG5jb25zdCBtZW51U2VjdGlvbkJ1dHRvbnMgPSBbXG4gIE1lbnVTZWN0aW9uLlN0YXRzLFxuICBNZW51U2VjdGlvbi5TZXR0aW5ncyxcbiAgTWVudVNlY3Rpb24uUnVsZXMsXG4gIE1lbnVTZWN0aW9uLkFib3V0LFxuXTtcblxuZXhwb3J0IGNvbnN0IE1haW5NZW51OiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICBjb25zdCBpc0xvYWRpbmcgPSB1c2VTZWxlY3RvcihnZXRMb2JieUlzTG9hZGluZyk7XG4gIGNvbnN0IGhhc0Vycm9yID0gdXNlU2VsZWN0b3IoZ2V0TG9iYnlIYXNFcnJvcik7XG4gIGNvbnN0IGhhc0N1cnJlbnRHYW1lID0gdXNlU2VsZWN0b3IoZ2V0SGFzQ3VycmVudEdhbWUpO1xuXG4gIGNvbnN0IGdlbmVyYXRlR2FtZSA9IHVzZUNhbGxiYWNrKChwcm9wczogR2FtZUNvbmZpZykgPT4ge1xuICAgIGRpc3BhdGNoKHN0YXJ0TmV3R2FtZShwcm9wcykpO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgbGVmdENvbHVtbjogTWVudUJ1dHRvblByb3BzW10gPSBbXG4gICAge1xuICAgICAgdmFsdWU6IFwiUmVzdW1lXCIsXG4gICAgICBkaXNhYmxlZDogIWhhc0N1cnJlbnRHYW1lLFxuICAgICAgb25DbGljazogaGFzQ3VycmVudEdhbWUgPyAoKSA9PiBkaXNwYXRjaChzZXRQYWdlKFBhZ2UuR2FtZSkpIDogKCkgPT4ge30sXG4gICAgfSxcbiAgICB7XG4gICAgICB2YWx1ZTogXCJFYXN5XCIsXG4gICAgICBvbkNsaWNrOiAoKSA9PiBnZW5lcmF0ZUdhbWUoeyBkaWZmaWN1bHR5OiBHYW1lRGlmZmljdWx0eS5FYXN5IH0pLFxuICAgIH0sXG4gICAge1xuICAgICAgdmFsdWU6IFwiTWVkaXVtXCIsXG4gICAgICBvbkNsaWNrOiAoKSA9PiBnZW5lcmF0ZUdhbWUoeyBkaWZmaWN1bHR5OiBHYW1lRGlmZmljdWx0eS5NZWRpdW0gfSksXG4gICAgfSxcbiAgICB7XG4gICAgICB2YWx1ZTogXCJIYXJkXCIsXG4gICAgICBvbkNsaWNrOiAoKSA9PiBnZW5lcmF0ZUdhbWUoeyBkaWZmaWN1bHR5OiBHYW1lRGlmZmljdWx0eS5IYXJkIH0pLFxuICAgIH0sXG4gIF07XG5cbiAgY29uc3QgcmlnaHRDb2x1bW46IE1lbnVCdXR0b25Qcm9wc1tdID0gbWVudVNlY3Rpb25CdXR0b25zLm1hcChcbiAgICAoc2VjdGlvbjogTWVudVNlY3Rpb24pID0+ICh7XG4gICAgICB2YWx1ZTogc2VjdGlvbixcbiAgICAgIG9uQ2xpY2s6ICgpID0+IGRpc3BhdGNoKHNldExvYmJ5TWVudVNlY3Rpb24oc2VjdGlvbikpLFxuICAgIH0pXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGgxIGNsYXNzTmFtZT1cIm1lbnUtbG9nb1wiPlN1ZG9rdTwvaDE+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtbi1jb250YWluZXJcIj5cbiAgICAgICAge2hhc0Vycm9yICYmIChcbiAgICAgICAgICA8aDM+XG4gICAgICAgICAgICBBbiBlcnJvciBoYXMgb2NjdXJyZWQgOig8YnI+PC9icj5QbGVhc2UgcmVmcmVzaCB0aGUgcGFnZSFcbiAgICAgICAgICA8L2gzPlxuICAgICAgICApfVxuICAgICAgICB7aXNMb2FkaW5nICYmICFoYXNFcnJvciAmJiA8ZGl2IGNsYXNzTmFtZT1cImxvYWRpbmdcIj57c3Bpbm5lclN2Z308L2Rpdj59XG4gICAgICAgIHshaXNMb2FkaW5nICYmICFoYXNFcnJvciAmJiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sdW1uXCI+e21hcFByb3BzVG9NZW51QnV0dG9ucyhsZWZ0Q29sdW1uKX08L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sdW1uXCI+e21hcFByb3BzVG9NZW51QnV0dG9ucyhyaWdodENvbHVtbil9PC9kaXY+XG4gICAgICAgICAgPC8+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzcGFuPlxuICAgICAgICA8YVxuICAgICAgICAgIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20va29iYXdhblwiXG4gICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgPlxuICAgICAgICAgIEBrb2Jhd2FuXG4gICAgICAgIDwvYT5cbiAgICAgIDwvc3Bhbj5cbiAgICA8Lz5cbiAgKTtcbn07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9tZW51Q29udGVudFNlY3Rpb24ubGVzc1wiO1xuXG5pbXBvcnQgeyBjcm9zc1N2ZywgYXJyb3dTdmcgfSBmcm9tIFwiLi4vc3ZnL0ljb25zXCI7XG5cbmV4cG9ydCBlbnVtIEFycm93RGlyZWN0aW9uIHtcbiAgUmlnaHQsXG4gIExlZnQsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWVudUNvbnRlbnRTZWN0aW9uUHJvcHMge1xuICB0aXRsZTogc3RyaW5nO1xuICBjb250ZW50OiBKU1guRWxlbWVudDtcbiAgd2l0aEZvb3Rlcj86IGJvb2xlYW47XG4gIGFycm93PzogQXJyb3dEaXJlY3Rpb247XG4gIGFycm93T25DbGljaz86ICgpID0+IHZvaWQ7XG4gIGNyb3NzT25DbGljazogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIE1lbnVDb250ZW50U2VjdGlvbiBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8XG4gIE1lbnVDb250ZW50U2VjdGlvblByb3BzXG4+IHtcbiAgcHVibGljIHJlbmRlcigpIHtcbiAgICBjb25zdCBhcnJvd0NsYXNzTmFtZXMgPSBbXG4gICAgICBcImFycm93XCIsXG4gICAgICB0aGlzLnByb3BzLmFycm93ID09PSBBcnJvd0RpcmVjdGlvbi5MZWZ0ID8gXCJsZWZ0XCIgOiBudWxsLFxuICAgIF0uam9pbihcIiBcIik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWN0aW9uXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY3Jvc3NcIiBvbkNsaWNrPXt0aGlzLnByb3BzLmNyb3NzT25DbGlja30+XG4gICAgICAgICAge2Nyb3NzU3ZnfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkZXJcIj5cbiAgICAgICAgICA8aDI+e3RoaXMucHJvcHMudGl0bGV9PC9oMj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2Nyb2xsYWJsZVwiPnt0aGlzLnByb3BzLmNvbnRlbnR9PC9kaXY+XG4gICAgICAgIHt0aGlzLnByb3BzLndpdGhGb290ZXIgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9vdGVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YXJyb3dDbGFzc05hbWVzfSBvbkNsaWNrPXt0aGlzLnByb3BzLmFycm93T25DbGlja30+XG4gICAgICAgICAgICAgIHthcnJvd1N2Z31cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICBTdG9yYWdlS2V5cyxcbiAgZ2V0U3RvcmFnZUtleSxcbiAgc2V0U3RvcmFnZUtleSxcbn0gZnJvbSBcIi4uLy4uL3V0aWxzL2xvY2FsU3RvcmFnZVwiO1xuXG5pbXBvcnQgXCIuL2NoZWNrYm94Lmxlc3NcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDaGVja0JveFByb3BzIHtcbiAgdGV4dDogc3RyaW5nO1xuICBzdG9yYWdlS2V5OiBTdG9yYWdlS2V5cztcbn1cblxuaW50ZXJmYWNlIENoZWNrYm94U3RhdGUge1xuICBpc0NoZWNrZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjbGFzcyBDaGVja2JveCBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8XG4gIENoZWNrQm94UHJvcHMsXG4gIENoZWNrYm94U3RhdGVcbj4ge1xuICBwdWJsaWMgc3RhdGU6IENoZWNrYm94U3RhdGUgPSB7XG4gICAgaXNDaGVja2VkOiAhIWdldFN0b3JhZ2VLZXkodGhpcy5wcm9wcy5zdG9yYWdlS2V5KSxcbiAgfTtcblxuICBwdWJsaWMgcmVuZGVyKCkge1xuICAgIGNvbnN0IGNoZWNrZWQgPSB0aGlzLnN0YXRlLmlzQ2hlY2tlZCA/IFwiY2hlY2tlZFwiIDogXCJcIjtcbiAgICByZXR1cm4gKFxuICAgICAgPGxhYmVsIGNsYXNzTmFtZT17YGNoZWNrYm94LWxhYmVsICR7Y2hlY2tlZH1gfT5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgY2xhc3NOYW1lPVwiY2hlY2tib3hcIlxuICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgY2hlY2tlZD17dGhpcy5zdGF0ZS5pc0NoZWNrZWR9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9XG4gICAgICAgIC8+XG4gICAgICAgIDxzcGFuPnt0aGlzLnByb3BzLnRleHR9PC9zcGFuPlxuICAgICAgPC9sYWJlbD5cbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBvbkNoYW5nZSA9ICgpID0+IHtcbiAgICBjb25zdCBpc0NoZWNrZWQgPSAhdGhpcy5zdGF0ZS5pc0NoZWNrZWQ7XG4gICAgc2V0U3RvcmFnZUtleSh0aGlzLnByb3BzLnN0b3JhZ2VLZXksIGlzQ2hlY2tlZCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGlzQ2hlY2tlZCB9KTtcbiAgfTtcbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBNZW51Q29udGVudFNlY3Rpb24gfSBmcm9tIFwiLi9NZW51Q29udGVudFNlY3Rpb25cIjtcbmltcG9ydCB7IFNoYXJlZFNlY3Rpb25Qcm9wcywgTWVudVNlY3Rpb24gfSBmcm9tIFwiLi90eXBlc1wiO1xuaW1wb3J0IHsgQ2hlY2tib3gsIENoZWNrQm94UHJvcHMgfSBmcm9tIFwiLi4vY2hlY2tib3gvQ2hlY2tib3hcIjtcbmltcG9ydCB7IFN0b3JhZ2VLZXlzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2xvY2FsU3RvcmFnZVwiO1xuXG5leHBvcnQgY2xhc3MgU2V0dGluZ3NTZWN0aW9uIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxTaGFyZWRTZWN0aW9uUHJvcHM+IHtcbiAgcHVibGljIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPE1lbnVDb250ZW50U2VjdGlvblxuICAgICAgICB0aXRsZT17TWVudVNlY3Rpb24uU2V0dGluZ3N9XG4gICAgICAgIGNvbnRlbnQ9e3RoaXMuZ2V0Q29udGVudCgpfVxuICAgICAgICBjcm9zc09uQ2xpY2s9e3RoaXMucHJvcHMuY3Jvc3NPbkNsaWNrfVxuICAgICAgICBhcnJvd09uQ2xpY2s9e3RoaXMucHJvcHMuYXJyb3dPbkNsaWNrfVxuICAgICAgLz5cbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDb250ZW50ID0gKCkgPT4ge1xuICAgIGNvbnN0IGRpc2FibGVJbkdhbWVQcm9wczogQ2hlY2tCb3hQcm9wcyA9IHtcbiAgICAgIHRleHQ6IFwiRGlzYWJsZSBpbi1nYW1lIGVycm9yXCIsXG4gICAgICBzdG9yYWdlS2V5OiBTdG9yYWdlS2V5cy5EaXNhYmxlSW5HYW1lRXJyb3IsXG4gICAgfTtcbiAgICBjb25zdCBkaXNhYmxlSGlnaGxpZ2h0aW5nUHJvcHM6IENoZWNrQm94UHJvcHMgPSB7XG4gICAgICB0ZXh0OiBcIkRpc2FibGUgY2VsbCBoaWdobGlnaHRpbmdcIixcbiAgICAgIHN0b3JhZ2VLZXk6IFN0b3JhZ2VLZXlzLkRpc2FibGVIaWdobGlnaHRpbmcsXG4gICAgfTtcbiAgICBjb25zdCBkaXNhYmxlQXV0b05vdGVzUmVtb3ZhbFByb3BzOiBDaGVja0JveFByb3BzID0ge1xuICAgICAgdGV4dDogXCJEaXNhYmxlIGF1dG9tYXRpYyByZW1vdmFsIG9mIG5vdGVzIHZhbHVlc1wiLFxuICAgICAgc3RvcmFnZUtleTogU3RvcmFnZUtleXMuRGlzYWJsZUF1dG9Ob3Rlc1JlbW92YWwsXG4gICAgfTtcbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPENoZWNrYm94IHsuLi5kaXNhYmxlSW5HYW1lUHJvcHN9IC8+XG4gICAgICAgIDxDaGVja2JveCB7Li4uZGlzYWJsZUhpZ2hsaWdodGluZ1Byb3BzfSAvPlxuICAgICAgICA8Q2hlY2tib3ggey4uLmRpc2FibGVBdXRvTm90ZXNSZW1vdmFsUHJvcHN9IC8+XG4gICAgICA8Lz5cbiAgICApO1xuICB9O1xufVxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IE1lbnVDb250ZW50U2VjdGlvbiB9IGZyb20gXCIuL01lbnVDb250ZW50U2VjdGlvblwiO1xuaW1wb3J0IHsgU2hhcmVkU2VjdGlvblByb3BzLCBNZW51U2VjdGlvbiB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbmV4cG9ydCBjbGFzcyBSdWxlc1NlY3Rpb24gZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PFNoYXJlZFNlY3Rpb25Qcm9wcz4ge1xuICBwdWJsaWMgcmVuZGVyKCkge1xuICAgIGNvbnN0IHBhcmFncmFwaDEgPVxuICAgICAgXCJUaGUgY2xhc3NpYyBTdWRva3UgZ2FtZSBpbnZvbHZlcyBhIHRhYmxlIG9mIDgxIHNxdWFyZXMuIFRoZSB0YWJsZSBpcyBkaXZpZGVkIFwiICtcbiAgICAgIFwiaW50byBuaW5lIDN4MyBncmlkcywgZWFjaCBjb250YWluaW5nIG5pbmUgc3F1YXJlcy5cIjtcbiAgICBjb25zdCBwYXJhZ3JhcGgyID1cbiAgICAgIFwiVG8gd2luIHRoZSBnYW1lLCBlYWNoIG9mIHRoZSBuaW5lIGdyaWRzIGhhcyB0byBjb250YWluIGFsbCB0aGUgbnVtYmVycyAxLTkgd2l0aGluIFwiICtcbiAgICAgIFwiaXRzIGNlbGxzLiBFYWNoIG51bWJlciBjYW4gb25seSBhcHBlYXIgb25jZSBpbiBhIHJvdywgY29sdW1uIG9yIGdyaWQuXCI7XG4gICAgcmV0dXJuIChcbiAgICAgIDxNZW51Q29udGVudFNlY3Rpb25cbiAgICAgICAgdGl0bGU9e01lbnVTZWN0aW9uLlJ1bGVzfVxuICAgICAgICBjb250ZW50PXtcbiAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8cD57cGFyYWdyYXBoMX08L3A+XG4gICAgICAgICAgICA8cD57cGFyYWdyYXBoMn08L3A+XG4gICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgfVxuICAgICAgICBjcm9zc09uQ2xpY2s9e3RoaXMucHJvcHMuY3Jvc3NPbkNsaWNrfVxuICAgICAgICBhcnJvd09uQ2xpY2s9e3RoaXMucHJvcHMuYXJyb3dPbkNsaWNrfVxuICAgICAgLz5cbiAgICApO1xuICB9XG59XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgTWVudUNvbnRlbnRTZWN0aW9uLCBBcnJvd0RpcmVjdGlvbiB9IGZyb20gXCIuL01lbnVDb250ZW50U2VjdGlvblwiO1xuaW1wb3J0IHsgU2hhcmVkU2VjdGlvblByb3BzLCBNZW51U2VjdGlvbiB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbmV4cG9ydCBjbGFzcyBDb250YWN0c1NlY3Rpb24gZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PFNoYXJlZFNlY3Rpb25Qcm9wcz4ge1xuICBwdWJsaWMgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8TWVudUNvbnRlbnRTZWN0aW9uXG4gICAgICAgIHRpdGxlPXtNZW51U2VjdGlvbi5Db250YWN0c31cbiAgICAgICAgd2l0aEZvb3Rlcj17dHJ1ZX1cbiAgICAgICAgYXJyb3c9e0Fycm93RGlyZWN0aW9uLkxlZnR9XG4gICAgICAgIGNvbnRlbnQ9e1xuICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICA8c3Ryb25nPkRldmVsb3Blcjo8L3N0cm9uZz4gU2FyYSBOb3JkbXlyIGRhIEN1bmhhXG4gICAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9rb2Jhd2FuXCJcbiAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgQGtvYmF3YW5cbiAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgIDxzdHJvbmc+QnVnIHJlcG9ydGluZzogPC9zdHJvbmc+XG4gICAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9rb2Jhd2FuL3N1ZG9rdS9pc3N1ZXNcIlxuICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICBodHRwczovL2dpdGh1Yi5jb20va29iYXdhbi9zdWRva3UvaXNzdWVzXG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICB9XG4gICAgICAgIGNyb3NzT25DbGljaz17dGhpcy5wcm9wcy5jcm9zc09uQ2xpY2t9XG4gICAgICAgIGFycm93T25DbGljaz17dGhpcy5wcm9wcy5hcnJvd09uQ2xpY2t9XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBNZW51Q29udGVudFNlY3Rpb24gfSBmcm9tIFwiLi9NZW51Q29udGVudFNlY3Rpb25cIjtcbmltcG9ydCB7IFNoYXJlZFNlY3Rpb25Qcm9wcywgTWVudVNlY3Rpb24gfSBmcm9tIFwiLi90eXBlc1wiO1xuXG5leHBvcnQgY2xhc3MgU3RhdHNTZWN0aW9uIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxTaGFyZWRTZWN0aW9uUHJvcHM+IHtcbiAgcHVibGljIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPE1lbnVDb250ZW50U2VjdGlvblxuICAgICAgICB0aXRsZT17TWVudVNlY3Rpb24uU3RhdHN9XG4gICAgICAgIGNvbnRlbnQ9ezxwPlRCRDwvcD59XG4gICAgICAgIGNyb3NzT25DbGljaz17dGhpcy5wcm9wcy5jcm9zc09uQ2xpY2t9XG4gICAgICAgIGFycm93T25DbGljaz17dGhpcy5wcm9wcy5hcnJvd09uQ2xpY2t9XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBNZW51Q29udGVudFNlY3Rpb24gfSBmcm9tIFwiLi9NZW51Q29udGVudFNlY3Rpb25cIjtcbmltcG9ydCB7IFNoYXJlZFNlY3Rpb25Qcm9wcywgTWVudVNlY3Rpb24gfSBmcm9tIFwiLi90eXBlc1wiO1xuXG5leHBvcnQgY2xhc3MgQWJvdXRTZWN0aW9uIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxTaGFyZWRTZWN0aW9uUHJvcHM+IHtcbiAgcHVibGljIHJlbmRlcigpIHtcbiAgICBjb25zdCBwYXJhZ3JhcGgxID1cbiAgICAgIFwiSGkhIE15IG5hbWUgaXMgU2FyYSwgb3IgS29iYXdhbiBpbiB0aGUgaW50ZXJ3ZWJ6LiBJJ3ZlIGFsd2F5cyBiZWVuIGEgZmFuIG9mIHB1enpsZXMsIFwiICtcbiAgICAgIFwic28gd2hlbiBJIHN0YXJ0ZWQgcHJvZ3JhbW1pbmcsIEkgY2FtZSB1cCB3aXRoIHRoZSBpZGVhIHRvIGNvbWJpbmUgbXkgdHdvIGpveXMgb2YgXCIgK1xuICAgICAgXCJwdXp6bGVzIGFuZCBwcm9ncmFtbWluZywgdG8gY3JlYXRlIHRoaXMgd2Vic2l0ZS5cIjtcbiAgICBjb25zdCBwYXJhZ3JhcGgyID1cbiAgICAgIFwiSXQncyBiZWVuIGEgZnVuIHByb2plY3QgdG8gY3JlYXRlLiBTb21ldGltZXMgY2hhbGxlbmdpbmcgYW5kIHRpbWUtY29uc3VtaW5nLCBcIiArXG4gICAgICBcImJ1dCBpbiB0aGUgZW5kLCBhIHZlcnkgZ29vZCBvcHBvcnR1bml0eSB0byBsZWFybiBwcm9ncmFtbWluZy5cIjtcbiAgICBjb25zdCBwYXJhZ3JhcGgzID1cbiAgICAgIFwiQWxvbmcgd2l0aCBjcmVhdGluZyBtb3JlIHByb2plY3RzIHRoYW4gSSBjYW4gaGFuZGxlLCBJIGFsc28ga25pdCwgcGxheSB3aXRoIG15IFwiICtcbiAgICAgIFwiZG9ncywgYW5kIGJpbmdlIHdhdGNoIG5ldGZsaXguXCI7XG4gICAgcmV0dXJuIChcbiAgICAgIDxNZW51Q29udGVudFNlY3Rpb25cbiAgICAgICAgdGl0bGU9e01lbnVTZWN0aW9uLkFib3V0fVxuICAgICAgICB3aXRoRm9vdGVyPXt0cnVlfVxuICAgICAgICBjb250ZW50PXtcbiAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8cD57cGFyYWdyYXBoMX08L3A+XG4gICAgICAgICAgICA8cD57cGFyYWdyYXBoMn08L3A+XG4gICAgICAgICAgICA8cD57cGFyYWdyYXBoM308L3A+XG4gICAgICAgICAgICA8cD5JIGhvcGUgeW91IGVuam95ITwvcD5cbiAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICB9XG4gICAgICAgIGNyb3NzT25DbGljaz17dGhpcy5wcm9wcy5jcm9zc09uQ2xpY2t9XG4gICAgICAgIGFycm93T25DbGljaz17dGhpcy5wcm9wcy5hcnJvd09uQ2xpY2t9XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgY3ggZnJvbSBcImNsYXNzbmFtZXNcIjtcbmltcG9ydCBcIi4vbG9iYnlQYWdlLmxlc3NcIjtcblxuaW1wb3J0IHsgTWFpbk1lbnUgfSBmcm9tIFwiLi4vbWFpbi1tZW51L01haW5NZW51XCI7XG5pbXBvcnQgeyBNZW51U2VjdGlvbiwgU2hhcmVkU2VjdGlvblByb3BzIH0gZnJvbSBcIi4uL21lbnUtY29udGVudC90eXBlc1wiO1xuaW1wb3J0IHsgU2V0dGluZ3NTZWN0aW9uIH0gZnJvbSBcIi4uL21lbnUtY29udGVudC9TZXR0aW5nc1NlY3Rpb25cIjtcbmltcG9ydCB7IFJ1bGVzU2VjdGlvbiB9IGZyb20gXCIuLi9tZW51LWNvbnRlbnQvUnVsZXNTZWN0aW9uXCI7XG5pbXBvcnQgeyBDb250YWN0c1NlY3Rpb24gfSBmcm9tIFwiLi4vbWVudS1jb250ZW50L0NvbnRhY3RzU2VjdGlvblwiO1xuaW1wb3J0IHsgU3RhdHNTZWN0aW9uIH0gZnJvbSBcIi4uL21lbnUtY29udGVudC9TdGF0c1NlY3Rpb25cIjtcbmltcG9ydCB7IEFib3V0U2VjdGlvbiB9IGZyb20gXCIuLi9tZW51LWNvbnRlbnQvQWJvdXRTZWN0aW9uXCI7XG5pbXBvcnQge1xuICBnZXRMb2JieUlzTG9hZGluZyxcbiAgZ2V0TG9iYnlIYXNFcnJvcixcbiAgZ2V0TG9iYnlNZW51U2VjdGlvbixcbn0gZnJvbSBcIi4uL2FwcC9kdWNrcy9zZWxlY3RvcnNcIjtcbmltcG9ydCB7IHNldExvYmJ5TWVudVNlY3Rpb24gfSBmcm9tIFwiLi4vYXBwL2R1Y2tzL2FjdGlvbnNcIjtcblxudHlwZSBNYXBNZW51U2VjdGlvblRvQ29tcG9uZW50SW5kZXhTaWduYXR1cmUgPSB7XG4gIFtrIGluIE1lbnVTZWN0aW9uXTogUmVhY3QuQ29tcG9uZW50Q2xhc3M8U2hhcmVkU2VjdGlvblByb3BzPjtcbn07XG5cbmNvbnN0IG1hcE1lbnVTZWN0aW9uVG9Db21wb25lbnQ6IE1hcE1lbnVTZWN0aW9uVG9Db21wb25lbnRJbmRleFNpZ25hdHVyZSA9IHtcbiAgW01lbnVTZWN0aW9uLlN0YXRzXTogU3RhdHNTZWN0aW9uLFxuICBbTWVudVNlY3Rpb24uU2V0dGluZ3NdOiBTZXR0aW5nc1NlY3Rpb24sXG4gIFtNZW51U2VjdGlvbi5SdWxlc106IFJ1bGVzU2VjdGlvbixcbiAgW01lbnVTZWN0aW9uLkFib3V0XTogQWJvdXRTZWN0aW9uLFxuICBbTWVudVNlY3Rpb24uQ29udGFjdHNdOiBDb250YWN0c1NlY3Rpb24sXG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIExvYmJ5UGFnZVN0YXRlIHtcbiAgY3VycmVudFNlY3Rpb24/OiBNZW51U2VjdGlvbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2JieVBhZ2VQcm9wcyB7XG4gIGhpZGRlbjogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0IExvYmJ5UGFnZTogUmVhY3QuRkM8TG9iYnlQYWdlUHJvcHM+ID0gKHsgaGlkZGVuIH0pID0+IHtcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICBjb25zdCBpc0xvYWRpbmcgPSB1c2VTZWxlY3RvcihnZXRMb2JieUlzTG9hZGluZyk7XG4gIGNvbnN0IGhhc0Vycm9yID0gdXNlU2VsZWN0b3IoZ2V0TG9iYnlIYXNFcnJvcik7XG4gIGNvbnN0IGN1cnJlbnRTZWN0aW9uID0gdXNlU2VsZWN0b3IoZ2V0TG9iYnlNZW51U2VjdGlvbik7XG5cbiAgY29uc3QgZ2V0U2VjdGlvbkNvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoIWN1cnJlbnRTZWN0aW9uKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCBDb21wb25lbnQgPSBtYXBNZW51U2VjdGlvblRvQ29tcG9uZW50W2N1cnJlbnRTZWN0aW9uXTtcbiAgICBjb25zdCBzZXRTdWJTZWN0aW9uID0gKCkgPT4ge1xuICAgICAgaWYgKGN1cnJlbnRTZWN0aW9uID09PSBNZW51U2VjdGlvbi5BYm91dCkge1xuICAgICAgICBkaXNwYXRjaChzZXRMb2JieU1lbnVTZWN0aW9uKE1lbnVTZWN0aW9uLkNvbnRhY3RzKSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChjdXJyZW50U2VjdGlvbiA9PT0gTWVudVNlY3Rpb24uQ29udGFjdHMpIHtcbiAgICAgICAgZGlzcGF0Y2goc2V0TG9iYnlNZW51U2VjdGlvbihNZW51U2VjdGlvbi5BYm91dCkpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Q29tcG9uZW50XG4gICAgICAgIGNyb3NzT25DbGljaz17KCkgPT4gZGlzcGF0Y2goc2V0TG9iYnlNZW51U2VjdGlvbih1bmRlZmluZWQpKX1cbiAgICAgICAgYXJyb3dPbkNsaWNrPXtzZXRTdWJTZWN0aW9ufVxuICAgICAgLz5cbiAgICApO1xuICB9LCBbY3VycmVudFNlY3Rpb25dKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjeChcImxvYmJ5XCIsIGhpZGRlbiAmJiBcImhpZGRlblwiKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYmJ5LXdyYXBwZXJcIj5cbiAgICAgICAgPE1haW5NZW51IC8+XG4gICAgICAgIHshaXNMb2FkaW5nICYmICFoYXNFcnJvciAmJiBnZXRTZWN0aW9uQ29tcG9uZW50KCl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iLCJpbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vZHVja3Mvc3RvcmVcIjtcblxuZXhwb3J0IGNvbnN0IGdldFNpZGVNZW51SXNPcGVuID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLnNpZGVNZW51LmlzT3BlbjtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgY3ggZnJvbSBcImNsYXNzbmFtZXNcIjtcblxuaW1wb3J0IFwiLi9zaWRlTWVudS5sZXNzXCI7XG5cbmltcG9ydCB7IG1hcFByb3BzVG9NZW51QnV0dG9ucywgTWVudUJ1dHRvblByb3BzIH0gZnJvbSBcIi4uL2J1dHRvbnMvQnV0dG9uXCI7XG5pbXBvcnQgeyBtZW51U3ZnIH0gZnJvbSBcIi4uL3N2Zy9JY29uc1wiO1xuaW1wb3J0IHsgY2hlY2tGb3JXaW4gfSBmcm9tIFwiLi4vZ2FtZS1wYWdlL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IHNob3dSZXNldFBvcHVwLCBzaG93U29sdmVQb3B1cCB9IGZyb20gXCIuLi9wb3B1cC9kdWNrcy9hY3Rpb25zXCI7XG5pbXBvcnQgeyBnZXRTaWRlTWVudUlzT3BlbiB9IGZyb20gXCIuL2R1Y2tzL3NlbGVjdG9yc1wiO1xuaW1wb3J0IHsgdG9nZ2xlU2lkZU1lbnUgfSBmcm9tIFwiLi9kdWNrcy9hY3Rpb25zXCI7XG5cbmludGVyZmFjZSBTaWRlTWVudVByb3BzIHtcbiAgcmV0dXJuVG9Mb2JieTogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IFNpZGVNZW51OiBSZWFjdC5GQzxTaWRlTWVudVByb3BzPiA9ICh7IHJldHVyblRvTG9iYnkgfSkgPT4ge1xuICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gIGNvbnN0IGlzT3BlbiA9IHVzZVNlbGVjdG9yKGdldFNpZGVNZW51SXNPcGVuKTtcbiAgY29uc3Qgb25DbGljayA9IHVzZUNhbGxiYWNrKCgpID0+IGRpc3BhdGNoKHRvZ2dsZVNpZGVNZW51KCkpLCBbXSk7XG5cbiAgY29uc3Qgc2lkZU1lbnVCdXR0b25zOiBNZW51QnV0dG9uUHJvcHNbXSA9IFtcbiAgICB7XG4gICAgICB2YWx1ZTogXCJSZXR1cm5cIixcbiAgICAgIG9uQ2xpY2s6IHJldHVyblRvTG9iYnksXG4gICAgfSxcbiAgICB7XG4gICAgICB2YWx1ZTogXCJSZXNldFwiLFxuICAgICAgb25DbGljazogKCkgPT4gc2hvd1Jlc2V0UG9wdXAoZGlzcGF0Y2gpLFxuICAgIH0sXG4gICAge1xuICAgICAgdmFsdWU6IFwiQ2hlY2tcIixcbiAgICAgIG9uQ2xpY2s6ICgpID0+IGRpc3BhdGNoKGNoZWNrRm9yV2luKCkpLFxuICAgIH0sXG4gICAge1xuICAgICAgdmFsdWU6IFwiU29sdmVcIixcbiAgICAgIG9uQ2xpY2s6ICgpID0+IHNob3dTb2x2ZVBvcHVwKGRpc3BhdGNoKSxcbiAgICB9LFxuICBdO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2N4KFwic2lkZS1tZW51LWNvbnRhaW5lclwiLCBpc09wZW4gPyBcIm9wZW5lZFwiIDogXCJoaWRkZW5cIil9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzaWRlLW1lbnUtb3ZlcmxheVwiIG9uQ2xpY2s9e29uQ2xpY2t9IC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInNpZGUtbWVudVwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lbnVcIj5cbiAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cInNpZGUtbWVudS1sb2dvXCI+XG4gICAgICAgICAgICA8dGV4dD5TdWRva3U8L3RleHQ+XG4gICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidXR0b25zLXdyYXBwZXJcIj5cbiAgICAgICAgICAgIHttYXBQcm9wc1RvTWVudUJ1dHRvbnMoc2lkZU1lbnVCdXR0b25zKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20va29iYXdhblwiXG4gICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBAa29iYXdhblxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2lkZS1tZW51LWJ1dHRvblwiIG9uQ2xpY2s9e29uQ2xpY2t9PlxuICAgICAgICAgIHttZW51U3ZnfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcbiIsImltcG9ydCB7IENlbGxDb29yZGluYXRlcywgQ2VsbFByb3BzLCBDZWxsTW9kZSB9IGZyb20gXCIuLi8uLi9jb25zdHNcIjtcbmltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi4vLi4vZ2VuZXJhdG9yL2dlbmVyYXRvclwiO1xuXG4vKipcbiAqIFJldHVybnMgY29vcmRpbmF0ZXMgb2Ygc2VsZWN0ZWQgY2VsbFxuICovXG5leHBvcnQgY29uc3QgZmluZENvb3JkaW5hdGVzID0gKFxuICBnYW1lUmF0aW86IG51bWJlcixcbiAgc2VsZWN0ZWRDZWxsOiBIVE1MVGV4dEFyZWFFbGVtZW50XG4pOiBDZWxsQ29vcmRpbmF0ZXMgPT4ge1xuICBjb25zdCB0YWJsZUNlbGwgPSBzZWxlY3RlZENlbGwucGFyZW50RWxlbWVudCBhcyBIVE1MVGFibGVEYXRhQ2VsbEVsZW1lbnQ7XG4gIGNvbnN0IHRhYmxlUm93ID0gdGFibGVDZWxsLnBhcmVudEVsZW1lbnQgYXMgSFRNTFRhYmxlUm93RWxlbWVudDtcbiAgY29uc3QgY29vclJvdyA9IHRhYmxlUm93LnJvd0luZGV4O1xuICBjb25zdCBjb29yQ29sID0gdGFibGVDZWxsLmNlbGxJbmRleDtcbiAgY29uc3QgY29vckdyaWQgPVxuICAgIE1hdGguZmxvb3IoY29vclJvdyAvIGdhbWVSYXRpbykgKiBnYW1lUmF0aW8gK1xuICAgIE1hdGguZmxvb3IoY29vckNvbCAvIGdhbWVSYXRpbyk7XG4gIHJldHVybiB7IHg6IGNvb3JSb3csIHk6IGNvb3JDb2wsIGdyaWQ6IGNvb3JHcmlkIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q2VsbFBvc0Zyb21FbGVtZW50ID0gKHtcbiAgZ2FtZSxcbiAgY2VsbCxcbn06IHtcbiAgY2VsbDogSFRNTFRleHRBcmVhRWxlbWVudDtcbiAgZ2FtZTogR2FtZTtcbn0pID0+IHtcbiAgY29uc3QgeyB4LCB5IH0gPSBmaW5kQ29vcmRpbmF0ZXMoZ2FtZS5yYXRpbywgY2VsbCk7XG4gIHJldHVybiB4ICogZ2FtZS5nYW1lVHlwZSArIHk7XG59O1xuXG4vKipcbiAqIEtleSB1cCBldmVudCB0byBtb3ZlIGNlbGxzIHVzaW5nIGFycm93c1xuICovXG5leHBvcnQgY29uc3QgYXJyb3dLZXlzID0gKGtleUNvZGU6IG51bWJlciwgY29vcjogQ2VsbENvb3JkaW5hdGVzKSA9PiB7XG4gIGNvbnN0IHN1ZG9rdVRhYmxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICBcIiNTdWRva3VUYWJsZVwiXG4gICkgYXMgSFRNTFRhYmxlRWxlbWVudDtcbiAgbGV0IGNvb3JSb3cgPSBjb29yLng7XG4gIGxldCBjb29yQ29sID0gY29vci55O1xuXG4gIHN3aXRjaCAoa2V5Q29kZSkge1xuICAgIGNhc2UgMzc6IC8vIGxlZnQgYXJyb3dcbiAgICAgIGNvb3JDb2wgPT09IDAgPyAoY29vckNvbCA9IDgpIDogY29vckNvbC0tO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAzODogLy8gdXAgYXJyb3dcbiAgICAgIGNvb3JSb3cgPT09IDAgPyAoY29vclJvdyA9IDgpIDogY29vclJvdy0tO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAzOTogLy8gcmlnaHQgYXJyb3dcbiAgICAgIGNvb3JDb2wgPT09IDggPyAoY29vckNvbCA9IDApIDogY29vckNvbCsrO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSA0MDogLy8gZG93biBhcnJvd1xuICAgICAgY29vclJvdyA9PT0gOCA/IChjb29yUm93ID0gMCkgOiBjb29yUm93Kys7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgYnJlYWs7XG4gIH1cblxuICBjb25zdCBuZXh0Q2VsbCA9IHN1ZG9rdVRhYmxlLnJvd3NbY29vclJvd10uY2VsbHNbY29vckNvbF1cbiAgICAuY2hpbGRyZW5bMF0gYXMgSFRNTFRleHRBcmVhRWxlbWVudDtcbiAgbmV4dENlbGwuZm9jdXMoKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RDZWxsQ29udGVudCA9ICh7XG4gIGNlbGwsXG4gIHByb3BzLFxuICBjZWxsTW9kZSxcbn06IHtcbiAgY2VsbDogSFRNTFRleHRBcmVhRWxlbWVudDtcbiAgcHJvcHM6IENlbGxQcm9wcztcbiAgY2VsbE1vZGU6IENlbGxNb2RlO1xufSkgPT4ge1xuICBpZiAoXG4gICAgKGNlbGxNb2RlID09PSBDZWxsTW9kZS5Ob3RlcyAmJiBwcm9wcy5tb2RlID09PSBDZWxsTW9kZS5QZW5jaWwpIHx8XG4gICAgKGNlbGxNb2RlID09PSBDZWxsTW9kZS5QZW5jaWwgJiYgcHJvcHMubW9kZSAhPT0gQ2VsbE1vZGUuUmVhZE9ubHkpXG4gICkge1xuICAgIGNlbGwuc2VsZWN0KCk7XG4gIH1cbn07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IGN4IGZyb20gXCJjbGFzc25hbWVzXCI7XG5cbmltcG9ydCBcIi4vY2VsbC5sZXNzXCI7XG5cbmltcG9ydCB7IENlbGxNb2RlLCBDZWxsUHJvcHMgfSBmcm9tIFwiLi4vLi4vY29uc3RzXCI7XG5pbXBvcnQge1xuICBnZXRDZWxsUG9zRnJvbUVsZW1lbnQsXG4gIGZpbmRDb29yZGluYXRlcyxcbiAgYXJyb3dLZXlzLFxuICBzZWxlY3RDZWxsQ29udGVudCxcbn0gZnJvbSBcIi4vaGVscGVyc1wiO1xuaW1wb3J0IHtcbiAgaGlnaExpZ2h0Q2VsbHMsXG4gIHVwZGF0ZU5vdGVzQ2VsbHMsXG4gIHVwZGF0ZVBlbmNpbENlbGxzLFxuICB1cGRhdGVDZWxsVmFsdWUsXG59IGZyb20gXCIuLi9nYW1lLXBhZ2UvZHVja3MvYWN0aW9uc1wiO1xuaW1wb3J0IHtcbiAgZ2V0Q2VsbE1vZGUsXG4gIGdldENlbGxQcm9wcyxcbiAgYXJlQ2VsbHNEaXNhYmxlZCxcbn0gZnJvbSBcIi4uL2dhbWUtcGFnZS9kdWNrcy9zZWxlY3RvcnNcIjtcbmltcG9ydCB7IGdldEN1cnJlbnRHYW1lIH0gZnJvbSBcIi4uL2FwcC9kdWNrcy9zZWxlY3RvcnNcIjtcbmltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi4vLi4vZ2VuZXJhdG9yL2dlbmVyYXRvclwiO1xuXG5leHBvcnQgY29uc3QgQ2VsbDogUmVhY3QuRkM8Q2VsbFByb3BzPiA9ICh7XG4gIG1vZGUsXG4gIHZhbHVlLFxuICB3aXRoRXJyb3IsXG4gIHdpdGhIaWdobGlnaHQsXG59KSA9PiB7XG4gIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgY29uc3QgY2VsbE1vZGUgPSB1c2VTZWxlY3RvcihnZXRDZWxsTW9kZSk7XG4gIGNvbnN0IGNlbGxQcm9wcyA9IHVzZVNlbGVjdG9yKGdldENlbGxQcm9wcyk7XG4gIGNvbnN0IGdhbWUgPSB1c2VTZWxlY3RvcihnZXRDdXJyZW50R2FtZSkgYXMgR2FtZTtcbiAgY29uc3QgaXNEaXNhYmxlZCA9IHVzZVNlbGVjdG9yKGFyZUNlbGxzRGlzYWJsZWQpO1xuXG4gIGNvbnN0IG9uU2VsZWN0ID0gKFxuICAgIGU6XG4gICAgICB8IFJlYWN0LkZvY3VzRXZlbnQ8SFRNTFRleHRBcmVhRWxlbWVudD5cbiAgICAgIHwgUmVhY3QuTW91c2VFdmVudDxIVE1MVGV4dEFyZWFFbGVtZW50PlxuICApID0+IHtcbiAgICBjb25zdCBjZWxsID0gZS50YXJnZXQgYXMgSFRNTFRleHRBcmVhRWxlbWVudDtcbiAgICBjb25zdCBwb3MgPSBnZXRDZWxsUG9zRnJvbUVsZW1lbnQoeyBnYW1lLCBjZWxsIH0pO1xuICAgIGNvbnN0IHByb3BzID0gY2VsbFByb3BzW3Bvc107XG4gICAgc2VsZWN0Q2VsbENvbnRlbnQoeyBjZWxsLCBwcm9wcywgY2VsbE1vZGUgfSk7XG4gICAgZGlzcGF0Y2goaGlnaExpZ2h0Q2VsbHMocHJvcHMpKTtcbiAgfTtcblxuICBjb25zdCBvbktleXVwOiBSZWFjdC5LZXlib2FyZEV2ZW50SGFuZGxlcjxIVE1MVGV4dEFyZWFFbGVtZW50PiA9IGUgPT4ge1xuICAgIGNvbnN0IGNlbGwgPSBlLnRhcmdldCBhcyBIVE1MVGV4dEFyZWFFbGVtZW50O1xuICAgIGNvbnN0IGNvb3IgPSBmaW5kQ29vcmRpbmF0ZXMoZ2FtZS5yYXRpbywgY2VsbCk7XG5cbiAgICAvLyByZW1vdmVzIG5vdGVzIGZyb20gY29sdW1uLCByb3cgYW5kIGdyaWQgd2hlcmUgdGhlIHBlbmNpbCB2YWx1ZSB3YXMgaW5zZXJ0ZWQsIGlmIGVuYWJsZWQgaW4gc2V0dGluZ3NcbiAgICBkaXNwYXRjaCh1cGRhdGVOb3Rlc0NlbGxzKGZpbmRDb29yZGluYXRlcyhnYW1lLnJhdGlvLCBjZWxsKSkpO1xuXG4gICAgLy8gcmVzZXRzIGhpZ2hsaWdodHMsIHNob3dzIGNlbGwgZXJyb3JzIGlmIGVuYWJsZWQgaW4gc2V0dGluZ3MgYW5kIGNoZWNrcyBpZiBnYW1lIGlzIHNvbHZlZFxuICAgIGRpc3BhdGNoKHVwZGF0ZVBlbmNpbENlbGxzKCkpO1xuXG4gICAgLy8gdXNlIGFycm93IGtleXMgdG8gbW92ZSBmcm9tIGNlbGwgdG8gY2VsbFxuICAgIGFycm93S2V5cyhlLmtleUNvZGUsIGNvb3IpO1xuICB9O1xuXG4gIGNvbnN0IG9uSW5wdXQ6IFJlYWN0LkNoYW5nZUV2ZW50SGFuZGxlcjxIVE1MVGV4dEFyZWFFbGVtZW50PiA9IGUgPT4ge1xuICAgIGNvbnN0IGNlbGwgPSBlLnRhcmdldCBhcyBIVE1MVGV4dEFyZWFFbGVtZW50O1xuICAgIGNvbnN0IHBvcyA9IGdldENlbGxQb3NGcm9tRWxlbWVudCh7IGdhbWUsIGNlbGwgfSk7XG5cbiAgICAvLyBGaWx0ZXJzIGludmFsaWQgaW5wdXRzIHVwZGF0ZXMgY2VsbCB3aXRoIG5ldyB2YWx1ZSBhbmQgbW9kZVxuICAgIGRpc3BhdGNoKHVwZGF0ZUNlbGxWYWx1ZShwb3MsIGNlbGwudmFsdWUpKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDx0ZXh0YXJlYVxuICAgICAgcmVhZE9ubHk9e21vZGUgPT09IENlbGxNb2RlLlJlYWRPbmx5IHx8IGlzRGlzYWJsZWR9XG4gICAgICBtYXhMZW5ndGg9e21vZGUgIT09IENlbGxNb2RlLk5vdGVzID8gMSA6IDl9XG4gICAgICByb3dzPXsxfVxuICAgICAgY29scz17MX1cbiAgICAgIHZhbHVlPXt2YWx1ZSB8fCBcIlwifVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAgbW9kZSxcbiAgICAgICAgaXNEaXNhYmxlZCAmJiBcImRpc2FibGVkXCIsXG4gICAgICAgIHdpdGhFcnJvciAmJiBtb2RlICE9PSBDZWxsTW9kZS5Ob3RlcyAmJiBcImVycm9yXCIsXG4gICAgICAgIHdpdGhIaWdobGlnaHQgJiYgbW9kZSAhPT0gQ2VsbE1vZGUuTm90ZXMgJiYgXCJoaWdobGlnaHRcIlxuICAgICAgKX1cbiAgICAgIG9uS2V5VXA9eyFpc0Rpc2FibGVkID8gb25LZXl1cCA6IHVuZGVmaW5lZH1cbiAgICAgIG9uRm9jdXM9eyFpc0Rpc2FibGVkID8gb25TZWxlY3QgOiB1bmRlZmluZWR9XG4gICAgICBvbkNsaWNrPXshaXNEaXNhYmxlZCA/IG9uU2VsZWN0IDogdW5kZWZpbmVkfVxuICAgICAgb25DaGFuZ2U9eyFpc0Rpc2FibGVkICYmIG1vZGUgIT09IENlbGxNb2RlLlJlYWRPbmx5ID8gb25JbnB1dCA6IHVuZGVmaW5lZH1cbiAgICAvPlxuICApO1xufTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL3N1ZG9rdVRhYmxlLmxlc3NcIjtcblxuaW1wb3J0IHsgQ2VsbCB9IGZyb20gXCIuLi9zdWRva3UtY2VsbC9DZWxsXCI7XG5pbXBvcnQgeyBUYWJsZUNlbGxzTWFwLCBHYW1lVHlwZSB9IGZyb20gXCIuLi8uLi9jb25zdHNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdWRva3VUYWJsZVByb3BzIHtcbiAgY2VsbFN0YXRlOiBUYWJsZUNlbGxzTWFwO1xuICBnYW1lVHlwZTogR2FtZVR5cGU7XG59XG5cbmV4cG9ydCBjb25zdCBTdWRva3VUYWJsZTogUmVhY3QuRkM8U3Vkb2t1VGFibGVQcm9wcz4gPSAoe1xuICBnYW1lVHlwZSxcbiAgY2VsbFN0YXRlLFxufSkgPT4ge1xuICBjb25zdCBnZXRUYWJsZSA9ICgpID0+IHtcbiAgICBjb25zdCByb3dzOiBKU1guRWxlbWVudFtdID0gW107XG4gICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgZ2FtZVR5cGU7IHJvdysrKSB7XG4gICAgICBjb25zdCBjb2xzOiBKU1guRWxlbWVudFtdID0gW107XG4gICAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCBnYW1lVHlwZTsgY29sKyspIHtcbiAgICAgICAgY29uc3QgcHJvcHMgPSBjZWxsU3RhdGVbcm93ICogZ2FtZVR5cGUgKyBjb2xdO1xuICAgICAgICBjb2xzLnB1c2goXG4gICAgICAgICAgPHRkIGtleT17Y29sfT5cbiAgICAgICAgICAgIDxDZWxsIHsuLi5wcm9wc30gLz5cbiAgICAgICAgICA8L3RkPlxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcm93cy5wdXNoKDx0ciBrZXk9e3Jvd30+e2NvbHN9PC90cj4pO1xuICAgIH1cblxuICAgIHJldHVybiA8Pntyb3dzfTwvPjtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDx0YWJsZSBjbGFzc05hbWU9XCJzdWRva3VcIiBpZD1cIlN1ZG9rdVRhYmxlXCI+XG4gICAgICA8dGJvZHk+e2dldFRhYmxlKCl9PC90Ym9keT5cbiAgICA8L3RhYmxlPlxuICApO1xufTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5cbmltcG9ydCBcIi4vc2xpZGVyLmxlc3NcIjtcblxuaW1wb3J0IHsgdG9nZ2xlQ2VsbE1vZGUgfSBmcm9tIFwiLi4vZ2FtZS1wYWdlL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IGdldENlbGxNb2RlIH0gZnJvbSBcIi4uL2dhbWUtcGFnZS9kdWNrcy9zZWxlY3RvcnNcIjtcblxuZXhwb3J0IGNvbnN0IFNsaWRlcjogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgY29uc3QgY2VsbE1vZGUgPSB1c2VTZWxlY3RvcihnZXRDZWxsTW9kZSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImdhbWUtYnV0dG9uc1wiIG9uQ2xpY2s9eygpID0+IGRpc3BhdGNoKHRvZ2dsZUNlbGxNb2RlKCkpfT5cbiAgICAgIDxzcGFuPlBlbmNpbDwvc3Bhbj5cbiAgICAgIDxzcGFuPk5vdGVzPC9zcGFuPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2BzbGlkZXIgJHtjZWxsTW9kZX0tc2xpZGVyYH0gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgY3ggZnJvbSBcImNsYXNzbmFtZXNcIjtcblxuaW1wb3J0IFwiLi9nYW1lUGFnZS5sZXNzXCI7XG5cbmltcG9ydCB7IFNpZGVNZW51IH0gZnJvbSBcIi4uL3NpZGUtbWVudS9TaWRlTWVudVwiO1xuaW1wb3J0IHsgR2FtZSB9IGZyb20gXCIuLi8uLi9nZW5lcmF0b3IvZ2VuZXJhdG9yXCI7XG5pbXBvcnQgeyBTdWRva3VUYWJsZSB9IGZyb20gXCIuLi9zdWRva3UtdGFibGUvU3Vkb2t1VGFibGVcIjtcbmltcG9ydCB7IFNsaWRlciB9IGZyb20gXCIuLi9zbGlkZXIvU2xpZGVyXCI7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IGdldENlbGxQcm9wcyB9IGZyb20gXCIuL2R1Y2tzL3NlbGVjdG9yc1wiO1xuaW1wb3J0IHsgcmVzZXRHYW1lVG9vbHMsIHVwZGF0ZUdhbWVTdGF0ZSB9IGZyb20gXCIuL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IEdhbWVTdGF0ZSB9IGZyb20gXCIuL2R1Y2tzL3JlZHVjZXJcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHYW1lUGFnZVByb3BzIHtcbiAgaGlkZGVuOiBib29sZWFuO1xuICBnYW1lOiBHYW1lO1xuICByZXR1cm5Ub0xvYmJ5OiAoKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgR2FtZVBhZ2U6IFJlYWN0LkZDPEdhbWVQYWdlUHJvcHM+ID0gKHtcbiAgaGlkZGVuLFxuICBnYW1lLFxuICByZXR1cm5Ub0xvYmJ5LFxufSkgPT4ge1xuICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gIGNvbnN0IGNlbGxQcm9wcyA9IHVzZVNlbGVjdG9yKGdldENlbGxQcm9wcyk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBkaXNwYXRjaCh1cGRhdGVHYW1lU3RhdGUoR2FtZVN0YXRlLk5ldykpO1xuICB9LCBbXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBkaXNwYXRjaChyZXNldEdhbWVUb29scygpKTtcbiAgfSwgW2hpZGRlbl0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2N4KFwiZ2FtZVwiLCBoaWRkZW4gJiYgXCJoaWRkZW5cIil9PlxuICAgICAgPFNpZGVNZW51IHJldHVyblRvTG9iYnk9e3JldHVyblRvTG9iYnl9IC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdhbWUtd3JhcHBlclwiPlxuICAgICAgICA8U3Vkb2t1VGFibGUgY2VsbFN0YXRlPXtjZWxsUHJvcHN9IGdhbWVUeXBlPXtnYW1lLmdhbWVUeXBlfSAvPlxuICAgICAgICA8U2xpZGVyIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBzdG9yZSB9IGZyb20gXCIuL2R1Y2tzL3N0b3JlXCI7XG5cbmltcG9ydCB7IEFwcCB9IGZyb20gXCIuL2NvbXBvbmVudHMvYXBwL0FwcFwiO1xuaW1wb3J0IFwiLi4vc3R5bGVzL2NvbW1vbi5sZXNzXCI7XG5cblJlYWN0RE9NLnJlbmRlcihcbiAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XG4gICAgPEFwcCAvPlxuICA8L1Byb3ZpZGVyPixcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb290XCIpXG4pO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuXG5pbXBvcnQgeyBMb2JieVBhZ2UgfSBmcm9tIFwiLi4vbG9iYnktcGFnZS9Mb2JieVBhZ2VcIjtcbmltcG9ydCB7IEdhbWVQYWdlIH0gZnJvbSBcIi4uL2dhbWUtcGFnZS9HYW1lUGFnZVwiO1xuaW1wb3J0IHsgZ2V0U3RvcmFnZUtleSwgU3RvcmFnZUtleXMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvbG9jYWxTdG9yYWdlXCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcIi4uLy4uL2NvbnN0c1wiO1xuaW1wb3J0IHsgZ2V0UGFnZSwgZ2V0Q3VycmVudEdhbWUsIGdldExvYmJ5SXNMb2FkaW5nIH0gZnJvbSBcIi4vZHVja3Mvc2VsZWN0b3JzXCI7XG5pbXBvcnQgeyBzZXRQYWdlLCBoYW5kbGVOZXdVc2VyLCBoYW5kbGVDdXJyZW50VXNlciB9IGZyb20gXCIuL2R1Y2tzL2FjdGlvbnNcIjtcbmltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4uL3BvcHVwL1BvcHVwXCI7XG5cbmV4cG9ydCBjb25zdCBBcHA6IFJlYWN0LkZDID0gKCkgPT4ge1xuICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gIGNvbnN0IHNlbGVjdGVkUGFnZSA9IHVzZVNlbGVjdG9yKGdldFBhZ2UpO1xuICBjb25zdCBjdXJyZW50R2FtZSA9IHVzZVNlbGVjdG9yKGdldEN1cnJlbnRHYW1lKTtcbiAgY29uc3QgaXNMb2FkaW5nID0gdXNlU2VsZWN0b3IoZ2V0TG9iYnlJc0xvYWRpbmcpO1xuXG4gIGNvbnN0IGlzTG9iYnkgPSBzZWxlY3RlZFBhZ2UgPT09IFBhZ2UuTWVudTtcbiAgY29uc3QgcmV0dXJuVG9Mb2JieSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBkaXNwYXRjaChzZXRQYWdlKFBhZ2UuTWVudSkpO1xuICB9LCBbXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBpZCA9IGdldFN0b3JhZ2VLZXkoU3RvcmFnZUtleXMuVXNlcklkKSBhcyBzdHJpbmc7XG5cbiAgICBpZiAoIWlkKSB7XG4gICAgICBkaXNwYXRjaChoYW5kbGVOZXdVc2VyKCkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkaXNwYXRjaChoYW5kbGVDdXJyZW50VXNlcihpZCkpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPExvYmJ5UGFnZSBoaWRkZW49eyFpc0xvYmJ5fSAvPlxuICAgICAgeyFpc0xvYWRpbmcgJiYgY3VycmVudEdhbWUgJiYgKFxuICAgICAgICA8R2FtZVBhZ2VcbiAgICAgICAgICBoaWRkZW49e2lzTG9iYnl9XG4gICAgICAgICAgZ2FtZT17Y3VycmVudEdhbWV9XG4gICAgICAgICAgcmV0dXJuVG9Mb2JieT17cmV0dXJuVG9Mb2JieX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgICA8UG9wdXAgLz5cbiAgICA8Lz5cbiAgKTtcbn07XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3BvcHVwLmxlc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tZXNzYWdlLXBvcHVwIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHJpZ2h0OiAwO1xcbiAgdG9wOiAxLjg3NWVtO1xcbiAgcGFkZGluZzogMS4yNWVtO1xcbiAgd2lkdGg6IDE2LjI1ZW07XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlYmViO1xcbiAgYm94LXNoYWRvdzogMCAwIDEuMjVlbSByZ2JhKDAsIDAsIDAsIDAuNDUpO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZS1pbi1vdXQ7XFxuICBmb250LXNpemU6IDFyZW07XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxufVxcbi5tZXNzYWdlLXBvcHVwLmhpZGRlbiB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XFxuICBib3gtc2hhZG93OiBub25lO1xcbn1cXG4ubWVzc2FnZS1wb3B1cCAubWVzc2FnZSB7XFxuICBmb250LXNpemU6IDEuMjVlbTtcXG4gIGNvbG9yOiAjMDAwMDAwO1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgcGFkZGluZy1ib3R0b206IDAuNWVtO1xcbn1cXG4ubWVzc2FnZS1wb3B1cCAuYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICBtYXJnaW46IDAgNWVtO1xcbn1cXG4ubWVzc2FnZS1wb3B1cCAuYnV0dG9ucyAuaWNvbiB7XFxuICBmaWxsOiAjZmZmZmZmO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICB3aWR0aDogMWVtO1xcbiAgaGVpZ2h0OiAxZW07XFxufVxcbkBtZWRpYSAob3JpZW50YXRpb246IHBvcnRyYWl0KSBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcXG4gIC5tZXNzYWdlLXBvcHVwIHtcXG4gICAgZm9udC1zaXplOiBjYWxjKDAuNXJlbSArIDEuMnZ3KTtcXG4gIH1cXG59XFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDQ1MHB4KSB7XFxuICAubWVzc2FnZS1wb3B1cCB7XFxuICAgIGZvbnQtc2l6ZTogY2FsYygwLjVyZW0gKyAxLjF2aCk7XFxuICB9XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2J1dHRvbi5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubWVudS1idXR0b24ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcXG4gIGJvcmRlcjogMDtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbiAgYm9yZGVyLXJhZGl1czogMCAwLjZlbTtcXG4gIG1pbi13aWR0aDogNS41ZW07XFxuICBtaW4taGVpZ2h0OiAxLjllbTtcXG4gIHBhZGRpbmc6IDAuMzVlbTtcXG4gIG1hcmdpbjogMC41ZW0gMDtcXG4gIHRyYW5zaXRpb246IDAuNXM7XFxufVxcbkBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgYW5kIChtYXgtaGVpZ2h0OiA0MDBweCkge1xcbiAgLm1lbnUtYnV0dG9uIHtcXG4gICAgbWFyZ2luOiAwLjNlbSAwO1xcbiAgfVxcbn1cXG4ubWVudS1idXR0b24ucmV2ZXJzZWQge1xcbiAgYm9yZGVyLXJhZGl1czogMC42ZW0gMDtcXG59XFxuLm1lbnUtYnV0dG9uLmRpc2FibGVkIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UyZTFlMTtcXG4gIGNvbG9yOiAjMDAwMDAwO1xcbn1cXG4ubWVudS1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q0NTI4NztcXG59XFxuLmdhbWUtYnV0dG9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XFxuICBib3JkZXI6IDA7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG4gIGJvcmRlci1yYWRpdXM6IDIuNjI1ZW07XFxuICBoZWlnaHQ6IDQuMTg3NWVtO1xcbiAgd2lkdGg6IDQuMTI1ZW07XFxuICBwYWRkaW5nOiAwO1xcbiAgdHJhbnNpdGlvbjogMC41cztcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmdhbWUtYnV0dG9uLnNtYWxsIHtcXG4gIGhlaWdodDogMi41ZW07XFxuICB3aWR0aDogMi41ZW07XFxuICBmb250LXNpemU6IDFlbTtcXG59XFxuLmdhbWUtYnV0dG9uOmhvdmVyLFxcbi5nYW1lLWJ1dHRvbi5zZWxlY3RlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDQ1Mjg3O1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pY29ucy5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJAa2V5ZnJhbWVzIHJvdGF0aW5nIHtcXG4gIGZyb20ge1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcXG4gIH1cXG4gIHRvIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG4gIH1cXG59XFxuLmljb24ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbi5pY29uLnNwaW5uZXIge1xcbiAgYW5pbWF0aW9uOiByb3RhdGluZyAycyBlYXNlLW91dCBpbmZpbml0ZTtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbG9iYnlQYWdlLmxlc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5sb2JieSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcXG4gIG9wYWNpdHk6IDE7XFxufVxcbi5sb2JieS5oaWRkZW4ge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgb3BhY2l0eTogMDtcXG59XFxuLmxvYmJ5IC5sb2JieS13cmFwcGVyIHtcXG4gIGhlaWdodDogMjVyZW07XFxuICBtYXgtaGVpZ2h0OiA5MCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1heC13aWR0aDogMjIuNXJlbTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluTWVudS5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubWVudS1sb2dvIHtcXG4gIGZvbnQ6IGJvbGQgNS42MjVlbSBcXFwiZGVraXJ1XFxcIiwgY29yYmVsLCBzYW5zLXNlcmlmO1xcbiAgbWFyZ2luOiAwO1xcbiAgaGVpZ2h0OiAxZW07XFxufVxcbi5sb2FkaW5nIHtcXG4gIHdpZHRoOiAyZW07XFxufVxcbi5jb2x1bW4tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XFxufVxcbi5jb2x1bW4tY29udGFpbmVyIC5jb2x1bW4ge1xcbiAgcGFkZGluZzogMCAwLjYyNXJlbTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21lbnVDb250ZW50U2VjdGlvbi5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2VjdGlvbiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgYm94LXNoYWRvdzogMCAwIDEuMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjQ1KTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBib3JkZXItcmFkaXVzOiAxLjg3NXJlbSAwO1xcbiAgcGFkZGluZzogMS4yNXJlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2ViZWI7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBtYXgtd2lkdGg6IDkwJTtcXG4gIG1heC1oZWlnaHQ6IDkwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRvcDogNTAlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICB3aWR0aDogMzEuMjVyZW07XFxuICBoZWlnaHQ6IDI1cmVtO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxufVxcbi5zZWN0aW9uIC5jcm9zcyB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMS4yNWVtO1xcbiAgd2lkdGg6IDFlbTtcXG4gIGhlaWdodDogMWVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgdHJhbnNpdGlvbjogMC41cztcXG59XFxuLnNlY3Rpb24gLmNyb3NzOmhvdmVyIHtcXG4gIGZpbGw6ICNkNDUyODc7XFxufVxcbi5zZWN0aW9uIC5oZWFkZXIgaDIge1xcbiAgY29sb3I6ICNkNDUyODc7XFxuICBmb250LXNpemU6IDEuMjVlbTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmctYm90dG9tOiAxZW07XFxufVxcbi5zZWN0aW9uIC5zY3JvbGxhYmxlIHtcXG4gIGZsZXgtZ3JvdzogMjtcXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcXG59XFxuLnNlY3Rpb24gLnNjcm9sbGFibGUgcCB7XFxuICBjb2xvcjogIzAwMDAwMDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDAuMzEyNWVtIDA7XFxufVxcbi5zZWN0aW9uIC5mb290ZXIge1xcbiAgaGVpZ2h0OiAxLjQzNzVlbTtcXG4gIHBhZGRpbmctdG9wOiAxLjI1ZW07XFxufVxcbi5zZWN0aW9uIC5mb290ZXIgLmFycm93IHtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgaGVpZ2h0OiAxLjI1ZW07XFxuICB3aWR0aDogMS4yNWVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgdHJhbnNpdGlvbjogMC41cztcXG59XFxuLnNlY3Rpb24gLmZvb3RlciAuYXJyb3cubGVmdCB7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xcbn1cXG4uc2VjdGlvbiAuZm9vdGVyIC5hcnJvdzpob3ZlciB7XFxuICBmaWxsOiAjZDQ1Mjg3O1xcbn1cXG4uc2VjdGlvbiBhIHtcXG4gIGNvbG9yOiAjZDQ1Mjg3O1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NoZWNrYm94Lmxlc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jaGVja2JveC1sYWJlbCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogY2FsYygxLjNlbSArIDJweCk7XFxuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcXG59XFxuLmNoZWNrYm94LWxhYmVsIGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0ge1xcbiAgb3BhY2l0eTogMDtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbi5jaGVja2JveC1sYWJlbCBzcGFuIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmctbGVmdDogMmVtO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG59XFxuLmNoZWNrZWQuY2hlY2tib3gtbGFiZWwgc3Bhbjo6YWZ0ZXIge1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxufVxcbi5jaGVja2JveC1sYWJlbCBzcGFuOjpiZWZvcmUsXFxuLmNoZWNrYm94LWxhYmVsIHNwYW46OmFmdGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuLmNoZWNrYm94LWxhYmVsIHNwYW46OmJlZm9yZSB7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIGhlaWdodDogMS4zZW07XFxuICB3aWR0aDogMS4zZW07XFxuICBib3JkZXI6IDFweCBzb2xpZDtcXG4gIGxlZnQ6IDA7XFxuICBib3JkZXItcmFkaXVzOiA1MGVtO1xcbn1cXG4uY2hlY2tib3gtbGFiZWwgc3Bhbjo6YmVmb3JlOmhvdmVyIHtcXG4gIGNvbG9yOiByZWQ7XFxufVxcbi5jaGVja2JveC1sYWJlbCBzcGFuOjphZnRlciB7XFxuICBjb250ZW50OiBub25lO1xcbiAgaGVpZ2h0OiAwLjM3NWVtO1xcbiAgd2lkdGg6IDAuNTYyNWVtO1xcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZDtcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZDtcXG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XFxuICBsZWZ0OiBjYWxjKCgxLjNlbSAtIDAuNTYyNWVtKSAvIDIpO1xcbiAgdG9wOiBjYWxjKDEuM2VtIC8gNCk7XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2dhbWVQYWdlLmxlc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5nYW1lIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbiAgb3BhY2l0eTogMTtcXG59XFxuLmdhbWUuaGlkZGVuIHtcXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcXG4gIG9wYWNpdHk6IDA7XFxufVxcbi5nYW1lLXdyYXBwZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICBmb250LXNpemU6IDFyZW07XFxufVxcbkBtZWRpYSAob3JpZW50YXRpb246IHBvcnRyYWl0KSBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcXG4gIC5nYW1lLXdyYXBwZXIge1xcbiAgICBmb250LXNpemU6IGNhbGMoMC41cmVtICsgMS4ydncpO1xcbiAgfVxcbn1cXG5AbWVkaWEgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogNDUwcHgpIHtcXG4gIC5nYW1lLXdyYXBwZXIge1xcbiAgICBmb250LXNpemU6IGNhbGMoMC41cmVtICsgMS4xdmgpO1xcbiAgfVxcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zaWRlTWVudS5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2lkZS1tZW51LWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB6LWluZGV4OiAxMDtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG4uc2lkZS1tZW51IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICB0cmFuc2l0aW9uOiAwLjJzIGVhc2UtaW4tb3V0O1xcbiAgcG9pbnRlci1ldmVudHM6IGFsbDtcXG59XFxuLmhpZGRlbiAuc2lkZS1tZW51IHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XFxufVxcbi5zaWRlLW1lbnUgLm1lbnUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzYsIDIzNSwgMjM1LCAwLjk1KTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgcGFkZGluZzogMS4yNXJlbTtcXG4gIGJveC1zaGFkb3c6IDAgMCAxLjI1cmVtIHJnYmEoMCwgMCwgMCwgMC40NSk7XFxufVxcbi5zaWRlLW1lbnUgLm1lbnUgLnNpZGUtbWVudS1sb2dvIHtcXG4gIHdpZHRoOiAxNi4yNWVtO1xcbiAgaGVpZ2h0OiA2LjEyNWVtO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbn1cXG5AbWVkaWEgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogMzM1cHgpIHtcXG4gIC5zaWRlLW1lbnUgLm1lbnUgLnNpZGUtbWVudS1sb2dvIHtcXG4gICAgZm9udC1zaXplOiAwLjhyZW07XFxuICB9XFxufVxcbkBtZWRpYSAob3JpZW50YXRpb246IHBvcnRyYWl0KSBhbmQgKG1heC13aWR0aDogMzc0cHgpIHtcXG4gIC5zaWRlLW1lbnUgLm1lbnUgLnNpZGUtbWVudS1sb2dvIHtcXG4gICAgZm9udC1zaXplOiBjYWxjKDAuMjZyZW0gKyAyLjV2dyk7XFxuICB9XFxufVxcbi5zaWRlLW1lbnUgLm1lbnUgLnNpZGUtbWVudS1sb2dvIHRleHQge1xcbiAgZm9udDogYm9sZCA1ZW0gXFxcImRla2lydVxcXCIsIGNvcmJlbCwgc2Fucy1zZXJpZjtcXG4gIGRvbWluYW50LWJhc2VsaW5lOiB0ZXh0LWJlZm9yZS1lZGdlO1xcbn1cXG4uc2lkZS1tZW51IC5tZW51IC5idXR0b25zLXdyYXBwZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcXG4gIG1hcmdpbjogMS44NzVyZW0gMDtcXG59XFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDQ1MHB4KSB7XFxuICAuc2lkZS1tZW51IC5tZW51IHtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgfVxcbiAgLnNpZGUtbWVudSAubWVudSAuYnV0dG9ucy13cmFwcGVyIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgfVxcbn1cXG4uc2lkZS1tZW51IC5zaWRlLW1lbnUtYnV0dG9uIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDExMCU7XFxuICB0b3A6IDEuODc1ZW07XFxuICBoZWlnaHQ6IDJyZW07XFxuICBmaWxsOiBibGFjaztcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuLnNpZGUtbWVudSAuc2lkZS1tZW51LWJ1dHRvbiBzdmcge1xcbiAgd2lkdGg6IDJlbTtcXG4gIGhlaWdodDogMmVtO1xcbn1cXG5AbWVkaWEgKGhvdmVyOiBob3Zlcikge1xcbiAgLnNpZGUtbWVudSAuc2lkZS1tZW51LWJ1dHRvbiA6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGZpbGw6ICNkNDUyODc7XFxuICB9XFxufVxcbkBtZWRpYSAob3JpZW50YXRpb246IHBvcnRyYWl0KSBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcXG4gIC5zaWRlLW1lbnUgLnNpZGUtbWVudS1idXR0b24ge1xcbiAgICBmb250LXNpemU6IDAuOHJlbTtcXG4gIH1cXG59XFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDQ1MHB4KSB7XFxuICAuc2lkZS1tZW51IC5zaWRlLW1lbnUtYnV0dG9uIHtcXG4gICAgZm9udC1zaXplOiAwLjhyZW07XFxuICB9XFxufVxcbi5zaWRlLW1lbnUtb3ZlcmxheSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XFxufVxcbi5vcGVuZWQgLnNpZGUtbWVudS1vdmVybGF5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM2LCAyMzUsIDIzNSwgMC41KTtcXG59XFxuLmhpZGRlbiAuc2lkZS1tZW51LW92ZXJsYXkge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3Vkb2t1VGFibGUubGVzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnN1ZG9rdSB7XFxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxufVxcbi5zdWRva3UgdHI6bnRoLW9mLXR5cGUoM24pIHRkIHtcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBibGFjaztcXG59XFxuLnN1ZG9rdSB0ciB0ZCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gIHBhZGRpbmc6IDA7XFxuICB3aWR0aDogMi4xODc1ZW07XFxuICBoZWlnaHQ6IDIuMTg3NWVtO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuLnN1ZG9rdSB0ciB0ZDpudGgtb2YtdHlwZSgzbikge1xcbiAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgYmxhY2s7XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NlbGwubGVzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwidGV4dGFyZWEge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgcGFkZGluZzogMDtcXG4gIHJlc2l6ZTogbm9uZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgYm9yZGVyOiBub25lO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbnRleHRhcmVhOmZvY3VzIHtcXG4gIG91dGxpbmU6IDA7XFxufVxcbi5wZW5jaWwge1xcbiAgZm9udC1zaXplOiAxLjRlbTtcXG4gIGxldHRlci1zcGFjaW5nOiAwO1xcbiAgbGluZS1oZWlnaHQ6IDEuNTYyNWVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXG59XFxuLnJlYWRPbmx5IHtcXG4gIGZvbnQtc2l6ZTogMS40ZW07XFxuICBsZXR0ZXItc3BhY2luZzogMDtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU2MjVlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlMmUxZTE7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcbi5ub3RlcyB7XFxuICBmb250LXNpemU6IDAuN2VtO1xcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM2VtO1xcbiAgbGluZS1oZWlnaHQ6IDE7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbn1cXG4uaGlnaGxpZ2h0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGM5ZGM7XFxufVxcbi5lcnJvciB7XFxuICBsaW5lLWhlaWdodDogY2FsYygxLjU2MjVlbSAtICg0cHggKiAyKSk7XFxuICBib3JkZXI6IDRweCBzb2xpZCAjYzQwMjAyO1xcbn1cXG4uZGlzYWJsZWQge1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zbGlkZXIubGVzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmdhbWUtYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWFyZ2luLXRvcDogMS4yNWVtO1xcbiAgYm9yZGVyOiAxcHggc29saWQ7XFxuICBib3JkZXItcmFkaXVzOiA2Mi41ZW07XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG4uZ2FtZS1idXR0b25zIHNwYW4ge1xcbiAgaGVpZ2h0OiAyZW07XFxuICB3aWR0aDogMy43NWVtO1xcbiAgY29sb3I6ICMwMDAwMDA7XFxuICB6LWluZGV4OiA1O1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIGxpbmUtaGVpZ2h0OiAyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA1MGVtO1xcbiAgZm9udC1zaXplOiAxLjI1ZW07XFxufVxcbi5nYW1lLWJ1dHRvbnMgLnNsaWRlciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBoZWlnaHQ6IDIuNWVtO1xcbiAgd2lkdGg6IDQuNjg3NWVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTIsIDgyLCAxMzUsIDAuNik7XFxuICBib3JkZXItcmFkaXVzOiAyLjYyNWVtO1xcbiAgdHJhbnNpdGlvbjogMC4zcztcXG59XFxuLmdhbWUtYnV0dG9ucyAuc2xpZGVyLm5vdGVzLXNsaWRlciB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XFxufVxcbkBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XFxuICA6aG92ZXIuZ2FtZS1idXR0b25zIC5zbGlkZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMiwgODIsIDEzNSwgMC40KTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMS4xKTtcXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcXG4gIH1cXG4gIDpob3Zlci5nYW1lLWJ1dHRvbnMgLnNsaWRlci5ub3Rlcy1zbGlkZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCgxLjEpIHRyYW5zbGF0ZVgoOTAlKTtcXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQ7XFxuICB9XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbW1vbi5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbnZhciBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSByZXF1aXJlKFwiLi4vYXNzZXRzL2ZvbnRzL0Rla2lydS50dGZcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSByZXF1aXJlKFwiLi4vYXNzZXRzL2ltYWdlcy9iYWNrZ3JvdW5kLmpwZ1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6IFxcXCJkZWtpcnVcXFwiO1xcbiAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpIGZvcm1hdChcXFwidHJ1ZXR5cGVcXFwiKTtcXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcbmh0bWwge1xcbiAgZm9udDogMTZweCBcXFwiZGVraXJ1XFxcIiwgY29yYmVsLCBzYW5zLXNlcmlmO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5ib2R5IHtcXG4gIGJhY2tncm91bmQ6ICNlY2ViZWIgbm8tcmVwZWF0IGNlbnRlciAvIGNvdmVyIHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIik7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbiNyb290IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM2LCAyMzUsIDIzNSwgMC40KTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5idXR0b24ge1xcbiAgZm9udDogMS4yNXJlbSBcXFwiZGVraXJ1XFxcIiwgY29yYmVsLCBzYW5zLXNlcmlmO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcXG59XFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDMzNXB4KSB7XFxuICBidXR0b24ge1xcbiAgICBmb250LXNpemU6IDEuMXJlbTtcXG4gIH1cXG59XFxuYnV0dG9uOmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcbmEge1xcbiAgY29sb3I6ICMwMDAwMDA7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxufVxcbkBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XFxuICBhOmhvdmVyIHtcXG4gICAgY29sb3I6ICNkNDUyODc7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcbiAgfVxcbn1cXG5zdmcgdGV4dCB7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJEZWtpcnUudHRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9iYWNrZ3JvdW5kLmpwZ1wiOyIsIm1vZHVsZS5leHBvcnRzID0gXCI8IURPQ1RZUEUgaHRtbD5cXG48aHRtbCBsYW5nPVxcXCJlblxcXCI+XFxuPGhlYWQ+XFxuICA8bWV0YSBuYW1lPVxcXCJ2aWV3cG9ydFxcXCIgY29udGVudD1cXFwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTFcXFwiPlxcbiAgPG1ldGEgY2hhcnNldD1cXFwiVVRGLThcXFwiPlxcbiAgPHRpdGxlPlN1ZG9rdTwvdGl0bGU+XFxuPC9oZWFkPlxcbjxib2R5PlxcbiAgPGRpdiBpZD1cXFwicm9vdFxcXCI+PC9kaXY+XFxuPC9ib2R5PlxcbjwvaHRtbD5cXG5cIjsiXSwic291cmNlUm9vdCI6IiJ9