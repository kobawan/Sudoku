!function(e){function n(n){for(var r,i,l=n[0],c=n[1],s=n[2],m=0,p=[];m<l.length;m++)i=l[m],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&p.push(a[i][0]),a[i]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(u&&u(n);p.length;)p.shift()();return o.push.apply(o,s||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],r=!0,l=1;l<t.length;l++){var c=t[l];0!==a[c]&&(r=!1)}r&&(o.splice(n--,1),e=i(i.s=t[0]))}return e}var r={},a={0:0},o=[];function i(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=e,i.c=r,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)i.d(t,r,function(n){return e[n]}.bind(null,r));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="";var l=window.webpackJsonp=window.webpackJsonp||[],c=l.push.bind(l);l.push=n,l=l.slice();for(var s=0;s<l.length;s++)n(l[s]);var u=c;o.push([30,1]),t()}({111:function(e,n,t){var r={"./log":112};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=111},113:function(e,n,t){"use strict";t.r(n);var r,a,o,i,l=t(0),c=t.n(l),s=t(11),u=t(2),m=t(9),p=t(29),d=t(1);!function(e){e[e.Game=0]="Game",e[e.Menu=1]="Menu"}(r||(r={})),function(e){e[e.Easy=4]="Easy",e[e.Medium=5]="Medium",e[e.Hard=6]="Hard"}(a||(a={})),function(e){e[e.Default=9]="Default"}(o||(o={})),function(e){e.Pencil="pencil",e.Notes="notes",e.ReadOnly="readOnly"}(i||(i={}));var f,h,E=function(e){if(1!==e.length)for(var n=0;n<e.length;n++)for(var t=1;t<e.length-n;t++)e[n]===e[n+t]&&e.splice(n+t,1);return e},g=function(e){var n=this;this.matrix=[],this.mask=[],this.createTemplate=function(){for(var e,t=[],r=0;r<n.gameType;r++)for(var a=0;a<n.gameType;a++)e=(r*n.ratio+Math.floor(r/n.ratio)+a)%n.gameType+1,t[r*n.gameType+a]=e;return t},this.shufflePairs=function(e){for(var t,r,a=e.slice(),o=0;o<n.shuffle;o++){t=Math.ceil(Math.random()*n.gameType);do{r=Math.ceil(Math.random()*n.gameType)}while(t===r);for(var i=0;i<a.length;i++)a[i]===t?a[i]=r:a[i]===r&&(a[i]=t)}return a},this.shuffleColumns=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s*n.gameType+(t*n.ratio+c%n.ratio),o=s*n.gameType+(r*n.ratio+c%n.ratio),i=l[a],l[a]=l[o],l[o]=i}return l},this.shuffleColumnsInGrid=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s*n.gameType+(c%n.ratio*n.ratio+t),o=s*n.gameType+(c%n.ratio*n.ratio+r),i=l[a],l[a]=l[o],l[o]=i}return l},this.shuffleRowsInGrid=function(e){for(var t,r,a,o,i,l=e.slice(),c=0;c<n.shuffle;c++){t=Math.floor(Math.random()*n.ratio);do{r=Math.floor(Math.random()*n.ratio)}while(t===r);for(var s=0;s<n.gameType;s++)a=s+n.gameType*(c%n.ratio*n.ratio+t),o=s+n.gameType*(c%n.ratio*n.ratio+r),i=l[a],l[a]=l[o],l[o]=i}return l},this.maskGame=function(e){for(var t=e.slice(),r=0;r<n.gameType;r++){for(var a=[],o=void 0,i=0;i<n.difficulty;i++){do{o=Math.floor(Math.random()*n.gameType)}while(a.includes(o));a.push(o)}for(var l=0;l<n.gameType;l++)a.includes(l)&&(t[l+(n.gameType-n.ratio)*Math.floor(l/n.ratio)+r*n.ratio+Math.floor(r/n.ratio)*n.gameType*(n.ratio-1)]=0)}return t},this.generate=function(){var e=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return e.reduce((function(e,n){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return e(n.apply(void 0,t))}}))}(n.shuffleRowsInGrid,n.shuffleColumnsInGrid,n.shuffleColumns,n.shufflePairs)(n.createTemplate());return{matrix:e,mask:n.maskGame(e)}},this.gameType=e.type||o.Default,this.difficulty=e.difficulty,this.ratio=Math.sqrt(this.gameType),this.shuffle=e.shuffle||60;var t=this.generate();this.matrix=t.matrix,this.mask=t.mask};!function(e){e.DisableInGameError="DisableInGameError",e.DisableHighlighting="DisableHighlighting",e.DisableAutoNotesRemoval="DisableAutoNotesRemoval",e.UserId="UserId"}(h||(h={}));var b,O=((f={})[h.DisableInGameError]=!1,f[h.DisableHighlighting]=!1,f[h.DisableAutoNotesRemoval]=!1,f[h.UserId]="",f),v=function(e){try{var n=window.localStorage.getItem(e);if(null===n)throw Error;return JSON.parse(n)}catch(n){return O[e]}},T=function(e,n){try{window.localStorage.setItem(e,JSON.stringify(n))}catch(n){console.error("Local storage: Was not able to set item in key "+e)}},y=t(10),_=t.n(y),N="https://damp-refuge-15092.herokuapp.com",R=N+"/user",w={headers:{"Cache-Control":"no-store, no-cache"},timeout:15e3},S=function(e){return _.a.get(e,w)},C=function(e,n){return void 0===n&&(n={}),_.a.post(e,n,w)},I=function(e){try{return void 0!==e.status}catch(e){return!1}},k=function(e){return S(R+"/"+e)},x=function(e,n){return C("https://damp-refuge-15092.herokuapp.com/saveGame",{config:e,state:n,id:v(h.UserId)})};!function(e){e[e.CONTINUE=100]="CONTINUE",e[e.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",e[e.PROCESSING=102]="PROCESSING",e[e.OK=200]="OK",e[e.CREATED=201]="CREATED",e[e.ACCEPTED=202]="ACCEPTED",e[e.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",e[e.NO_CONTENT=204]="NO_CONTENT",e[e.RESET_CONTENT=205]="RESET_CONTENT",e[e.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",e[e.MULTI_STATUS=207]="MULTI_STATUS",e[e.ALREADY_REPORTED=208]="ALREADY_REPORTED",e[e.IM_USED=226]="IM_USED",e[e.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",e[e.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",e[e.FOUND=302]="FOUND",e[e.SEE_OTHER=303]="SEE_OTHER",e[e.NOT_MODIFIED=304]="NOT_MODIFIED",e[e.USE_PROXY=305]="USE_PROXY",e[e.SWITCH_PROXY=306]="SWITCH_PROXY",e[e.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",e[e.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",e[e.BAD_REQUEST=400]="BAD_REQUEST",e[e.UNAUTHORIZED=401]="UNAUTHORIZED",e[e.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",e[e.FORBIDDEN=403]="FORBIDDEN",e[e.NOT_FOUND=404]="NOT_FOUND",e[e.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",e[e.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",e[e.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",e[e.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",e[e.CONFLICT=409]="CONFLICT",e[e.GONE=410]="GONE",e[e.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",e[e.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",e[e.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",e[e.URI_TOO_LONG=414]="URI_TOO_LONG",e[e.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",e[e.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",e[e.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",e[e.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",e[e.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",e[e.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",e[e.LOCKED=423]="LOCKED",e[e.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",e[e.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",e[e.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",e[e.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",e[e.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",e[e.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",e[e.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",e[e.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",e[e.BAD_GATEWAY=502]="BAD_GATEWAY",e[e.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",e[e.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",e[e.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",e[e.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",e[e.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",e[e.LOOP_DETECTED=508]="LOOP_DETECTED",e[e.NOT_EXTENDED=510]="NOT_EXTENDED",e[e.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"}(b||(b={}));var A,M=function(e){return{type:"@app/SET_PAGE",payload:e}},D=function(e){return{type:"@app/SET_CURRENT_GAME",payload:e}},P=function(e){return{type:"@app/SET_LOBBY_IS_LOADING",payload:e}},j=function(e){return{type:"@app/SET_LOBBY_HAS_ERROR",payload:e}},L=function(e){return{type:"@app/SET_LOBBY_MENU_SECTION",payload:e}},U=function(e){return{type:"@app/SET_ERROR",payload:{message:e.message||"Unknown error occured!",status:e.status||b.INTERNAL_SERVER_ERROR}}},G={page:r.Menu,currentGame:void 0,lobbyIsLoading:!0,lobbyHasError:!1,lobbyMenuSection:void 0,errors:[]},H=function(e,n){for(var t=[],r=0;r<e;r++){t.push([]);for(var a=0;a<e;a++)n({row:r,pos:r*e+a,arr:t})}return t},z=function(e,n){for(var t=[],r=0;r<e;r++){t.push([]);for(var a=0;a<e;a++)n({col:r,pos:r+e*a,arr:t})}return t},F=function(e,n,t){for(var r,a,o=[],i=0;i<n;i++)for(var l=0;l<n;l++){r=i*n+l,o.push([]);for(var c=0;c<n;c++){a=(c+i*n)*e;for(var s=0;s<n;s++)t({row:c,col:s,grid:r,pos:a+(s+l*n),arr:o})}}return o},Y=function(e,n,t){var r=H(n,(function(n){var t=n.arr,r=n.row,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)})),a=z(n,(function(n){var t=n.arr,r=n.col,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)})),o=F(n,t,(function(n){var t=n.arr,r=n.grid,a=n.pos;e[a].mode!==i.Notes&&e[a].value&&t[r].push(a)}));return E(B(r,a,o,e))},B=function(e,n,t,r){for(var a=Object(d.f)(e,n,t),o=[],i=0;i<a.length;i++)for(var l=0;l<a[i].length;l++)for(var c=1;c<a[i].length-l;c++){var s=a[i][l],u=a[i][l+c];r[s].value===r[u].value&&(o.push(s),o.push(u))}return o},W=function(e){return e.app.page},Q=function(e){return e.app.currentGame},V=function(e){return!!e.app.currentGame},X=function(e){return e.app.lobbyIsLoading},K=function(e){return e.app.lobbyHasError},q=function(e){return e.app.lobbyMenuSection},J=function(e,n){var t={};for(var r in e)if(e.hasOwnProperty(r)){var a=e[r];t[r]=a.value?a:Object(d.a)(Object(d.a)({},a),{mode:n})}return t},Z=function(e){for(var n in e)if(e.hasOwnProperty(n)&&e[n].mode===i.Notes||!e[n].value)return!0;return!1},$=function(e,n){var t,r={};for(var a in e)if(e.hasOwnProperty(a)){var o=e[a].mode!==i.Notes&&n.value===e[a].value;r[a]=Object(d.a)(Object(d.a)({},e[a]),{withHighlight:(t=n,!!t.value&&t.mode!==i.Notes&&o)})}return r},ee=function(e){return e.game.cellMode},ne=function(e){return e.game.cellProps},te=function(e){return[pe.Win,pe.GameOver].includes(function(e){return e.game.gameState}(e))},re=function(e,n,t,r,a){var o=function(e,n,t,r){var a=H(e,(function(e){var n=e.arr,r=e.row,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)})),o=z(e,(function(e){var n=e.arr,r=e.col,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)})),l=F(e,n,(function(e){var n=e.arr,r=e.grid,a=e.pos;t[a].mode===i.Notes&&t[a].value&&n[r].push(a)}));return E(Object(d.f)(a[r.x],o[r.y],l[r.grid]))}(e,n,t,a);if(o.length){var l={};for(var c in t)if(t.hasOwnProperty(c)){var s=t[c],u=s.value;if(o.includes(+c))u=+(""+u).split("").filter((function(e){return""+r.value!==e})).join("")||0;l[c]=Object(d.a)(Object(d.a)({},s),{value:u})}return l}},ae=t(6),oe=t.n(ae),ie=(t(56),t(58),function(e){return l.createElement("button",{className:["menu-button",e.reversed?"reversed":null,e.disabled?"disabled":null].join(" "),onClick:e.onClick,key:e.index},e.value)}),le=function(e){return e.map((function(e,n){return l.createElement(ie,Object(d.a)({},e,{key:n}))}))};!function(e){e[e.Default=0]="Default",e[e.Small=1]="Small"}(A||(A={}));var ce,se,ue=function(e){var n=e.value,t=e.icon,r=e.onClick,a=e.size,o=void 0===a?A.Default:a,i=e.selected,c=void 0!==i&&i;return l.createElement("button",{className:["game-button",c?"selected":null,o===A.Small?"small":null].join(" "),onClick:r},n,t)},me=function(e){return e.popup};!function(e){e.Solve="Solve",e.Reset="Reset",e.Win="Win",e.Duplicates="Duplicates",e.Check="Check",e.NetworkError="NetworkError"}(se||(se={}));var pe,de=((ce={})[se.Solve]=l.createElement("span",null,"Are you sure you want to solve?"),ce[se.Reset]=l.createElement("span",null,"Are you sure you want to reset?"),ce[se.Win]=l.createElement(l.Fragment,null,l.createElement("span",null,"Correct!"),l.createElement("br",null),l.createElement("span",null,"You have won the game!")),ce[se.Duplicates]=l.createElement("span",null,"Some cell values are incorrect."),ce[se.Check]=l.createElement("span",null,"Correct so far!"),ce[se.NetworkError]=l.createElement("span",null,"Your network connection is down. Please check your network and try later."),ce),fe=function(){var e=Object(u.c)(me),n=e.text,t=e.hidden,r=e.buttons,a=t||!n||!r;return l.createElement("div",{className:oe()("message-popup",a&&"hidden")},l.createElement("div",{className:"message"},n&&de[n]),l.createElement("div",{className:"buttons"},r&&function(e){return e.map((function(e,n){return l.createElement(ue,Object(d.a)({},e,{key:n}))}))}(r)))},he=(t(60),l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"m29.082202,23.702671c0,0 0,0 0,0l-8.702823,-8.702823l8.702823,-8.702823c0,0 0,0 0,\n      0c0.093712,-0.093712 0.161606,-0.203681 0.204637,-0.319387c0.118575,-0.318431 0.050681,\n      -0.691368 -0.205594,-0.947643l-4.110915,-4.110915c-0.256275,-0.256275 -0.629212,\n      -0.324168 -0.947643,-0.204637c-0.116662,0.043031 -0.225675,0.110925 -0.320343,0.204637c0,\n      0 0,0 0,0l-8.702823,8.702823l-8.702823,-8.702823c0,0 0,0 0,0c-0.093712,-0.093712 -0.203681,\n      -0.161606 -0.319387,-0.204637c-0.318431,-0.118575 -0.691368,-0.050681 -0.947643,0.204637l-4.110915,\n      4.110915c-0.256275,0.256275 -0.324168,0.629212 -0.205594,0.947643c0.043031,0.116662 0.110925,\n      0.225675 0.204637,0.319387c0,0 0,0 0,0l8.702823,8.702823l-8.702823,8.702823c0,0 0,0 0,0c-0.093712,\n      0.093712 -0.161606,0.203681 -0.204637,0.319387c-0.118575,0.318431 -0.050681,0.691368 0.205594,\n      0.947643l4.110915,4.110915c0.256275,0.256275 0.629212,0.324168 0.947643,0.205594c0.116662,\n      -0.043031 0.225675,-0.110925 0.319387,-0.204637c0,0 0,0 0,0l8.702823,-8.702823l8.702823,8.702823c0,\n      0 0,0 0,0c0.093712,0.093712 0.203681,0.161606 0.319387,0.204637c0.318431,0.118575 0.691368,\n      0.050681 0.947643,-0.205594l4.110915,-4.110915c0.256275,-0.256275 0.324168,-0.629212 0.205594,\n      -0.947643c-0.043031,-0.116662 -0.110925,-0.225675 -0.204637,-0.319387l0.000956,0z"}))),Ee=l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"m29.5315,15l-14.063,-14.063l0,8.438l-15,0l0,11.25l15,0l0,8.438l14.063,-14.063z"})),ge=l.createElement("svg",{viewBox:"0 0 30 30",className:"icon"},l.createElement("path",{d:"M25.313 3.75l-14.063 14.063-6.563-6.563-4.688 4.688 11.25 11.25 18.75-18.75z"})),be=l.createElement("svg",{viewBox:"0 5 30 30",className:"icon"},l.createElement("path",{d:"M1.875 5.625h26.25v5.625h-26.25zM1.875 13.125h26.25v5.625h-26.25zM1.875 20.625h26.25v5.625h-26.25z"})),Oe=l.createElement("svg",{className:"icon spinner",viewBox:"0 0 32 32"},l.createElement("path",{d:"M16 9.472c-1.030 0-1.865-0.835-1.865-1.865v-5.596c0-1.030 0.835-1.865 1.865-1.865s1.865 0.835 1.865 1.865v5.596c0 1.030-0.835 1.865-1.865 1.865z"}),l.createElement("path",{d:"M16 31.155c-0.644 0-1.166-0.522-1.166-1.166v-5.596c0-0.644 0.522-1.166 1.166-1.166s1.166 0.522 1.166 1.166v5.596c0 0.644-0.522 1.166-1.166 1.166z"}),l.createElement("path",{d:"M11.805 10.48c-0.604 0-1.192-0.314-1.516-0.875l-2.798-4.846c-0.483-0.836-0.196-1.906 0.64-2.389s1.906-0.196 2.389 0.64l2.798 4.846c0.483 0.836 0.196 1.906-0.64 2.389-0.275 0.159-0.576 0.235-0.873 0.235z"}),l.createElement("path",{d:"M22.995 29.164c-0.363 0-0.715-0.188-0.91-0.525l-2.798-4.846c-0.29-0.502-0.118-1.143 0.384-1.433s1.143-0.118 1.433 0.384l2.798 4.846c0.29 0.502 0.118 1.143-0.384 1.433-0.165 0.095-0.346 0.141-0.524 0.141z"}),l.createElement("path",{d:"M8.729 13.436c-0.277 0-0.557-0.070-0.814-0.219l-4.846-2.798c-0.781-0.451-1.048-1.449-0.597-2.229s1.449-1.048 2.229-0.597l4.846 2.798c0.781 0.451 1.048 1.449 0.597 2.229-0.302 0.524-0.851 0.816-1.415 0.816z"}),l.createElement("path",{d:"M28.114 23.927c-0.158 0-0.319-0.040-0.465-0.125l-4.846-2.798c-0.446-0.258-0.599-0.828-0.341-1.274s0.828-0.599 1.274-0.341l4.846 2.798c0.446 0.258 0.599 0.828 0.341 1.274-0.173 0.299-0.486 0.466-0.809 0.466z"}),l.createElement("path",{d:"M7.607 17.515h-5.596c-0.837 0-1.516-0.678-1.516-1.515s0.678-1.515 1.516-1.515h5.596c0.837 0 1.516 0.678 1.516 1.515s-0.678 1.515-1.516 1.515z"}),l.createElement("path",{d:"M29.989 16.933c-0 0 0 0 0 0h-5.596c-0.515-0-0.933-0.418-0.933-0.933s0.418-0.933 0.933-0.933c0 0 0 0 0 0h5.596c0.515 0 0.933 0.418 0.933 0.933s-0.418 0.933-0.933 0.933z"}),l.createElement("path",{d:"M3.886 24.394c-0.483 0-0.954-0.251-1.213-0.7-0.386-0.669-0.157-1.525 0.512-1.911l4.846-2.798c0.669-0.387 1.525-0.157 1.911 0.512s0.157 1.525-0.512 1.911l-4.846 2.798c-0.22 0.127-0.461 0.188-0.698 0.188z"}),l.createElement("path",{d:"M23.27 12.736c-0.322 0-0.636-0.167-0.809-0.466-0.258-0.446-0.105-1.016 0.341-1.274l4.846-2.798c0.446-0.257 1.016-0.105 1.274 0.341s0.105 1.016-0.341 1.274l-4.846 2.798c-0.147 0.085-0.307 0.125-0.465 0.125z"}),l.createElement("path",{d:"M9.004 29.397c-0.218 0-0.438-0.055-0.64-0.172-0.613-0.354-0.823-1.138-0.469-1.752l2.798-4.846c0.354-0.613 1.138-0.823 1.752-0.469s0.823 1.138 0.469 1.752l-2.798 4.846c-0.237 0.411-0.668 0.641-1.112 0.641z"}),l.createElement("path",{d:"M20.196 9.664c-0.158 0-0.319-0.040-0.465-0.125-0.446-0.258-0.599-0.828-0.341-1.274l2.798-4.846c0.258-0.446 0.828-0.599 1.274-0.341s0.599 0.828 0.341 1.274l-2.798 4.846c-0.173 0.299-0.486 0.466-0.809 0.466z"})),ve=function(e){return{type:"@popup/SHOW_POPUP",payload:e}},Te=function(e){return{type:"@game/SET_CELL_PROPS",payload:e}},ye=function(e){return{type:"@game/SET_CELL_VALUE",payload:e}},_e=function(e){return function(n,t){var r=Q(t()),a=ne(t());e===pe.New&&r?(n(Te(function(e){var n={};return e.forEach((function(e,t){var r=0!==e;n[t]={value:e,withHighlight:!1,withError:!1,mode:r?i.ReadOnly:i.Pencil}})),n}(r.mask))),n({type:"@game/RESET_GAME_TOOLS"})):e===pe.GameOver&&r?(n(Te(function(e,n){var t={};return e.forEach((function(e,r){var a=n[r]&&n[r].mode===i.ReadOnly;t[r]={value:e,withHighlight:!1,withError:!1,mode:a?i.ReadOnly:i.Pencil}})),t}(r.matrix,a))),n({type:"@game/RESET_GAME_TOOLS"})):e===pe.Win&&(n({type:"@game/RESET_GAME_TOOLS"}),function(e){e(ve({text:se.Win,buttons:[{size:A.Small,icon:ge,onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(n)),n({type:"@game/SET_GAME_STATE",payload:e})}},Ne=function(){return function(e,n){var t=Q(n()),r=ne(n()),a=Y(r,t.gameType,t.ratio),o=Z(r);0!==a.length||o?(e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),function(e,n){e(ve({text:n?se.Duplicates:se.Check,buttons:[{size:A.Small,icon:ge,onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(e,!!a.length)):e(_e(pe.Win))}},Re=function(){return function(e,n){var t=Q(n()),r=ne(n()),a=Y(r,t.gameType,t.ratio),o=function(e,n){var t={},r=v(h.DisableInGameError);if(!v(h.DisableHighlighting)||!r){for(var a in e)if(e.hasOwnProperty(a)){var o=+a;t[o]=Object(d.a)(Object(d.a)({},e[o]),{withHighlight:!1,withError:!r&&n.includes(o)})}return t}}(r,a);o&&e(Te(o));var i=Z(r);0!==a.length||i||e(_e(pe.Win))}},we=function(e){return function(n,t){var r=t(),a=Q(r),o=ne(r),l=ee(r),c=o[e.x*a.gameType+e.y];if(function(e){var n=e.cellMode,t=e.selectedCell,r=v(h.DisableAutoNotesRemoval);return n===i.Pencil&&t.mode===i.Pencil&&t.value&&!r}({cellMode:l,selectedCell:c})){var s=re(a.gameType,a.ratio,o,c,e);s&&n(Te(s))}}};!function(e){e[e.New=0]="New",e[e.Playing=1]="Playing",e[e.Win=2]="Win",e[e.GameOver=3]="GameOver"}(pe||(pe={}));var Se,Ce={cellMode:i.Pencil,cellProps:{},gameState:pe.New},Ie={hidden:!0},ke={isOpen:!1},xe=Object(m.c)({app:function(e,n){switch(void 0===e&&(e=G),n.type){case"@app/SET_PAGE":return Object(d.a)(Object(d.a)({},e),{page:n.payload});case"@app/SET_CURRENT_GAME":return Object(d.a)(Object(d.a)({},e),{currentGame:n.payload});case"@app/SET_LOBBY_HAS_ERROR":return Object(d.a)(Object(d.a)({},e),{lobbyHasError:n.payload});case"@app/SET_LOBBY_IS_LOADING":return Object(d.a)(Object(d.a)({},e),{lobbyIsLoading:n.payload});case"@app/SET_LOBBY_MENU_SECTION":return Object(d.a)(Object(d.a)({},e),{lobbyMenuSection:n.payload});case"@app/SET_ERROR":return Object(d.a)(Object(d.a)({},e),{errors:Object(d.f)([n.payload],e.errors.filter((function(e){return e.message!==n.payload.message})))});case"@app/REMOVE_ERROR":return Object(d.a)(Object(d.a)({},e),{errors:e.errors.filter((function(e){return e.message!==n.payload.message}))});default:return e}},game:function(e,n){var t;void 0===e&&(e=Ce);var r=e.cellMode,a=e.cellProps;switch(n.type){case"@game/TOGGLE_CELL_MODE":var o=r===i.Pencil?i.Notes:i.Pencil;return Object(d.a)(Object(d.a)({},e),{cellMode:o,cellProps:J(a,o)});case"@game/HIGHLIGHT_CELLS":return v(h.DisableHighlighting)?e:Object(d.a)(Object(d.a)({},e),{cellProps:$(a,n.payload)});case"@game/SET_CELL_VALUE":var l=n.payload,c=l.pos,s=l.value,u=e.cellProps[c];return Object(d.a)(Object(d.a)({},e),{cellProps:Object(d.a)(Object(d.a)({},e.cellProps),(t={},t[c]=Object(d.a)(Object(d.a)({},u),{value:s,mode:e.cellMode}),t))});case"@game/SET_GAME_STATE":return Object(d.a)(Object(d.a)({},e),{gameState:n.payload});case"@game/SET_CELL_PROPS":return Object(d.a)(Object(d.a)({},e),{cellProps:n.payload});case"@game/RESET_GAME_TOOLS":return Object(d.a)(Object(d.a)({},e),{cellMode:i.Pencil});case"@app/SET_CURRENT_GAME":return Ce;default:return e}},popup:function(e,n){switch(void 0===e&&(e=Ie),n.type){case"@popup/SHOW_POPUP":return Object(d.a)(Object(d.a)({},n.payload),{hidden:!1});case"@popup/HIDE_POPUP":case"@game/RESET_GAME_TOOLS":return Object(d.a)(Object(d.a)({},e),{hidden:!0});case"@app/SET_CURRENT_GAME":return Ie;default:return e}},sideMenu:function(e,n){switch(void 0===e&&(e=ke),n.type){case"@sideMenu/TOGGLE_SIDE_MENU":return Object(d.a)(Object(d.a)({},e),{isOpen:!e.isOpen});case"@game/RESET_GAME_TOOLS":return Object(d.a)(Object(d.a)({},e),{isOpen:!1});case"@app/SET_CURRENT_GAME":return ke;default:return e}}}),Ae=Object(m.d)(xe,Object(m.a)(p.a,(function(e){var n=e.dispatch;return function(e){return function(t){return"@app/SET_ERROR"===t.type&&"Network Error"===t.payload.message&&n(ve({text:se.NetworkError,buttons:[{size:A.Small,icon:ge,onClick:function(){n({type:"@popup/HIDE_POPUP"}),n({type:"@app/REMOVE_ERROR",payload:{message:t.payload.message}})}}]})),e(t)}}})));t(62),t(64);!function(e){e.Stats="Stats",e.Settings="Settings",e.Rules="Rules",e.About="About",e.Contacts="Contacts"}(Se||(Se={}));var Me,De=[Se.Stats,Se.Settings,Se.Rules,Se.About],Pe=function(){var e=Object(u.b)(),n=Object(u.c)(X),t=Object(u.c)(K),o=Object(u.c)(V),i=Object(l.useCallback)((function(n){e(function(e){return function(n){return Object(d.b)(void 0,void 0,void 0,(function(){var t,a,o,i;return Object(d.d)(this,(function(l){switch(l.label){case 0:n(P(!0)),t=new g(e),t.shuffle,a=Object(d.e)(t,["shuffle"]),l.label=1;case 1:return l.trys.push([1,3,,4]),[4,x(a,"initialState")];case 2:if(o=l.sent().data,I(o))throw o;return n(D(t)),n(P(!1)),n(M(r.Game)),[3,4];case 3:return i=l.sent(),n(U(i)),n(P(!1)),n(j(!0)),[3,4];case 4:return[2]}}))}))}}(n))}),[]),s=[{value:"Resume",disabled:!o,onClick:o?function(){return e(M(r.Game))}:function(){}},{value:"Easy",onClick:function(){return i({difficulty:a.Easy})}},{value:"Medium",onClick:function(){return i({difficulty:a.Medium})}},{value:"Hard",onClick:function(){return i({difficulty:a.Hard})}}],m=De.map((function(n){return{value:n,onClick:function(){return e(L(n))}}}));return c.a.createElement(c.a.Fragment,null,c.a.createElement("h1",{className:"menu-logo"},"Sudoku"),c.a.createElement("div",{className:"column-container"},t&&c.a.createElement("h3",null,"An error has occurred :(",c.a.createElement("br",null),"Please refresh the page!"),n&&!t&&c.a.createElement("div",{className:"loading"},Oe),!n&&!t&&c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"column"},le(s)),c.a.createElement("div",{className:"column"},le(m)))),c.a.createElement("span",null,c.a.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan")))};t(66);!function(e){e[e.Right=0]="Right",e[e.Left=1]="Left"}(Me||(Me={}));var je,Le=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){var e=["arrow",this.props.arrow===Me.Left?"left":null].join(" ");return l.createElement("div",{className:"section"},l.createElement("div",{className:"cross",onClick:this.props.crossOnClick},he),l.createElement("div",{className:"header"},l.createElement("h2",null,this.props.title)),l.createElement("div",{className:"scrollable"},this.props.content),this.props.withFooter&&l.createElement("div",{className:"footer"},l.createElement("div",{className:e,onClick:this.props.arrowOnClick},Ee)))},n}(l.PureComponent),Ue=(t(68),function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={isChecked:!!v(n.props.storageKey)},n.onChange=function(){var e=!n.state.isChecked;T(n.props.storageKey,e),n.setState({isChecked:e})},n}return Object(d.c)(n,e),n.prototype.render=function(){var e=this.state.isChecked?"checked":"";return l.createElement("label",{className:"checkbox-label "+e},l.createElement("input",{className:"checkbox",type:"checkbox",checked:this.state.isChecked,onChange:this.onChange}),l.createElement("span",null,this.props.text))},n}(l.PureComponent)),Ge=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.getContent=function(){var e={text:"Disable in-game error",storageKey:h.DisableInGameError},n={text:"Disable cell highlighting",storageKey:h.DisableHighlighting},t={text:"Disable automatic removal of notes values",storageKey:h.DisableAutoNotesRemoval};return l.createElement(l.Fragment,null,l.createElement(Ue,Object(d.a)({},e)),l.createElement(Ue,Object(d.a)({},n)),l.createElement(Ue,Object(d.a)({},t)))},n}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Settings,content:this.getContent(),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),He=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Rules,content:l.createElement(l.Fragment,null,l.createElement("p",null,"The classic Sudoku game involves a table of 81 squares. The table is divided into nine 3x3 grids, each containing nine squares."),l.createElement("p",null,"To win the game, each of the nine grids has to contain all the numbers 1-9 within its cells. Each number can only appear once in a row, column or grid.")),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),ze=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Contacts,withFooter:!0,arrow:Me.Left,content:l.createElement(l.Fragment,null,l.createElement("p",null,l.createElement("strong",null,"Developer:")," Sara Nordmyr da Cunha",l.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan")),l.createElement("p",null,l.createElement("strong",null,"Bug reporting: "),l.createElement("a",{href:"https://github.com/kobawan/sudoku/issues",target:"_blank",rel:"noopener noreferrer"},"https://github.com/kobawan/sudoku/issues"))),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Fe=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.Stats,content:l.createElement("p",null,"TBD"),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Ye=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return Object(d.c)(n,e),n.prototype.render=function(){return l.createElement(Le,{title:Se.About,withFooter:!0,content:l.createElement(l.Fragment,null,l.createElement("p",null,"Hi! My name is Sara, or Kobawan in the interwebz. I've always been a fan of puzzles, so when I started programming, I came up with the idea to combine my two joys of puzzles and programming, to create this website."),l.createElement("p",null,"It's been a fun project to create. Sometimes challenging and time-consuming, but in the end, a very good opportunity to learn programming."),l.createElement("p",null,"Along with creating more projects than I can handle, I also knit, play with my dogs, and binge watch netflix."),l.createElement("p",null,"I hope you enjoy!")),crossOnClick:this.props.crossOnClick,arrowOnClick:this.props.arrowOnClick})},n}(l.PureComponent),Be=((je={})[Se.Stats]=Fe,je[Se.Settings]=Ge,je[Se.Rules]=He,je[Se.About]=Ye,je[Se.Contacts]=ze,je),We=function(e){var n=e.hidden,t=Object(u.b)(),r=Object(u.c)(X),a=Object(u.c)(K),o=Object(u.c)(q),i=Object(l.useCallback)((function(){if(!o)return null;var e=Be[o];return c.a.createElement(e,{crossOnClick:function(){return t(L(void 0))},arrowOnClick:function(){o!==Se.About?o!==Se.Contacts||t(L(Se.About)):t(L(Se.Contacts))}})}),[o]);return c.a.createElement("div",{className:oe()("lobby",n&&"hidden")},c.a.createElement("div",{className:"lobby-wrapper"},c.a.createElement(Pe,null),!r&&!a&&i()))},Qe=(t(70),t(72),function(e){return e.sideMenu.isOpen}),Ve=function(e){var n=e.returnToLobby,t=Object(u.b)(),r=Object(u.c)(Qe),a=Object(l.useCallback)((function(){return t({type:"@sideMenu/TOGGLE_SIDE_MENU"})}),[]),o=[{value:"Return",onClick:n},{value:"Reset",onClick:function(){return function(e){e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),e(ve({text:se.Reset,buttons:[{size:A.Small,value:"Yes",onClick:function(){return e(_e(pe.New))}},{size:A.Small,value:"No",onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(t)}},{value:"Check",onClick:function(){return t(Ne())}},{value:"Solve",onClick:function(){return function(e){e({type:"@sideMenu/TOGGLE_SIDE_MENU"}),e(ve({text:se.Solve,buttons:[{size:A.Small,value:"Yes",onClick:function(){return e(_e(pe.GameOver))}},{size:A.Small,value:"No",onClick:function(){return e({type:"@popup/HIDE_POPUP"})}}]}))}(t)}}];return c.a.createElement("div",{className:oe()("side-menu-container",r?"opened":"hidden")},c.a.createElement("div",{className:"side-menu-overlay",onClick:a}),c.a.createElement("div",{className:"side-menu"},c.a.createElement("div",{className:"menu"},c.a.createElement("svg",{className:"side-menu-logo"},c.a.createElement("text",null,"Sudoku")),c.a.createElement("div",{className:"buttons-wrapper"},le(o)),c.a.createElement("span",null,c.a.createElement("a",{href:"https://github.com/kobawan",target:"_blank",rel:"noopener noreferrer"},"@kobawan"))),c.a.createElement("div",{className:"side-menu-button",onClick:a},be)))},Xe=(t(74),t(76),function(e,n){var t=n.parentElement,r=t.parentElement.rowIndex,a=t.cellIndex;return{x:r,y:a,grid:Math.floor(r/e)*e+Math.floor(a/e)}}),Ke=function(e){var n=e.game,t=e.cell,r=Xe(n.ratio,t),a=r.x,o=r.y;return a*n.gameType+o},qe=function(e){var n=e.mode,t=e.value,r=e.withError,a=e.withHighlight,o=Object(u.b)(),c=Object(u.c)(ee),s=Object(u.c)(ne),m=Object(u.c)(Q),p=Object(u.c)(te),d=function(e){var n=e.target,t=Ke({game:m,cell:n}),r=s[t];!function(e){var n=e.cell,t=e.props,r=e.cellMode;(r===i.Notes&&t.mode===i.Pencil||r===i.Pencil&&t.mode!==i.ReadOnly)&&n.select()}({cell:n,props:r,cellMode:c}),o({type:"@game/HIGHLIGHT_CELLS",payload:r})};return l.createElement("textarea",{readOnly:n===i.ReadOnly||p,maxLength:n!==i.Notes?1:9,rows:1,cols:1,value:t||"",className:oe()(n,p&&"disabled",r&&n!==i.Notes&&"error",a&&n!==i.Notes&&"highlight"),onKeyUp:p?void 0:function(e){var n=e.target,t=Xe(m.ratio,n);o(we(Xe(m.ratio,n))),o(Re()),function(e,n){var t=document.querySelector("#SudokuTable"),r=n.x,a=n.y;switch(e){case 37:0===a?a=8:a--;break;case 38:0===r?r=8:r--;break;case 39:8===a?a=0:a++;break;case 40:8===r?r=0:r++}t.rows[r].cells[a].children[0].focus()}(e.keyCode,t)},onFocus:p?void 0:d,onClick:p?void 0:d,onChange:p||n===i.ReadOnly?void 0:function(e){var n=e.target,t=Ke({game:m,cell:n});o(function(e,n){return function(t,r){if(""!==n)if(n.match(/^[1-9]+$/g)){var a=void 0;a=ee(r())===i.Pencil?+n||0:+E(n.split("").map((function(e){return+e})).sort()).join("")||0,t(ye({pos:e,value:a}))}else;else t(ye({pos:e,value:0}))}}(t,n.value))}})},Je=function(e){var n=e.gameType,t=e.cellState;return l.createElement("table",{className:"sudoku",id:"SudokuTable"},l.createElement("tbody",null,function(){for(var e=[],r=0;r<n;r++){for(var a=[],o=0;o<n;o++){var i=t[r*n+o];a.push(l.createElement("td",{key:o},l.createElement(qe,Object(d.a)({},i))))}e.push(l.createElement("tr",{key:r},a))}return l.createElement(l.Fragment,null,e)}()))},Ze=(t(78),function(){var e=Object(u.b)(),n=Object(u.c)(ee);return l.createElement("div",{className:"game-buttons",onClick:function(){return e({type:"@game/TOGGLE_CELL_MODE"})}},l.createElement("span",null,"Pencil"),l.createElement("span",null,"Notes"),l.createElement("div",{className:"slider "+n+"-slider"}))}),$e=function(e){var n=e.hidden,t=e.game,r=e.returnToLobby,a=Object(u.b)(),o=Object(u.c)(ne);return Object(l.useEffect)((function(){a(_e(pe.New))}),[]),Object(l.useEffect)((function(){a({type:"@game/RESET_GAME_TOOLS"})}),[n]),c.a.createElement("div",{className:oe()("game",n&&"hidden")},c.a.createElement(Ve,{returnToLobby:r}),c.a.createElement("div",{className:"game-wrapper"},c.a.createElement(Je,{cellState:o,gameType:t.gameType}),c.a.createElement(Ze,null)))};t(80);s.render(l.createElement(u.a,{store:Ae},l.createElement((function(){var e=Object(u.b)(),n=Object(u.c)(W),t=Object(u.c)(Q),a=Object(u.c)(X),o=n===r.Menu,i=Object(l.useCallback)((function(){e(M(r.Menu))}),[]);return Object(l.useEffect)((function(){var n=v(h.UserId);e(n?function(e){return function(n){return Object(d.b)(void 0,void 0,void 0,(function(){var t,r;return Object(d.d)(this,(function(a){switch(a.label){case 0:n(P(!0)),a.label=1;case 1:return a.trys.push([1,3,,4]),[4,k(e)];case 2:if(t=a.sent().data,I(t))throw t;return n(P(!1)),n(D(t.game.config)),[3,4];case 3:return r=a.sent(),n(U(r)),n(P(!1)),n(j(!0)),[3,4];case 4:return[2]}}))}))}}(n):function(e){return Object(d.b)(void 0,void 0,void 0,(function(){var n,t;return Object(d.d)(this,(function(r){switch(r.label){case 0:e(P(!0)),r.label=1;case 1:return r.trys.push([1,3,,4]),[4,C(R)];case 2:if(n=r.sent().data,I(n))throw n;return e(P(!1)),T(h.UserId,n),[3,4];case 3:return t=r.sent(),e(U(t)),e(P(!1)),e(j(!0)),[3,4];case 4:return[2]}}))}))})}),[]),c.a.createElement(c.a.Fragment,null,c.a.createElement(We,{hidden:!o}),!a&&t&&c.a.createElement($e,{hidden:o,game:t,returnToLobby:i}),c.a.createElement(fe,null))}),null)),document.getElementById("root"))},30:function(e,n,t){t(113),t(85),e.exports=t(86)},56:function(e,n,t){var r=t(4),a=t(57);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},57:function(e,n,t){(n=t(5)(!1)).push([e.i,".message-popup {\n  position: fixed;\n  right: 0;\n  top: 1.875em;\n  padding: 1.25em;\n  width: 16.25em;\n  background-color: #ecebeb;\n  box-shadow: 0 0 1.25em rgba(0, 0, 0, 0.45);\n  text-align: center;\n  transition: transform 0.3s ease-in-out;\n  font-size: 1rem;\n  transform: translateX(0);\n}\n.message-popup.hidden {\n  transform: translateX(100%);\n  box-shadow: none;\n}\n.message-popup .message {\n  font-size: 1.25em;\n  color: #000000;\n  cursor: default;\n  padding-bottom: 0.5em;\n}\n.message-popup .buttons {\n  display: flex;\n  justify-content: space-around;\n  margin: 0 5em;\n}\n.message-popup .buttons .icon {\n  fill: #ffffff;\n  cursor: pointer;\n  pointer-events: none;\n  width: 1em;\n  height: 1em;\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .message-popup {\n    font-size: calc(0.5rem + 1.2vw);\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .message-popup {\n    font-size: calc(0.5rem + 1.1vh);\n  }\n}\n",""]),e.exports=n},58:function(e,n,t){var r=t(4),a=t(59);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},59:function(e,n,t){(n=t(5)(!1)).push([e.i,".menu-button {\n  background-color: #000000;\n  border: 0;\n  color: #ffffff;\n  border-radius: 0 0.6em;\n  min-width: 5.5em;\n  min-height: 1.9em;\n  padding: 0.35em;\n  margin: 0.5em 0;\n  transition: 0.5s;\n}\n@media (orientation: landscape) and (max-height: 400px) {\n  .menu-button {\n    margin: 0.3em 0;\n  }\n}\n.menu-button.reversed {\n  border-radius: 0.6em 0;\n}\n.menu-button.disabled {\n  pointer-events: none;\n  background-color: #e2e1e1;\n  color: #000000;\n}\n.menu-button:hover {\n  background-color: #d45287;\n}\n.game-button {\n  background-color: #000000;\n  border: 0;\n  color: #ffffff;\n  border-radius: 2.625em;\n  height: 4.1875em;\n  width: 4.125em;\n  padding: 0;\n  transition: 0.5s;\n  display: flex;\n  justify-content: center;\n}\n.game-button.small {\n  height: 2.5em;\n  width: 2.5em;\n  font-size: 1em;\n}\n.game-button:hover,\n.game-button.selected {\n  background-color: #d45287;\n}\n",""]),e.exports=n},60:function(e,n,t){var r=t(4),a=t(61);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},61:function(e,n,t){(n=t(5)(!1)).push([e.i,"@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n.icon {\n  display: block;\n  transition: transform 0.3s ease;\n  width: 100%;\n  height: 100%;\n}\n.icon.spinner {\n  animation: rotating 2s ease-out infinite;\n}\n",""]),e.exports=n},62:function(e,n,t){var r=t(4),a=t(63);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},63:function(e,n,t){(n=t(5)(!1)).push([e.i,".lobby {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: visible;\n  opacity: 1;\n}\n.lobby.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n.lobby .lobby-wrapper {\n  height: 25rem;\n  max-height: 90%;\n  width: 100%;\n  max-width: 22.5rem;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: space-between;\n}\n",""]),e.exports=n},64:function(e,n,t){var r=t(4),a=t(65);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},65:function(e,n,t){(n=t(5)(!1)).push([e.i,'.menu-logo {\n  font: bold 5.625em "dekiru", corbel, sans-serif;\n  margin: 0;\n  height: 1em;\n}\n.loading {\n  width: 2em;\n}\n.column-container {\n  display: flex;\n  flex-flow: row nowrap;\n}\n.column-container .column {\n  padding: 0 0.625rem;\n  display: flex;\n  flex-flow: column nowrap;\n}\n',""]),e.exports=n},66:function(e,n,t){var r=t(4),a=t(67);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},67:function(e,n,t){(n=t(5)(!1)).push([e.i,".section {\n  box-sizing: border-box;\n  box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.45);\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  border-radius: 1.875rem 0;\n  padding: 1.25rem;\n  background-color: #ecebeb;\n  position: fixed;\n  max-width: 90%;\n  max-height: 90%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 31.25rem;\n  height: 25rem;\n  font-size: 1rem;\n  user-select: none;\n}\n.section .cross {\n  position: absolute;\n  right: 1.25em;\n  width: 1em;\n  height: 1em;\n  cursor: pointer;\n  transition: 0.5s;\n}\n.section .cross:hover {\n  fill: #d45287;\n}\n.section .header h2 {\n  color: #d45287;\n  font-size: 1.25em;\n  text-align: center;\n  margin: 0;\n  padding-bottom: 1em;\n}\n.section .scrollable {\n  flex-grow: 2;\n  overflow-y: scroll;\n}\n.section .scrollable p {\n  color: #000000;\n  margin: 0;\n  padding: 0.3125em 0;\n}\n.section .footer {\n  height: 1.4375em;\n  padding-top: 1.25em;\n}\n.section .footer .arrow {\n  margin: 0 auto;\n  height: 1.25em;\n  width: 1.25em;\n  cursor: pointer;\n  transition: 0.5s;\n}\n.section .footer .arrow.left {\n  transform: rotate(180deg);\n}\n.section .footer .arrow:hover {\n  fill: #d45287;\n}\n.section a {\n  color: #d45287;\n  text-decoration: underline;\n}\n",""]),e.exports=n},68:function(e,n,t){var r=t(4),a=t(69);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},69:function(e,n,t){(n=t(5)(!1)).push([e.i,'.checkbox-label {\n  display: flex;\n  align-items: center;\n  height: calc(1.3em + 2px);\n  margin-bottom: 0.5em;\n}\n.checkbox-label input[type="checkbox"] {\n  opacity: 0;\n  position: fixed;\n  margin: 0;\n  padding: 0;\n}\n.checkbox-label span {\n  position: relative;\n  padding-left: 2em;\n  height: 100%;\n  line-height: 1.5;\n}\n.checked.checkbox-label span::after {\n  content: "";\n}\n.checkbox-label span::before,\n.checkbox-label span::after {\n  position: absolute;\n  display: inline-block;\n}\n.checkbox-label span::before {\n  content: "";\n  height: 1.3em;\n  width: 1.3em;\n  border: 1px solid;\n  left: 0;\n  border-radius: 50em;\n}\n.checkbox-label span::before:hover {\n  color: red;\n}\n.checkbox-label span::after {\n  content: none;\n  height: 0.375em;\n  width: 0.5625em;\n  border-left: 2px solid;\n  border-bottom: 2px solid;\n  transform: rotate(-45deg);\n  left: calc((1.3em - 0.5625em) / 2);\n  top: calc(1.3em / 4);\n}\n',""]),e.exports=n},70:function(e,n,t){var r=t(4),a=t(71);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},71:function(e,n,t){(n=t(5)(!1)).push([e.i,".game {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: visible;\n  opacity: 1;\n}\n.game.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n.game-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 1rem;\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .game-wrapper {\n    font-size: calc(0.5rem + 1.2vw);\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .game-wrapper {\n    font-size: calc(0.5rem + 1.1vh);\n  }\n}\n",""]),e.exports=n},72:function(e,n,t){var r=t(4),a=t(73);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},73:function(e,n,t){(n=t(5)(!1)).push([e.i,'.side-menu-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n  pointer-events: none;\n}\n.side-menu {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: stretch;\n  justify-content: flex-start;\n  transition: 0.2s ease-in-out;\n  pointer-events: all;\n}\n.hidden .side-menu {\n  transform: translateX(-100%);\n}\n.side-menu .menu {\n  background-color: rgba(236, 235, 235, 0.95);\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 1.25rem;\n  box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.45);\n}\n.side-menu .menu .side-menu-logo {\n  width: 16.25em;\n  height: 6.125em;\n  font-size: 1rem;\n}\n@media (orientation: landscape) and (max-height: 335px) {\n  .side-menu .menu .side-menu-logo {\n    font-size: 0.8rem;\n  }\n}\n@media (orientation: portrait) and (max-width: 374px) {\n  .side-menu .menu .side-menu-logo {\n    font-size: calc(0.26rem + 2.5vw);\n  }\n}\n.side-menu .menu .side-menu-logo text {\n  font: bold 5em "dekiru", corbel, sans-serif;\n  dominant-baseline: text-before-edge;\n}\n.side-menu .menu .buttons-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 1.875rem 0;\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .side-menu .menu {\n    justify-content: space-between;\n  }\n  .side-menu .menu .buttons-wrapper {\n    margin: 0;\n  }\n}\n.side-menu .side-menu-button {\n  position: absolute;\n  left: 110%;\n  top: 1.875em;\n  height: 2rem;\n  fill: black;\n  font-size: 1rem;\n}\n.side-menu .side-menu-button svg {\n  width: 2em;\n  height: 2em;\n}\n@media (hover: hover) {\n  .side-menu .side-menu-button :hover {\n    cursor: pointer;\n    fill: #d45287;\n  }\n}\n@media (orientation: portrait) and (max-width: 400px) {\n  .side-menu .side-menu-button {\n    font-size: 0.8rem;\n  }\n}\n@media (orientation: landscape) and (max-height: 450px) {\n  .side-menu .side-menu-button {\n    font-size: 0.8rem;\n  }\n}\n.side-menu-overlay {\n  width: 100%;\n  height: 100%;\n  pointer-events: all;\n}\n.opened .side-menu-overlay {\n  background-color: rgba(236, 235, 235, 0.5);\n}\n.hidden .side-menu-overlay {\n  display: none;\n}\n',""]),e.exports=n},74:function(e,n,t){var r=t(4),a=t(75);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},75:function(e,n,t){(n=t(5)(!1)).push([e.i,".sudoku {\n  border: 2px solid black;\n  border-collapse: collapse;\n}\n.sudoku tr:nth-of-type(3n) td {\n  border-bottom: 2px solid black;\n}\n.sudoku tr td {\n  border: 1px solid black;\n  padding: 0;\n  width: 2.1875em;\n  height: 2.1875em;\n  overflow: hidden;\n}\n.sudoku tr td:nth-of-type(3n) {\n  border-right: 2px solid black;\n}\n",""]),e.exports=n},76:function(e,n,t){var r=t(4),a=t(77);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},77:function(e,n,t){(n=t(5)(!1)).push([e.i,"textarea {\n  text-align: center;\n  padding: 0;\n  resize: none;\n  vertical-align: middle;\n  box-sizing: border-box;\n  border: none;\n  width: 100%;\n  height: 100%;\n}\ntextarea:focus {\n  outline: 0;\n}\n.pencil {\n  font-size: 1.4em;\n  letter-spacing: 0;\n  line-height: 1.5625em;\n  background-color: #ffffff;\n}\n.readOnly {\n  font-size: 1.4em;\n  letter-spacing: 0;\n  line-height: 1.5625em;\n  background-color: #e2e1e1;\n  cursor: default;\n}\n.notes {\n  font-size: 0.7em;\n  letter-spacing: 0.3em;\n  line-height: 1;\n  background-color: #ffffff;\n}\n.highlight {\n  background-color: #f8c9dc;\n}\n.error {\n  line-height: calc(1.5625em - (4px * 2));\n  border: 4px solid #c40202;\n}\n.disabled {\n  cursor: default;\n}\n",""]),e.exports=n},78:function(e,n,t){var r=t(4),a=t(79);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},79:function(e,n,t){(n=t(5)(!1)).push([e.i,".game-buttons {\n  display: flex;\n  margin-top: 1.25em;\n  border: 1px solid;\n  border-radius: 62.5em;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n}\n.game-buttons span {\n  height: 2em;\n  width: 3.75em;\n  color: #000000;\n  z-index: 5;\n  vertical-align: middle;\n  line-height: 2em;\n  text-align: center;\n  border-radius: 50em;\n  font-size: 1.25em;\n}\n.game-buttons .slider {\n  position: absolute;\n  height: 2.5em;\n  width: 4.6875em;\n  background-color: rgba(212, 82, 135, 0.6);\n  border-radius: 2.625em;\n  transition: 0.3s;\n}\n.game-buttons .slider.notes-slider {\n  transform: translateX(100%);\n}\n@media (hover: hover) {\n  :hover.game-buttons .slider {\n    background-color: rgba(212, 82, 135, 0.4);\n    transform: scaleX(1.1);\n    transform-origin: left;\n  }\n  :hover.game-buttons .slider.notes-slider {\n    transform: scaleX(1.1) translateX(90%);\n    transform-origin: right;\n  }\n}\n",""]),e.exports=n},80:function(e,n,t){var r=t(4),a=t(81);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},81:function(e,n,t){var r=t(5),a=t(82),o=t(83),i=t(84);n=r(!1);var l=a(o),c=a(i);n.push([e.i,'@font-face {\n  font-family: "dekiru";\n  src: url('+l+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\nhtml {\n  font: 16px "dekiru", corbel, sans-serif;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  background: #ecebeb no-repeat center / cover url('+c+');\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\n#root {\n  background-color: rgba(236, 235, 235, 0.4);\n  width: 100%;\n  height: 100%;\n}\nbutton {\n  font: 1.25rem "dekiru", corbel, sans-serif;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n}\n@media (orientation: landscape) and (max-height: 335px) {\n  button {\n    font-size: 1.1rem;\n  }\n}\nbutton:focus {\n  outline: none;\n}\na {\n  color: #000000;\n  text-decoration: none;\n}\n@media (hover: hover) {\n  a:hover {\n    color: #d45287;\n    text-decoration: underline;\n  }\n}\nsvg text {\n  user-select: none;\n}\n',""]),e.exports=n},83:function(e,n,t){"use strict";t.r(n),n.default=t.p+"Dekiru.ttf"},84:function(e,n,t){"use strict";t.r(n),n.default=t.p+"images/background.jpg"},85:function(e,n){e.exports='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <meta charset="UTF-8">\n  <title>Sudoku</title>\n</head>\n<body>\n  <div id="root"></div>\n</body>\n</html>\n'}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,